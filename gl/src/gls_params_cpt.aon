rem glc - Callpoint program for GLS_PARAMS
rem Program glc_glparams_cpt v8.0.0 25Apr2006

rem  +-----------------------------------------+
rem  | AddonSoftware Version 8.0.0 - 01Oct2006 |
rem  |  Copyright (c) 1981-2006 AddonSoftware  |
rem  |          All Rights Reserved            |
rem  +-----------------------------------------+

    seterr std_error
    setesc std_error
    enter 

route_callpoint: rem --- Route Callpoint to Correct Subroutine

    cp_callpoint_str$="BWAR;"
    switch fnstr_pos(rd_callpoint$(1,4),cp_callpoint_str$,5)
           case fnstr_pos("BWAR",cp_callpoint_str$,5)
                cp_temp_acct$=fnget_rec$("ACCT_INPUT")
                cp_acct_length$=str(pos("#"=cp_temp_acct$,1,0)+pos("0"=cp_temp_acct$,1,0):"00")
                cp_max_acct_len$="10"
                rd_rec_data$[fnstr_pos("ACCT_OUTPUT",rd_attr_col$[0,1],16),0]=cp_temp_acct$
                rd_rec_data$[fnstr_pos("ACCT_LENGTH",rd_attr_col$[0,1],16),0]=cp_acct_length$
                rd_rec_data$[fnstr_pos("MAX_ACCT_LEN",rd_attr_col$[0,1],16),0]=cp_max_acct_len$
           break
           case default
           break
    swend

rem --- All done

    goto std_exit

rem --- Functions

    def fnstr_pos(rd_tmp0$,rd_tmp1$,rd_tmp1)=int((pos(rd_tmp0$=rd_tmp1$,rd_tmp1)+rd_tmp1-1)/rd_tmp1)
    def fngett_attr$(rd_att0$)=rd_attr_tbl$[fnstr_pos(rd_att0$,rd_attr_def_tbl$,5)]
    def fngetc_attr$(rd_att0,rd_att0$)=rd_attr_col$[rd_att0,fnstr_pos(rd_att0$,rd_attr_def_col$,5)]
    def fngetv_attr$(rd_att0$,rd_att1$)=rd_attr_col$[fnstr_pos(rd_att0$,rd_attr_col$[0,1],16),fnstr_pos(rd_att1$,rd_attr_def_col$,5)]
    def fnget_rec$(rd_att0$)=rd_rec_data$[fnstr_pos(rd_att0$,rd_attr_col$[0,1],16),0]

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
   call stbl("+DIR_SYP")+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5)),
:                                str(err),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src

rem #include std_exit.src

std_exit: rem --- Standard called program exit (01Mar2006)

    exit

rem #endinclude std_exit.src

    end
