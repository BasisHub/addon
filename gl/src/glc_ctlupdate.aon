rem --- GL Audit Control (Set +GLCONTROL Update Flag)
rem --- Program glc_ctlupdate v8.0.0 16Apr2006 (glc_ca)
rem --- Created by adx_progconv.bbx v1.0.0 (04/16/2006 01:05:36)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright BASIS International Ltd.  All Rights Reserved.
rem --- All Rights Reserved

rem --- This program is called at the end of an update to indicate
rem --- that the update has been completed and the GL Audit Control
rem --- table needs updating as well. It simply sets the appropriate
rem --- flag in the +GLCONTROL global variable. The actual update is
rem --- performed by the glc_ctldelete program.

rem --- status: 0=No error (returned)

    seterr std_error
    setesc std_exit
    enter status

rem --- Initializations

    status=0
    updating=1

rem --- Set update flag in +GLCONTROL

    while updating
          glcontrol_template$=stbl("+GLCONTROL_TPL",err=*break)
          dim glcontrol$:glcontrol_template$
          glcontrol$=stbl("+GLCONTROL",err=*next)
          glcontrol.update_flag$="Y"
          x$=stbl("+GLCONTROL",glcontrol$,err=*next)
          break
    wend

rem --- All Done

    goto std_exit

rem #include std_error.src

std_error: rem --- Standard error handler (18Nov2014)

    if tcb(19)>0
        rem --- Escape handler
        if and(chr(tcb(19)),$08$)=$08$
            release
        else
            setesc std_error
            return
        endif
    endif

    if err=0   
        rem --- Get tcb(12) and tcb(10) to send into bac_error
        lock_byte=tcb(10)
        lock_chan=tcb(12)  
    endif

    rd_err_text$=""
    if tcb(2)=0 and tcb(5) then rd_err_text$=pgm(tcb(5),tcb(13),err=*next)
    call stbl("+DIR_SYP")+"bac_error.bbj",pgm(-2),str(tcb(5)),str(err),rd_err_text$,rd_err_act$,lock_byte,lock_chan
    if pos("ESCAPE"=rd_err_act$) seterr 0; setesc 0
    if pos("RETRY"=rd_err_act$) retry
    if pgm(-1)<>pgm(-2) status=999; exit 
    release

rem #endinclude std_error.src

rem #include std_exit.src

std_exit: rem --- Standard called program exit (01Mar2006)

    exit

rem #endinclude std_exit.src

    end
