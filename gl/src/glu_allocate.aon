rem glu - Account Allocation Update
rem Program glu_allocate v8.0.0 12May2006 (glu_ia)
rem Created by adx_progconv.bbx v1.0.3 (05/12/2006 04:59:11)

rem  +-----------------------------------------+
rem  | AddonSoftware Version 8.0.0 - 01Oct2006 |
rem  |  Copyright BASIS International Ltd.  All Rights Reserved.
rem  |          All Rights Reserved            |
rem  +-----------------------------------------+

    setesc std_error
    seterr std_error

    next_overlay$="";rem --- clear next_var and outvect! so adc_process_end doesn't loop...i.e., don't run anything after this
    if OutVect!<>null() OutVect!=null()

rem --- Open/Lock files

    files=1,begfile=1,endfile=files
    dim files$[files],options$[files],ids$[files],templates$[files],channels[files]
    files$[1]="glt-04",ids$[1]="GLE_DAILYDETAIL"
    call pgmdir$+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],
:                                   ids$[all],templates$[all],channels[all],batch,status
    if status goto std_exit_no_update
    glt04_dev=channels[1]

rem --- OK to update?

    msg_id$="AON_UPDT_QUERY"
    dim x$:stbl("+SYSINFO_TPL")
    dim msg_tokens$[1]
    x$=stbl("+SYSINFO")                                                            
    msg_tokens$[1]=x.task_desc$
    gosub disp_message
    if msg_opt$<>"Y" goto std_exit_no_update

rem --- Post to daily detail file from GL Recap work file

    call pgmdir$+"glc_update.aon",glm01_dev,glt04_dev,glw11_dev,status

rem --- Remove allocation entry header/detail records

    read (gle03_dev,key=firm_id$+batch_no$,knum="BATCH_KEY",dom=*next)
    
    while 1
        k$=key(gle03_dev,end=*break)
        if pos(firm_id$+batch_no$=k$)<>1 then break
        read record (gle03_dev)gle03a$
        gle13_key$=gle03a.firm_id$+gle03a.gl_account$
        read (gle13_dev,key=gle13_key$,dom=*next)
        while 1
            k$=key(gle13_dev,end=*break)
            if pos(gle13_key$=k$)<>1 then break
            remove (gle13_dev,key=k$)
        wend
        remove (gle03_dev,key=gle03a.firm_id$+gle03a.gl_account$)
    wend    

rem --- All done

    call pgmdir$+"glc_ctlupdate.aon",status
    call pgmdir$+"glc_ctldelete.aon",status
    call pgmdir$+"adc_batchdelete.aon",status
    goto std_exit

disp_message: rem --- Display Message Dialog

    call stbl("+DIR_SYP")+"bac_message.bbj",msg_id$,msg_tokens$[all],msg_opt$,table_chans$[all]
    return

rem #include std_error.src

std_error: rem --- Standard error handler (22Feb2013)

    if tcb(19)>0
        rem --- Escape handler
        if and(chr(tcb(19)),$08$)=$08$
            release
        else
            setesc std_error
            return
        endif
    endif

    rd_err_text$=""
    if tcb(2)=0 and tcb(5) then rd_err_text$=pgm(tcb(5),tcb(13),err=*next)
    call stbl("+DIR_SYP")+"bac_error.bbj",pgm(-2),str(tcb(5)),str(err),rd_err_text$,rd_err_act$
    if pos("ESCAPE"=rd_err_act$) seterr 0; setesc 0
    if pos("RETRY"=rd_err_act$) retry
    if pgm(-1)<>pgm(-2) status=999; exit 
    release

rem #endinclude std_error.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    msg_id$="UPDATE_COMPLETE"
    dim msg_tokens$[1]
    msg_opt$=""
    gosub disp_message
    
std_exit_no_update:

    if num(batch_no$)<>0
        unlock_key$=firm_id$+stbl("+PROCESS_ID")+stbl("+BATCH_NO")
        lock_status$=""
        call stbl("+DIR_SYP")+"bac_lock_record.bbj","ADM_PROCBATCHES",unlock_key$,"X","",rd_table_chan,rd_table_chans$[all],lock_status$
    endif
    
    call pgmdir$+"adc_progress.aon","D","","","","",0,0,0,0,status
    run stbl("+DIR_SYP")+"bas_process_end.bbj",err=*next
    release

rem #endinclude std_end.src

    end
