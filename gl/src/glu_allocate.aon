rem glu - Account Allocation Update
rem Program glu_allocate v8.0.0 12May2006 (glu_ia)
rem Created by adx_progconv.bbx v1.0.3 (05/12/2006 04:59:11)

rem  +-----------------------------------------+
rem  | AddonSoftware Version 8.0.0 - 01Oct2006 |
rem  |  Copyright (c) 1981-2006 AddonSoftware  |
rem  |          All Rights Reserved            |
rem  +-----------------------------------------+

    setesc std_error
    seterr std_error

	next_overlay$="";rem --- clear next_var and outvect! so adc_process_end doesn't loop...i.e., don't run anything after this
	if OutVect!<>null() OutVect!=null()

rem --- Open/Lock files

    files=1,begfile=1,endfile=files
    dim files$[files],options$[files],ids$[files],templates$[files],channels[files]
    files$[1]="glt-04",ids$[1]="GLE_DAILYDETAIL"
    call pgmdir$+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],
:                                   ids$[all],templates$[all],channels[all],batch,status
    if status goto std_exit
    glt04_dev=channels[1]

rem --- OK to update?

    msg_id$="AON_UPDT_QUERY"
    dim x$:stbl("+SYSINFO_TPL")
    dim msg_tokens$[1]
    x$=stbl("+SYSINFO")                                                            
    msg_tokens$[1]=x.task_desc$
    gosub disp_message
    if msg_opt$<>"Y" goto std_exit_1

rem --- Post to daily detail file from GL Recap work file

    call pgmdir$+"glc_update.aon",glm01_dev,glt04_dev,glw11_dev,status

rem --- Remove allocation entry detail records

    call pgmdir$+"adc_clearpartial.aon",action$,gle13_dev,firm_id$,status

rem --- Remove allocation entry header records

    call pgmdir$+"adc_clearpartial.aon",action$,gle03_dev,firm_id$,status

rem --- All done

    call pgmdir$+"glc_ctlupdate.aon",status
    call pgmdir$+"adc_batchdelete.aon",status
    goto std_exit

disp_message: rem --- Display Message Dialog

    call stbl("+DIR_SYP")+"bac_message.bbj",msg_id$,msg_tokens$[all],msg_opt$,table_chans$[all]
    return

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    call stbl("+DIR_SYP")+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:                                str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    msg_id$="UPDATE_COMPLETE"
    dim msg_tokens$[1]
    msg_opt$=""
    gosub disp_message
std_exit_1:
    run stbl("+DIR_SYP")+"bas_process_end.bbj",err=*next
    release

rem #endinclude std_end.src

    end
