rem glr - Recurring Journal Entry Register (Lead Overlay)
rem Program glr_recurring v8.0.0 22Apr2006 (glr_na)
rem Created by adx_progconv.bbx v1.0.1 (04/22/2006 12:19:12)

rem  +-----------------------------------------+
rem  | AddonSoftware Version 8.0.0 - 01Oct2006 |
rem  |  Copyright (c) 1981-2006 AddonSoftware  |
rem  |          All Rights Reserved            |
rem  +-----------------------------------------+

    setesc std_error
    seterr std_error

rem --- Retrieve the program path

    pgmdir$=stbl("+DIR_PGM",err=*next)

rem --- Assign input values to local variables

    cycles$="Y" 
    cycle$=cvs(Option!.getOptionData("CYCLE_CODE"),3);rem "will be null if all cycles selected
    rem --- postper$ and cycle_reversal$ used in update, but putting on the register Option Entry
    rem --- form so we don't need to build another one
    postper$=Option!.getOptionData("POSTING_YEAR")+str(num(Option!.getOptionData("POSTING_PER")):"00")
    cycle_reversal$=Option!.getOptionData("REVERSAL_TP")

rem --- Initializations

    gle01$="gle-02",gle01_alias$="GLE_RECJEHDR"
    gle11$="gle-12",gle11_alias$="GLE_RECJEDET"
    update$="glu_recurring.aon"
    je$="N"

rem --- Run register overlay

    run pgmdir$+"glr_register.aon"

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    call stbl("+DIR_SYP")+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:                                str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    run stbl("+DIR_SYP")+"bas_process_end.bbj",err=*next
    release

rem #endinclude std_end.src

    end
