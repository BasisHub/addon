rem glc - Budgets Not Implemented Warning
rem Program glc_nobudgets v8.0.0 15Apr2006 (glc_ha)
rem Created by adx_progconv.bbx v1.0.0 (04/15/2006 12:58:54)

rem  +-----------------------------------------+
rem  | AddonSoftware Version 8.0.0 - 01Oct2006 |
rem  |  Copyright BASIS International Ltd.  All Rights Reserved.
rem  |          All Rights Reserved            |
rem  +-----------------------------------------+

rem --- STATUS: 0=No error (returned)

    seterr std_error
    setesc std_exit
    enter status

rem --- Get Translator Object

    use ::bbtranslator.bbj::BBTranslator
    declare BBTranslator Translate!
    Translate! = BBTranslator.getInstance( stbl("+PROPS_NAME"), stbl("+USER_LOCALE"), null(), stbl("+PROPS_PATH") )

rem --- Retrieve the program path

    pgmdir$=fnglobal$("+DIR_PGM","")

rem --- Initializations

    dim messages$[1]
    messages$[0]=Translate!.getTranslation("AON_THE_")+$22$+Translate!.getTranslation("AON_USE_BUDGETS?")+$22$+Translate!.getTranslation("AON__GL_PARAMETER_IS_SET_TO_")+$22$+
:                Translate!.getTranslation("AON_NO")+$22$+Translate!.getTranslation("AON_._THIS_TASK_MAY_NOT_BE_USED_UNLESS_THIS_PARAMETER_IS_")+
:                Translate!.getTranslation("AON_SET_TO_")+$22$+Translate!.getTranslation("AON_YES")+$22$+"."

rem --- Display message

    call pgmdir$+"adc_stdmessage.aon",2,message$[all],0,0,0,v$,v3

done: rem --- All Done

    status=0
    goto std_exit

rem #include std_error.src

std_error: rem --- Standard error handler (22Feb2013)

    if tcb(19)>0
        rem --- Escape handler
        if and(chr(tcb(19)),$08$)=$08$
            release
        else
            setesc std_error
            return
        endif
    endif

    rd_err_text$=""
    if tcb(2)=0 and tcb(5) then rd_err_text$=pgm(tcb(5),tcb(13),err=*next)
    call stbl("+DIR_SYP")+"bac_error.bbj",pgm(-2),str(tcb(5)),str(err),rd_err_text$,rd_err_act$
    if pos("ESCAPE"=rd_err_act$) seterr 0; setesc 0
    if pos("RETRY"=rd_err_act$) retry
    if pgm(-1)<>pgm(-2) status=999; exit 
    release

rem #endinclude std_error.src

rem #include std_exit.src

std_exit: rem --- Standard called program exit (01Mar2006)

    exit

rem #endinclude std_exit.src

    end
