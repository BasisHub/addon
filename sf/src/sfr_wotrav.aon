rem --- Work Order Traveler Print - Setup
rem --- Program sfr_aa v8.0.0 04Jan2008 (sfr_aa)
rem --- Created by c:\codeport_bbj\adx_codeport.bbj v1.1.5 (01/04/2008 11:01:31)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright (c) 1981-2007 AddonSoftware
rem --- All Rights Reserved

    setesc std_error
    seterr std_error

rem --- Retrieve the program path

    pgmdir$=stbl("+DIR_PGM",err=*next)

rem --- Retrieve sysinfo data

    sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=*next)
    milestone=num(stbl("+MILESTONE",err=*next),err=*next)
    firm_id$=sysinfo.firm_id$

rem --- Open/Lock files

    files=13,begfile=1,endfile=files
    dim files$[files],options$[files],ids$[files],templates$[files],channels[files]
    files$[1]="apm-01" ,ids$[1]="APM_VENDMAST"
    files$[2]="aps_params",ids$[2]="APS_PARAMS"
    files$[3]="arm-01",ids$[3]="ARM_CUSTMAST"
    files$[4]="ars_params",ids$[4]="ARS_PARAMS"
    files$[5]="bms_params",ids$[5]="BMS_PARAMS"
    files$[6]="ivm-01",ids$[6]="IVM_ITEMMAST"
    files$[7]="ivs_params",ids$[7]="IVS_PARAMS"
    files$[8]="prs_params",ids$[8]="PRS_PARAMS"
    files$[9]="sfe-01",ids$[9]="SFE_WOMASTR"
    files$[10]="sfe-02",ids$[10]="SFE_WOOPRTN"
    files$[11]="sfe_opentrans",ids$[11]="SFE_OPENTRANS"
    files$[12]="sfm-10",ids$[12]="SFC_WOTYPECD"
    files$[13]="sfs_params",ids$[13]="SFS_PARAMS"
    call pgmdir$+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],
:                                   ids$[all],templates$[all],channels[all],batch,status
    if status goto std_exit
    apm01a_dev=channels[1]
    aps01a_dev=channels[2]
    arm01a_dev=channels[3]
    ars01a_dev=channels[4]
    bms01a_dev=channels[5]
    ivm01a_dev=channels[6]
    ivs01a_dev=channels[7]
    prs01a_dev=channels[8]
    sfe01a_dev=channels[9]
    sfe02a_dev=channels[10]
    sfe04a_dev=channels[11]
    sfm10a_dev=channels[12]
    sfs01a_dev=channels[13]

rem --- Dimension string templates

    dim apm01a$:templates$[1],aps01a$:templates$[2],arm01a$:templates$[3],
:       ars01a$:templates$[4],bms01a$:templates$[5],ivm01a$:templates$[6],
:       ivs01a$:templates$[7],prs01a$:templates$[8],sfe01a$:templates$[9],
:       sfe02a$:templates$[10],sfe04a$:templates$[11],sfm10a$:templates$[12],
:       sfs01a$:templates$[13]

rem --- Assign form input values to local variables

    restart$=option!.getOptionData("restart")
    wo_no$=option!.getOptionData("wo_no")

rem --- Retrieve parameter records

    aps01a_key$=firm_id$+"AP00"
    find record (aps01a_dev,key=aps01a_key$,err=std_missing_params) aps01a$
    ars01a_key$=firm_id$+"AR00"
    find record (ars01a_dev,key=ars01a_key$,err=std_missing_params) ars01a$
    bms01a_key$=firm_id$+"BM00"
    find record (bms01a_dev,key=bms01a_key$,err=std_missing_params) bms01a$
    ivs01a_key$=firm_id$+"IV00"
    find record (ivs01a_dev,key=ivs01a_key$,err=std_missing_params) ivs01a$
    prs01a_key$=firm_id$+"PR00"
    find record (prs01a_dev,key=prs01a_key$,err=std_missing_params) prs01a$
    sfs01a_key$=firm_id$+"SF00"
    find record (sfs01a_dev,key=sfs01a_key$,err=std_missing_params) sfs01a$

rem --- Parameters

    
    find record (sfs01a_dev,key=firm_id$+"SF"+"00",dom=std_missing_params) sfs01a$
    p6=num(sfs01a.empl_no_len$)
    t_cost$=sfs01a.print_costs$
    bm$=sfs01a.bm_interface$
    op$=sfs01a.ar_interface$,po$=po_interface$,pr$=sfs01a.pr_interface$

    if bm$="Y"
        find record (bms01a_dev,key=firm_id$+"BM00",dom=*next) bms01a$
    endif

    if op$="Y"
        find record (ars01a_dev,key=firm_id$+"AR00",dom=label1) ars01a$
        p8=num(ars01a.customer_size$)
    endif

label1:
    if po$="Y"
        find record (aps01a_dev,key=firm_id$+"AP00",dom=label2) aps01a$
        p7=num(aps01a.vendor_size$)
    endif

label2:
    if pr$="Y"
        find record (prs01a_dev,key=firm_id$+"PR00",dom=label3) prs01a$
        p6=num(prs01a.empl_no_len$)
    endif

label3:
    if pr$<>"Y" and sfs01a.overhd_type$="P" then 
        m5=num(sfs01a.def_ovd_rate$)
    endif
    find record (ivs01a_dev,key=firm_id$+"IV00",dom=std_missing_params) ivs01a$
    dim p[1],desc[3]
    p[0]=ivs01a.item_id_len
    ivs01_precision=num(ivs01a.precision$)
    p[1]=num(ivs01a.precision$)
	call stbl("+DIR_PGM")+"adc_getmask.aon","","SF","A","",m1$,0,m1
	call stbl("+DIR_PGM")+"adc_getmask.aon","","SF","U","",m2$,0,m2
	call stbl("+DIR_PGM")+"adc_getmask.aon","","SF","R","",m3$,0,m3
    desc[1]=num(ivs01a.desc_len_01$)
    desc[2]=num(ivs01a.desc_len_02$)
    desc[3]=num(ivs01a.desc_len_03$)  

rem --- Init Data
    sfs01a.firm_id$=firm_id$

rem --- Retrieve key templates

    call stbl("+DIR_SYP")+"bac_key_template.bbj","SFE_OPENTRANS","PRIMARY",sfe04a_key_tpl$,rd_table_chans$[all],status$

rem --- Check For Any Travelers to Print

    dim sfe04a_key$:sfe04a_key_tpl$
    read (sfe04a_dev,key=firm_id$,dom=*next)
    sfe04a_key$=key(sfe04a_dev,end=check_travellers)
    if sfe04a_key.firm_id$+sfe04a_key.wo_location$<>firm_id$ then 
check_travellers:
        dim message$[1]
        message$[0]="There Are No Travelers To Print."
        call pgmdir$+"adc_stdmessage.aon",0,message$[all],0,22,-1,v$,v3
        goto std_exit
    else
        print 'cf'
        i0=0
    endif

done: rem --- Overlay

    run pgmdir$+"sfr_wotrav_o1.aon"

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    call stbl("+DIR_SYP")+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:                                str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src
rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:                                   str(err:"000"),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    run stbl("+DIR_SYP")+"bas_process_end.bbj",err=*next
    release

rem #endinclude std_end.src

    end
