rem --- Closed WO Variance Report by Period - Parameter Entry
rem --- Program sfr_wovariance v8.0.0 04Jan2008 (sfr_oa)
rem --- Created by c:\codeport_bbj\adx_codeport.bbj v1.1.5 (01/04/2008 11:37:21)

        setesc std_error
        seterr std_error

rem --- Document initializations

        OutVect!=bbjAPI().getSysGui().makeVector()
        HdrVect!=bbjAPI().getSysGui().makeVector()
        BrkVect!=bbjAPI().getSysGui().makeVector()
        TotVect!=bbjAPI().getSysGui().makeVector()
        rep_date$=date(0:"%Mz/%Dz/%Yd")
        rep_date_stamp$=date(0:"%Yd%Mz%Dz")
        rep_time$=date(0:"%hz:%mz %p")
        rep_time_stamp$=date(0:"%Hz%mz%sz")
        rep_prog$=pgm(-2)

rem --- Retrieve the program path

        pgmdir$=stbl("+DIR_PGM",err=*next)

rem --- Retrieve sysinfo data

        sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
        dim sysinfo$:sysinfo_template$
        sysinfo$=stbl("+SYSINFO",err=*next)
        milestone=num(stbl("+MILESTONE",err=*next),err=*next)
        firm_id$=sysinfo.firm_id$

rem --- Open/Lock files

        files=20,begfile=1,endfile=files
        dim files$[files],options$[files],ids$[files],templates$[files],channels[files]
        files$[1]="arm-01",ids$[1]="ARM_CUSTMAST"
        files$[2]="ars_params",ids$[2]="ARS_PARAMS"
        files$[3]="gls_params",ids$[3]="GLS_PARAMS"
        files$[4]="ivm-01",ids$[4]="IVM_ITEMMAST"
        files$[5]="ivm-03",ids$[5]="IVX_ITEMPROD"
        files$[6]="ivc_whsecode",ids$[6]="IVC_WHSECODE"
        files$[7]="ivs_params",ids$[7]="IVS_PARAMS"
        files$[8]="sfe-01",ids$[8]="SFE_WOMASTR"
        files$[9]="sfe-02",ids$[9]="SFE_WOOPRTN"
        files$[10]="sfe-22",ids$[10]="SFE_WOMATL"
        files$[11]="sfe-32",ids$[11]="SFE_WOSUBCNT"
        files$[12]="sfm-10",ids$[12]="SFC_WOTYPECD"
        files$[13]="sfs_params",ids$[13]="SFS_PARAMS"
        files$[14]="sft-01",ids$[14]="SFT_OPNOPRTR"
        files$[15]="sft-03",ids$[15]="SFT_CLSOPRTR"
        files$[16]="sft-21",ids$[16]="SFT_OPNMATTR"
        files$[17]="sft-23",ids$[17]="SFT_CLSMATTR"
        files$[18]="sft-31",ids$[18]="SFT_OPNSUBTR"
        files$[19]="sft-33",ids$[19]="SFT_CLSSUBTR"
        files$[20]="sfw-02",ids$[20]="SFW_VRNCXTYP"

        options$[20]="C"

        call pgmdir$+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],
:                                   ids$[all],templates$[all],channels[all],batch,status
        if status goto std_exit
        arm01a_dev=channels[1]
        ars01a_dev=channels[2]
        gls01a_dev=channels[3]
        ivm01a_dev=channels[4]
        ivm03a_dev=channels[5]
        ivm10a_dev=channels[6]
        ivs01a_dev=channels[7]
        sfe01a_dev=channels[8]
        sfe02a_dev=channels[9]
        sfe22a_dev=channels[10]
        sfe32a_dev=channels[11]
        sfm10a_dev=channels[12]
        sfs01a_dev=channels[13]
        sft01a_dev=channels[14]
        sft03a_dev=channels[15]
        sft21a_dev=channels[16]
        sft23a_dev=channels[17]
        sft31a_dev=channels[18]
        sft33a_dev=channels[19]
        sfw02a_dev=channels[20]

rem --- Dimension string templates

    dim arm01a$:templates$[1],ars01a$:templates$[2],gls01a$:templates$[3],
:       ivm01a$:templates$[4],ivm03a$:templates$[5],ivm10a$:templates$[6],
:       ivs01a$:templates$[7],sfe01a$:templates$[8],sfe02a$:templates$[9],
:       sfe22a$:templates$[10],sfe32a$:templates$[11],sfm10a$:templates$[12],
:       sfs01a$:templates$[13],sft01a$:templates$[14],sft03a$:templates$[15],
:       sft21a$:templates$[16],sft23a$:templates$[17],sft31a$:templates$[18],
:       sft33a$:templates$[19],sfw02a$:templates$[20]

rem --- Assign form input values to local variables

        sequence$=Option!.getOptionData("report_seq")
        whse$=Option!.getOptionData("warehouse_id")
        wofrom$=Option!.getOptionData("wo_no_1")
        wothru$=Option!.getOptionData("wo_no_2")
        billfrom$=Option!.getOptionData("bill_no_1")
        billthru$=Option!.getOptionData("bill_no_2")
        custfrom$=Option!.getOptionData("customer_id_1")
        custthru$=Option!.getOptionData("customer_id_2")
        wotfrom$=Option!.getOptionData("wo_type_1")
        wotthru$=Option!.getOptionData("wo_type_2")
        period$=Option!.getOptionData("period")
        period=num(period$)
    
rem --- Retrieve parameter records

        gls01a_key$=firm_id$+"GL00"
        find record (gls01a_dev,key=gls01a_key$,err=std_missing_params) gls01a$
        ivs01a_key$=firm_id$+"IV00"
        find record (ivs01a_dev,key=ivs01a_key$,err=std_missing_params) ivs01a$
        sfs01a_key$=firm_id$+"SF00"
        find record (sfs01a_dev,key=sfs01a_key$,err=std_missing_params) sfs01a$

rem --- Parameters

        if sfs01a.ar_interface$<>"N"
            find record (ars01a_dev,key=firm_id$+"AR00",dom=std_missing_params) ars01a$
            c0=num(ars01a.customer_size$)
            c1=len(ars01a.customer_output$)
        endif

        g0=num(gls01a.acct_length$)
        g1=num(gls01a.max_acct_len$)
        i9=ivs01a.item_id_len
        i1=num(ivs01a.precision$)
        dim p[0]
        p[0]=num(sfs01a.empl_no_len$)

rem --- Init Data

        h0=132
        headings=4,h=0,when$=sysinfo.system_date$,clock$=""
        dim headings$[headings]
        headings$[0]=sysinfo.firm_name$
        headings$[1]=sysinfo.task_desc$
        l9=59
        l=l9+1
        dim j$(80,"-")
        m0$=sfs01a.empl_output$
		call stbl("+DIR_PGM")+"adc_getmask.aon","","SF","A","",m1$,0,m1
		call stbl("+DIR_PGM")+"adc_getmask.aon","","SF","U","",m2$,0,m2
        g5$=gls01a.acct_output$
        m9$="####.00-"
        m0=len(m0$)
        g5=len(g5$)
        dim desc[3]
        desc[1]=num(ivs01a.desc_len_01$)
        desc[2]=num(ivs01a.desc_len_02$)
        desc[3]=num(ivs01a.desc_len_03$)
        if period$="" then period$=sfs01a.current_per$

        call "adc_perioddates.aon",gls01a_dev,num(period$),num(sfs01a.current_year$),begdate$,enddate$,status

rem --- Headings and print positions
 
    dim columns$[14,10]
    columns = 14
        columns$[0,0]="+-----------------------------------------------------^WO#",columns$[0,1]="C",columns$[0,2]="23"
        columns$[1,0]="------------------^Operations Hours",                       columns$[1,1]="N",columns$[1,2]="9",columns$[1,3]=m4$,columns$[1,10]="T"
        columns$[2,0]="---------------^Direct",                                    columns$[2,1]="N",columns$[2,2]="7",columns$[2,3]=m1$,columns$[2,10]="T"
        columns$[3,0]="---Standard---^Ovrhd",                                      columns$[3,1]="N",columns$[3,2]="9",columns$[3,3]=m1$,columns$[3,10]="T"
        columns$[4,0]="----------------^Mat'ls Total",                             columns$[4,1]="N",columns$[4,2]="8",columns$[4,3]=m1$,columns$[4,10]="T"
        columns$[5,0]="----------------^Sub's Total",                              columns$[5,1]="N",columns$[5,2]="8",columns$[5,3]=m1$,columns$[5,10]="T"
        columns$[6,0]="--------------+^W.O Total",                                 columns$[6,1]="N",columns$[6,2]="8",columns$[6,3]=m1$,columns$[6,10]="T"
        columns$[7,0]="+------------^Operation Hours",                             columns$[7,1]="N",columns$[7,2]="7",columns$[7,3]=m2$,columns$[7,10]="T"
        columns$[8,0]="-------------^Direct",                                      columns$[8,1]="N",columns$[8,2]="7",columns$[8,3]=m1$,columns$[8,10]="T"
        columns$[9,0]="----Actual----^Ovrhd",                                      columns$[9,1]="N",columns$[9,2]="8",columns$[9,3]=m1$,columns$[9,10]="T"
        columns$[10,0]="-----------------^Mat'ls Total",                           columns$[10,1]="N",columns$[10,2]="8",columns$[10,3]=m1$,columns$[10,10]="T"
        columns$[11,0]="----------------^Sub's Total",                             columns$[11,1]="N",columns$[11,2]="8",columns$[11,3]=m1$,columns$[11,10]="T"
        columns$[12,0]="-------------+^W.O Total",                                 columns$[12,1]="N",columns$[12,2]="8",columns$[12,3]=m1$,columns$[12,10]="T"
        columns$[13,0]="^Variance",                                                columns$[13,1]="N",columns$[13,2]="8",columns$[13,3]=m1$,columns$[13,10]="T"
        columns$[14,0]="%",                                                        columns$[14,1]="N",columns$[14,2]="7",columns$[14,3]=m9$,columns$[14,10]="T"

rem --- Retrieve key templates

        call stbl("+DIR_SYP")+"bac_key_template.bbj","SFE_WOMASTR","PRIMARY",sfe01a_key_tpl$,rd_table_chans$[all],status$
        call stbl("+DIR_SYP")+"bac_key_template.bbj","SFE_WOMASTR","AO_TYP_LOC_WO",sfe03a_key_tpl$,rd_table_chans$[all],status$
        call stbl("+DIR_SYP")+"bac_key_template.bbj","SFE_WOMASTR","AO_CST_ORD_LINE",sfe03b_key_tpl$,rd_table_chans$[all],status$
        call stbl("+DIR_SYP")+"bac_key_template.bbj","SFE_WOMASTR","AO_WH_ITM_LOC_WO",sfe03c_key_tpl$,rd_table_chans$[all],status$

        call stbl("+DIR_SYP")+"bac_key_template.bbj","SFE_WOOPRTN","PRIMARY",sfe02a_key_tpl$,rd_table_chans$[all],status$
        call stbl("+DIR_SYP")+"bac_key_template.bbj","SFE_WOMATL","PRIMARY",sfe22a_key_tpl$,rd_table_chans$[all],status$
        call stbl("+DIR_SYP")+"bac_key_template.bbj","SFE_WOSUBCNT","PRIMARY",sfe32a_key_tpl$,rd_table_chans$[all],status$

        call stbl("+DIR_SYP")+"bac_key_template.bbj","SFT_OPNOPRTR","PRIMARY",sft01a_key_tpl$,rd_table_chans$[all],status$
        call stbl("+DIR_SYP")+"bac_key_template.bbj","SFT_OPNMATTR","PRIMARY",sft21a_key_tpl$,rd_table_chans$[all],status$
        call stbl("+DIR_SYP")+"bac_key_template.bbj","SFT_OPNSUBTR","PRIMARY",sft31a_key_tpl$,rd_table_chans$[all],status$

        call stbl("+DIR_SYP")+"bac_key_template.bbj","SFT_CLSOPRTR","PRIMARY",sft03a_key_tpl$,rd_table_chans$[all],status$
        call stbl("+DIR_SYP")+"bac_key_template.bbj","SFT_OPNMATTR","PRIMARY",sft23a_key_tpl$,rd_table_chans$[all],status$
        call stbl("+DIR_SYP")+"bac_key_template.bbj","SFT_OPNSUBTR","PRIMARY",sft33a_key_tpl$,rd_table_chans$[all],status$

rem --- Assign Title, Record, and keys
    if sequence$="W" then
        h3$="Work Order Sequence"
        x9$="  "
        beging$=wofrom$
        ending$=wothru$
        dim key_tpl$:sfe01a_key_tpl$
        begin_key$=firm_id$+sfe01a.wo_location$+beging$
        keynum$="PRIMARY"
    else
        if sequence$="B" then
            h3$="Bill Number Sequence"
            x9$="C"
            beging$=billfrom$
            ending$=billthru$
            dim key_tpl$:sfe03c_key_tpl$
            begin_key$=firm_id$+whse$+beging$
            keynum$="AO_WH_ITM_LOC_WO"
        else
            if sequence$="C" then
                h3$="Customer Sequence"
                x9$="B"
                beging$=custfrom$
                ending$=custthru$
                dim key_tpl$:sfe03b_key_tpl$
                begin_key$=firm_id$+beging$
                keynum$="AO_CST_ORD_LINE"
            else
                if sequence$="T" then
                    h3$="Work Order Type Sequence"
                    x9$="A"
                    beging$=wotfrom$
                    ending$=wotthru$
                    dim key_tpl$:sfe03a_key_tpl$
                    begin_key$=firm_id$+beging$
                    keynum$="AO_TYP_LOC_WO"
                endif
            endif
        endif
    endif
        h3$="Period "+period$+" From "+fndate$(begdate$)+" To "+fndate$(enddate$)
        h4$="Closed Work Orders"
        if sequence$="B" then beging$=whse$+beging$
        if ending$<>"" then ending$=whse$+ending$
        h4$=h4$+" Beginning With "
        if beging$<>"" then h4$=h4$+beging$ else h4$=h4$+"The First"
        h4$=h4$(1,pos("   "=h4$+"   ")-1)
        h4$=h4$+" And Ending With "
        if ending$<>"" h4$=h4$+ending$ else h4$=h4$+"The Last"
        h4$=h4$(1,pos("   "=h4$+"   ")-1)
        headings$[2]=h3$
        headings$[3]=h4$
rem --- Overlay

        run pgmdir$+"sfr_wovariance_o1.aon"

rem #include std_functions.src
rem --- Standard AddonSoftware functions (01Mar2006)
rem --- Functions used to retrieve form values

    def fnstr_pos(q0$,q1$,q1)=int((pos(q0$=q1$,q1)+q1-1)/q1)
    def fnget_rec_date$(q0$)=rd_rec_data$[fnstr_pos(cvs(q0$,1+2+4)+"."+
:                            cvs(q0$,1+2+4),rd_rec_data$[0,0],40),0]
    def fnget_fld_data$(q0$,q1$)=cvs(rd_rec_data$[fnstr_pos(cvs(q0$,1+2+4)+"."+
:                                cvs(q1$,1+2+4),rd_rec_data$[0,0],40),0],2)
    def fnget_table$(q0$)=rd_alias_id$

rem --- Miscellaneous functions

    def fncenter(q$,q)=int((q-len(q$))/2)

rem --- Format inventory item description

    def fnitem$(q$,q1,q2,q3)=cvs(q$(1,q1)+" "+q$(q1+1,q2)+" "+q$(q1+q2+1,q3),32)

rem --- Date/time handling functions

    def fndate$(q$)
        q1$=""
        q1$=date(jul(num(q$(1,4)),num(q$(5,2)),num(q$(7,2)),err=*next),err=*next)
        if q1$="" q1$=q$
        return q1$
    fnend
    
    def fnyy$(q$)=q$(3,2)
    def fnclock$(q$)=date(0:"%hz:%mz %p")
    def fntime$(q$)=date(0:"%Hz%mz")

rem --- fnmask$: Alphanumeric Masking Function (formerly fnf$)

    def fnmask$(q1$,q2$)
        if q2$="" q2$=fill(len(q1$),"0")
        return str(-num(q1$,err=*next):q2$,err=*next)
        q=1
        q0=0
        while len(q2$(q))
              if pos(q2$(q,1)="-()") q0=q0+1 else q2$(q,1)="X"
              q=q+1
        wend
        if len(q1$)>len(q2$)-q0 q1$=q1$(1,len(q2$)-q0)
        return str(q1$:q2$)
    fnend

rem --- fnbasename$: Strip path and optionally the suffix from a file name

    def fnbasename$(q$,q0$)
        q=max(pos("/"=q$,-1),pos(":"=q$,-1),pos(">"=q$,-1),pos("\"=q$,-1))
        if q then q$=q$(q+1)
        if q0$<>"" then q=mask(q$,q0$); if q q$=q$(1,q-1)
    return q$

rem --- fnglobal: Return numeric value of passed stbl variable

    def fnglobal(q$,q1)
        q1$=stbl(q$,err=*next),q1=num(q1$,err=*next)
        return q1
    fnend

rem --- fnglobal$: Return string value of passed STBL variable

    def fnglobal$(q$,q1$)
        q1$=stbl(q$,err=*next)
        return q1$
    fnend

rem #endinclude std_functions.src

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    call stbl("+DIR_SYP")+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:                                str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src
rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:                                   str(err:"000"),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    run stbl("+DIR_SYP")+"bas_process_end.bbj",err=*next
    release
rem #endinclude std_end.src

    end
