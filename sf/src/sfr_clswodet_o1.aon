rem --- Closed WO Detail Report
rem --- Program sfr_eb v8.0.0 07Jan2008 (sfr_eb)
rem --- Created by c:\codeport_bbj\adx_codeport.bbj v1.1.5 (01/07/2008 04:12:40)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright (c) 1981-2007 AddonSoftware
rem --- All Rights Reserved

    seterr std_error
    setesc std_error

rem --- Retrieve the program path

    pgmdir$=stbl("+DIR_PGM",err=*next)
    precision ivs01_precision

rem --- Retrieve sysinfo data

    sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=*next)
    milestone=num(stbl("+MILESTONE",err=*next),err=*next)
    firm_id$=sysinfo.firm_id$

    on o9 goto init_data,print_cl_part

init_data: rem --- Init Data
    
    dim y9$(21*6)
    y9$(1)="Work in Process"
    y9$(22)="Close to Account"
    y9$(43)="Direct Variance"
    y9$(64)="Overhead Variance"
    y9$(85)="Material Variance"
    y9$(106)="Subcontract Variance"
    more=1
    flag=0

rem --- Retrieve key templates

    call stbl("+DIR_SYP")+"bac_key_template.bbj","SFE_CMMTTRANS","PRIMARY",sfe04b_key_tpl$,rd_table_chans$[all],status$

    call pgmdir$+"adc_printer.aon",printer_dev,1,"","",status
    if status then goto std_exit

rem --- Background

    call pgmdir$+"adc_progress.aon","N","","","","",0,sfe04b_dev,1,meter_num,status

rem --- Init Read

    dim sfe04b_key$:sfe04b_key_tpl$
    sfe04b_key$=firm_id$+"  "+wo_no$
    read (sfe04b_dev,key=sfe04b_key$,dom=main_read)
    flag=1

main_read: rem --- Main Read

    while more
rem --- check flag and execute code inside if..endif
        if !flag
            sfe04b_key$=key(sfe04b_dev,end=done)
            if sfe04b_key.firm_id$+sfe04b_key.wo_location$+sfe04b_key.record_id_b$<>firm_id$+"  " then break
            read (sfe04b_dev)
        endif
rem --- reset flag so that next time while..wend loop executes from beginning
reset_flg:
        flag=0
rem --- Breaks

        call pgmdir$+"adc_progress.aon","S","","","","",0,0,1,meter_num,status

rem --- Additional Reads

        read record (sfe01a_dev,key=sfe04b_key.firm_id$+"  "+sfe04b_key.wo_no$,dom=*continue) sfe01a$
        if sfs01a.ar_interface$="Y"
            arm01a.cust_name$="*** Not On File ***"
            read record (arm01a_dev,key=firm_id$+sfe01a.customer_id$,dom=*next) arm01a$
        endif

rem --- Set Flags...

        z0$="Y"
        z1$="Y",z2$="Y",z3$="",z4$="",z5$="MOS",z6$="Y"
        o9$="sfr_eb.bbx"
        o9=1
        run pgmdir$+"sfr_worderdet_print.aon"

print_cl_part: rem --- Print The Closed Part

        dim c[5]
        ivm01a.conv_factor=sfe01a.sch_prod_qty
        ivm01a.weight=sfe01a.qty_cls_todt
        ivm01a.msrp=sfe01a.cls_inp_qty
        ivm01a.safety_stock=u[0]
        ivm01a.eoq=u[1]
        ivm01a.lead_time=sfe01a.cls_cst_todt
        ivm01a.reserved_num=ivm01a.eoq-ivm01a.lead_time
        ivm01a.dealer_num=sfe01a.cls_inp_qty*sfe01a.closed_cost

        if sfe01a.complete$<>"Y" then 
            ivm01a.maximum_qty=ivm01a.conv_factor-(ivm01a.weight+ivm01a.msrp)
        endif
        if sfe01a.wo_category$="I" then
            find record (ivm01a_dev,key=firm_id$+sfe01a.item_id$,dom=label1) ivm01a$
            if ars01a.multi_types$<>"Y" then
                y2$=ivm01a.gl_inv_acct$
            else
                find record (ivm02a_dev,key=firm_id$+sfe01a.warehouse_id$+sfe01a.item_id$,dom=label1) ivm02a$
                b9$=ivm02a.ar_dist_code$
                find record (arm10d_dev,key=firm_id$+"D"+b9$,dom=label1) arm10d$
                y2$=arm10d.gl_inv_acct$; rem "Set the closed to account...
            endif
        endif

label1:

        sfm10a.code_desc$="*** Not On File ***"
        find record (sfm10a_dev,key=firm_id$+"A"+sfe01a.wo_type$,dom=*next) sfm10a$
        if sfe01a.wo_category$="I" then 
            sfm10a.gl_close_to$=y2$
        endif
        if l+11+sgn(ivm01a.maximum_qty-1)*2+pos(sfm10a.std_act_flag$="A")*3>0 then gosub report_heading
        print (printer_dev)'lf',"**** Closed Detail ****",
:                       @(29),"Closed Date: ",fndate$(sfe01a.cls_inp_date$),
:                       @(55),"WO Type: ",sfm10a.code_desc$,
        if sfe01a.lstact_date$>sfe01a.cls_inp_date$ then
            print (printer_dev)@(89),"***Warning Last Activity Was ",fndate$(sfe01a.lstact_date$),"***",
        endif
        print (printer_dev)'lf','lf',@(0),"Current",@(12),"Prior",@(22),"This",
:                                @(30),"Balance",@(44),"Comp",@(50),"Inventory",
:                                @(63),"WO Cost",@(72),"Close @",@(84),"WO Cost",
:                                @(98),"Prior",@(110),"Current",@(122),"Current"
        print (printer_dev)@(0),"Prod Qty",@(11),"Closed",@(22),"Close",
:                      @(30),"Still Open",@(44),"lete?",@(50),"Unit Cost",
:                      @(64),"@ Std",@(72),"Std/Actual",@(85),"@ Act",
:                      @(97),"Closed",@(109),"WIP Value",@(120),"Close Value",'lf'
        print (printer_dev)@(10-m2),ivm01a.conv_factor:m2$,@(18-m2),ivm01a.weight:m2$,@(29-m2),ivm01a.msrp:m2$,
:                      @(38-m2),ivm01a.maximum_qty:m2$,@(45),sfe01a.complete_flg$,@(60-m1),b[4]:m1$,
:                      @(73-m1),ivm01a.safety_stock:m1$,@(75),stdact_flag$,@(91-m1),ivm01a.eoq:m1$,
:                      @(105-m1),ivm01a.lead_time:m1$,@(119-m1),ivm01a.reserved_num:m1$,@(132-m1),ivm01a.dealer_num:m1$

        if ivm01a.msrp<>0 and ivm01a.msrp<>1 then
            b0=ivm01a.order_point
            if ivm01a.conv_factor<>0 then 
                b1=ivm01a.safety_stock/ivm01a.conv_factor 
                b2=ivm01a.eoq/ivm01a.conv_factor 
            else 
                b1=0
                b2=0
            endif
            if ivm01a.weight<>0 then 
                b3=ivm01a.lead_time/ivm01a.weight 
            else 
                b3=0
            endif
            if ivm01a.msrp+ivm01a.maximum_qty<>0 then 
                b4=ivm01a.reserved_num/(ivm01a.msrp+ivm01a.maximum_qty) 
            else 
                b4=0
            endif
            if ivm01a.msrp<>0 then 
                b5=ivm01a.dealer_num/ivm01a.msrp 
            else 
                b5=0
            endif
            print (printer_dev)@(36),"Per Unit:",@(60-m3),b0:m3$,@(73-m3),b1:m3$,
:                          @(75),stdact_flag$,@(91-m3),b2:m3$,@(105-m3),b3:m3$,
:                          @(119-m3),b4:m3$,@(132-m3),b5:m3$,
        endif

rem --- Calculate Postings

        c[0]=-ivm01a.reserved_num
        c[1]=sfe01a.cls_inp_qty*sfe01a.closed_cost

        if sfe01a.complete_flg$<>"Y"
            c[0]=-c[1]
        else
            if sfm10a.std_act_flag="A" then
                c[1]=ivm01a.reserved_num
            else
rem --- Calculate Variance Postings
                if sfe01a.wo_category$<>"I" and (sfe01a.sch_prod_qty=sfe01a.qty_cls_todt+sfe01a.cls_inp_qty or u[0]=0 or sfe01a.recalc_flag$="N") then
                    prorte=sfe01a.cls_inp_qty*sfe01a.closed_cost+sfe01a.cls_cst_todt
                else
rem --- Prorate Standards If Needed
                    if sfe01a.wo_category$<>"I"
                        if sfe01a.sch_prod_qty<>0 then
                            prorte=u[0]*(sfe01a.qty_cls_todt+sfe01a.cls_inp_qty)/sfe01a.sch_prod_qty
                        else
                            prorte=0
                        endif
                    else
                        prorte=sfe01a.cls_inp_qty*sfe01a.closed_cost+sfe01a.cls_cst_todt
                    endif

                    if prorte<>u[0] then
                        if u[0]=0 then
                            u[3]=0,u[4]=0,u[6]=0
                        else
                            u[3]=u[3]*prorte/u[0]
                            u[4]=u[4]*prorte/u[0]
                            u[6]=u[6]*prorte/u[0]
                        endif
                        u[9]=prorte-(u[3]+u[4]+u[6])
                    endif
                endif
rem --- Now Calculate Variances
                precision 2
                c[2]=(u[2]-u[3])*1
                c[4]=(u[5]-u[4])*1,c[5]=(u[7]-u[6])*1
                c[3]=(ivm01a.eoq-prorte-(c[2]+c[4]+c[5]))*1
                c[0]=c[0]*1
                c[1]=c[1]*1
            endif
        endif

rem --- Print G/L Postings

        precision ivs01_precision
        if gl$="Y"
            print (printer_dev)'lf',"Account Summary: ",@(44+m1),"Debit",@(46+m1*2),"Credit",
            if sfe01a.cls_inp_qty<>0 and sfe01a.cls_inp_qty<>1
                print (printer_dev)@(60+m1*2),"Per Unit Totals",'lf'
            else
                print (printer_dev)'lf'
            endif

            t0=0
            t1=0,t2=0,t3=0

            for x=0 to 5
                if c[x]=0 then continue
                dim g1$(35)
                g1$(1)="*** Not On File ***"
                if x<2 then
                    g9$=sfm10a.gl_close_to$
                else
                    g9$=sfm10a.gl_pur_acct$
                endif

                find (glm01a_dev,key=firm_id$+g9$,dom=*next)*,g1$(1)
                print (printer_dev)fnmask$(g9$(1,g3),g3$),"  ",g1$,

                if c[x]>0 then
                    print (printer_dev)@(50),c[x]:m1$,
                    t0=t0+c[x]
                else
                    print (printer_dev)@(53+m1),abs(c[x]):m1$,
                    t1=t1+abs(c[x])
                endif
                if sfe01a.cls_inp_qty<>0 and sfe01a.cls_inp_qty<>1 then
                    if c[x]/sfe01a.cls_inp_qty>0 then
                        print (printer_dev)@(56+m1*2),c[x]/sfe01a.cls_inp_qty:m3$,
                        t2=t2+c[x]/sfe01a.cls_inp_qty
                    else
                        print (printer_dev)@(59+m1*2+m3),abs(c[x]/sfe01a.cls_inp_qty):m3$,
                        t3=t3+abs(c[x]/sfe01a.cls_inp_qty)
                    endif
                endif
                print (printer_dev)@(110),y9$(x*21+1,21)
            next x

            print (printer_dev)@(50),j$(1,m1),@(53+m1),j$(1,m1),
            if sfe01a.cls_inp_qty<>0 and sfe01a.cls_inp_qty<>1 then
                print (printer_dev)@(56+m1*2),j$(1,m3),@(59+m1*2+m3),j$(1,m3),
            endif
            print (printer_dev)'lf',@(40),"Total: ",@(50),t0:m1$,@(53+m1),t1:m1$,
            if sfe01a.cls_inp_qty<>0 and sfe01a.cls_inp_qty<>1 then
                print (printer_dev)@(56+m1*2),t2:m3$,@(59+m1*2+m3),t3:m3$,
            endif
            print (printer_dev)""
        endif
    wend

done: rem --- End

    goto std_exit

report_heading: rem --- Report Heading

    l=0
    call pgmdir$+"adc_rpthead.aon",printer_dev,headings$[all],headings,h,h0,when$,clock$,status
    if status then exitto std_exit
    if sfe01a.wo_category$="I" then
        find record (ivm01a_dev,key=firm_id$+sfe01a.item_id$,dom=*next) ivm01a$
    endif

    print (printer_dev)"WO #: ",sfe01a.wo_no$,@(56),"Type: ",sfe01a.wo_type$,
:                      @(68),"Status: ",sfe01a.wo_status$,@(86),"Date Opened: ",fndate$(sfe01a.opened_date$),
:                      " Last Close: ",fndate$(sfe01a.estcmp_date$),
    if sfe01a.wo_category$="I" then
        print (printer_dev)@(17),"Bill: ",@(24),sfe01a.item_id$
    else
        print (printer_dev)""
    endif
    if sfe01a.wo_category$<>"I" then
        print (printer_dev)@(10),"Description:",@(24),sfe01a.description$,'lf',
:                          @(24),sfe01a.description$,@(56),"Category: ",sfe01a.wo_category$,
    endif
    if sfe01a.wo_category$="I" then
        print (printer_dev)@(10),"Description:",@(24),ivm01a.item_desc$(1,desc[1]),'lf',
:                          @(24),ivm01a.item_w(desc[1]+1,min(desc[2],30)),@(56),"Category: ",sfe01a.wo_category$,
    endif
    if p3$(2,1)="Y" and pos(" "<>sfe01a.customer_id$)>0 then
        print (printer_dev)@(80),"Customer: ",fnmask$(sfe01a.customer_id$(1,p8),p8$),"  ",arm01a.customer_name$
    else
        print (printer_dev)""
    endif
    print (printer_dev)@(0),"Drawing #: ",@(24),sfe01a.drawing_no$,@(37),"Rev: ",sfe01a.drawing_rev$
    if p3$(2,1)="Y" and num(sfe01a.order_no$+sfe01a.line_no$)>0 then
        print (printer_dev)@(80),"Sales Order: ",sfe01a.order_no$,"  Line: ",sfe01a.line_no$
    else
        print (printer_dev)""
    endif
    if pos(sfe01a.wo_category$="IN")>0 then
        print (printer_dev)@(17),"UM: ",sfe10a.unit_measure$,
    endif
    print (printer_dev)"Warehouse: ",sfe01a.warehouse_id$,@(56),"Prod Qty: ",sfe01a.sch_prod_qty:m2$,
:                      "  Completed: ",sfe01a.qty_cls_todt:m2$,@(105),"Last Activity: ",fndate$(sfe01a.lstact_date$)
    if sfe01a.cls_inp_qty>0 then
        print (printer_dev)'lf',@(1),"****This Close Date: ",fndate$(sfe01a.cls_inp_date$),"     Complete? ",
:                          sfe01a.complete_flg$,@(56),"This Close Amount: ",sfe01a.cls_inp_qty:m2$,
:                          "  Unit Cost: ",sfe01a.closed_cost:m1$,"****"
        l=l+2
     endif
    print (printer_dev)j2$
    return

rem #include std_functions.src
rem --- Standard AddonSoftware functions (01Mar2006)
rem --- Functions used to retrieve form values

    def fnstr_pos(q0$,q1$,q1)=int((pos(q0$=q1$,q1)+q1-1)/q1)
    def fnget_rec_date$(q0$)=rd_rec_data$[fnstr_pos(cvs(q0$,1+2+4)+"."+
:                            cvs(q0$,1+2+4),rd_rec_data$[0,0],40),0]
    def fnget_fld_data$(q0$,q1$)=cvs(rd_rec_data$[fnstr_pos(cvs(q0$,1+2+4)+"."+
:                                cvs(q1$,1+2+4),rd_rec_data$[0,0],40),0],2)
    def fnget_table$(q0$)=rd_alias_id$

rem --- Miscellaneous functions

    def fncenter(q$,q)=int((q-len(q$))/2)

rem --- Format inventory item description

    def fnitem$(q$,q1,q2,q3)=cvs(q$(1,q1)+" "+q$(q1+1,q2)+" "+q$(q1+q2+1,q3),32)

rem --- Date/time handling functions

    def fndate$(q$)
        q1$=""
        q1$=date(jul(num(q$(1,4)),num(q$(5,2)),num(q$(7,2)),err=*next),err=*next)
        if q1$="" q1$=q$
        return q1$
    fnend
    
    def fnyy$(q$)=q$(3,2)
    def fnclock$(q$)=date(0:"%hz:%mz %p")
    def fntime$(q$)=date(0:"%Hz%mz")

rem --- fnmask$: Alphanumeric Masking Function (formerly fnf$)

    def fnmask$(q1$,q2$)
        if q2$="" q2$=fill(len(q1$),"0")
        return str(-num(q1$,err=*next):q2$,err=*next)
        q=1
        q0=0
        while len(q2$(q))
              if pos(q2$(q,1)="-()") q0=q0+1 else q2$(q,1)="X"
              q=q+1
        wend
        if len(q1$)>len(q2$)-q0 q1$=q1$(1,len(q2$)-q0)
        return str(q1$:q2$)
    fnend

rem --- fnbasename$: Strip path and optionally the suffix from a file name

    def fnbasename$(q$,q0$)
        q=max(pos("/"=q$,-1),pos(":"=q$,-1),pos(">"=q$,-1),pos("\"=q$,-1))
        if q then q$=q$(q+1)
        if q0$<>"" then q=mask(q$,q0$); if q q$=q$(1,q-1)
    return q$

rem --- fnglobal: Return numeric value of passed stbl variable

    def fnglobal(q$,q1)
        q1$=stbl(q$,err=*next),q1=num(q1$,err=*next)
        return q1
    fnend

rem --- fnglobal$: Return string value of passed STBL variable

    def fnglobal$(q$,q1$)
        q1$=stbl(q$,err=*next)
        return q1$
    fnend

rem #endinclude std_functions.src

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    call stbl("+DIR_SYP")+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:                                str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src
rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:                                   str(err:"000"),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    call pgmdir$+"adc_progress.aon","D","","","","",0,0,0,meter_num,status
    run stbl("+DIR_SYP")+"bas_process_end.bbj",err=*next
    release
rem #endinclude std_end.src

    end
