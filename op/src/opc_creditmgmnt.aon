rem --- Credit Management Status Display (Credit Status)
rem --- Program opc_creditmgmnt.aon v8.0.0 05Dec2007 (opc_ca)
rem --- Created by c:\codeport_bbj\adx_codeport.bbj v1.1.5 (12/05/2007 03:12:42)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright (c) 1981-2009 AddonSoftware
rem --- All Rights Reserved

rem --- Below is the old enter list
rem enter ope01_dev,arm02_dev,firm_id$,customer$,credit$,s$,m1$,type

rem --- stbl("!batch") is used when calling this from Commit and Release Future Orders

    setesc std_error
    seterr std_error

    enter customer$, order$, table_chans$[all], callpoint!, status
    
rem --- Use statements and declares

    use ::sys/prog/bao_callpoint.bbj::Callpoint
    use ::ado_order.src::OrderHelper
    use ::adc_array.aon::ArrayObject
    use ::ado_util.src::util

    declare Callpoint callpoint!
    declare OrderHelper ordHelp!
    declare ArrayObject tableChans!

rem --- Retrieve the program path

    pgmdir$=""
    pgmdir$=stbl("+DIR_PGM",err=*next)
    sypdir$=""
    sypdir$=stbl("+DIR_SYP",err=*next)

rem --- Retrieve sysinfo data

    dim sysinfo$:stbl("+SYSINFO_TPL")
    sysinfo$=stbl("+SYSINFO")
    firm_id$=sysinfo.firm_id$

rem --- Open all files 

    num_files = 5
    open_beg  = 1
    open_end  = num_files

    dim open_tables$[1:num_files],open_opts$[1:num_files],open_chans$[1:num_files],open_tpls$[1:num_files]

    open_tables$[1]="ARM_CUSTDET", open_opts$[1]="OTA"
    open_tables$[2]="ARS_PARAMS",  open_opts$[2]="OTA"
    open_tables$[3]="IVS_PARAMS",  open_opts$[3]="OTA"
    open_tables$[4]="OPE_ORDHDR",  open_opts$[4]="OTA"
    open_tables$[5]="ARS_CREDIT",  open_opts$[5]="OTA"

    gosub open_tables

rem --- Set opened files into util class for future use
    
	call stbl("+DIR_PGM")+"adc_array.aon::str_array2object", table_chans$[all], tableChans!, status
	if status = 999 then goto std_exit
	util.setTableChans(tableChans!)    

rem --- Determine if over credit limit 

    if callpoint! <> null() then
        ordHelp! = cast(OrderHelper, callpoint!.getDevObject("order_helper_object"))
        
    rem --- If credit limit isn't set, call OrderHelper method
        
        if ordHelp!.getOverCreditLimit() = -1 then
            over_credit_limit = ordHelp!.calcOverCreditLimit()
        else
            over_credit_limit = ordHelp!.getOverCreditLimit()
        endif
        
    else
    
    rem --- Set credit limit w/o the callpoint object
    
        ordHelp! = new OrderHelper(firm_id$, null())
        over_credit_limit = ordHelp!.calcOverCreditLimit(customer$, order$)
    endif
    
    batch$ = ""
    batch$ = stbl("!batch", err=*next)
    
rem --- Display	

    if batch$ = "" then
        dim dflt_data$[8,1]

        dflt_data$[1,0] = "CREDIT_LIMIT"
        dflt_data$[2,0] = "OPEN_AR_INVS"
        dflt_data$[3,0] = "OPEN_ORDERS"
        dflt_data$[4,0] = "OPEN_BOS"
        dflt_data$[5,0] = "ORDERS_HELD"
        dflt_data$[6,0] = "CREDIT_LEFT"
        dflt_data$[7,0] = "OVER_MAX_DAYS"
        dflt_data$[8,0] = "CRED_HOLD"

        dflt_data$[1,1] = str(ordHelp!.getCreditLimit())
        dflt_data$[2,1] = str(ordHelp!.getTotalAging())
        dflt_data$[3,1] = str(ordHelp!.getOpenOrderAmount())
        dflt_data$[4,1] = str(ordHelp!.getOpenBoAmount())
        dflt_data$[5,1] = str(ordHelp!.getHeldOrderAmount())

        if over_credit_limit then
            dflt_data$[6,1] = str(ordHelp!.getCreditLimit()-ordHelp!.getTotalAging()-ordHelp!.getOpenOrderAmount()-ordHelp!.getOpenBoAmount()-ordHelp!.getHeldOrderAmount())
        endif

        dflt_data$[7,1] = str(ordHelp!.getMaxPastDue())
        dflt_data$[8,1] = ordHelp!.getCreditHold()

        call sypdir$+"bam_run_prog.bbj", "OPE_CREDITSTATUS", stbl("+USER_ID"), "", "", table_chans$[all], "", dflt_data$[all]	

    endif

rem --- All done
     
    if callpoint! <> null() then 
        callpoint!.setDevObject("credit_status_done", "Y")
    endif
    
    goto std_exit

open_tables: rem --- Open tables

    call sypdir$+"bac_open_tables.bbj",
:       open_beg,
:       open_end,
:       open_tables$[all],
:       open_opts$[all],
:       open_chans$[all],
:       open_tpls$[all],
:       table_chans$[all],
:       open_batch,
:       open_status$

    if open_status$<>"" then
        msg_id$="ENTRY_OPEN_ERROR"
        dim msg_tokens$[1]
        msg_tokens$[1]=open_status$
        gosub disp_message
        status=912
        goto std_exit
    endif

    return

disp_message: rem --- Display Message Dialog

    call sypdir$+"bac_message.bbj",
:       msg_id$,
:       msg_tokens$[all],
:       msg_opt$,
:       table_chans$[all]

    return

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    call stbl("+DIR_SYP")+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:       str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit: 
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release: 
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src
rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:       str(err:"000"),rd_err_text$,rd_err_act$
std_missing_params_exit: 
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release: 
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_exit.src

std_exit: rem --- Standard called program exit (01Mar2006)

    rd_called$="YES"
    run stbl("+DIR_SYP")+"bas_process_end.bbj",err=*next
    release

rem #endinclude std_exit.src

    end

