rem --- Order/Picking List
rem --- Program opr_pa v8.0.0 18Jul2007 (opr_pa)
rem --- Created by adx_codeport.bbx v1.1.5 (07/18/2007 03:48:04)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright (c) 1981-2007 AddonSoftware
rem --- All Rights Reserved

    setesc std_error
    seterr std_error

rem --- Retrieve the program path

    pgmdir$=stbl("+DIR_PGM",err=*next)

rem --- Retrieve sysinfo data

    sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=*next)
    milestone=num(stbl("+MILESTONE",err=*next),err=*next)
    firm_id$=sysinfo.firm_id$

rem --- Document initializations

    OutVect!=bbjAPI().getSysGui().makeVector()
    BrkVect!=bbjAPI().getSysGui().makeVector()
    HdrVect!=bbjAPI().getSysGui().makeVector()
    TotVect!=bbjAPI().getSysGui().makeVector()
    rep_date$=date(0:"%Mz/%Dz/%Yd")
    rep_date_stamp$=date(0:"%Yd%Mz%Dz")
    rep_time$=date(0:"%hz:%mz %p")
    rep_time_stamp$=date(0:"%Hz%mz%sz")
    rep_prog$=pgm(-2)

rem --- Open Printer


rem --- retrieve template for OPM_CUSTJOBS record key
    if on_demand$="N" o9=1
    call stbl("+DIR_SYP")+"bac_key_template.bbj","OPE_PRNTLIST","PRIMARY",ope04a_key_tpl$,table_chans$[all],status$
    dim ope04a_key$:ope04a_key_tpl$

    call stbl("+DIR_SYP")+"bac_key_template.bbj","OPE_ORDDET","PRIMARY",ope11a_key_tpl$,table_chans$[all],status$
    dim ope11a_key$:ope11a_key_tpl$

rem     if o9<>1 and o9<>2 call pgmdir$+"syc_fe.bbx",911; rem O9 was not set by before RUNning
    precision i[2]
    h0=0
    more=1
    call stbl("+DIR_PGM")+"adc_getmask.aon","","AR","I","",m0$,0,m0
    call stbl("+DIR_PGM")+"adc_getmask.aon","","IV","A","",m1$,0,m1
    call stbl("+DIR_PGM")+"adc_getmask.aon","","IV","U","",m2$,0,m2
    call stbl("+DIR_PGM")+"adc_getmask.aon","","IV","C","",m3$,0,m3
    call stbl("+DIR_PGM")+"adc_getmask.aon","","IV","P","",m4$,0,m4
    m1=len(m1$)
    m2=len(m2$)
    m3=len(m3$)
    m4=len(m4$)
    l9=37
    headings=0
    when$=sysinfo.system_date$
    dim h9$(40,$0A$),headings$[headings],mh0$(36),md0$(6),md1$(40),x4$(400)

    mult_wh=0
    read (ivm10c_dev,key=firm_id$+"C",dom=*next)
    read (ivm10c_dev)
    ivm10c_key$=key(ivm10c_dev,end=Back_ground)
    if pos(firm_id$+"C"=ivm10c_key$)=1 mult_wh=1

rem --- column headings
    dim columns$[0,10]
    columns$[0,0]="",columns$[0,1]="C",columns$[0,2]="80"

Back_ground: rem --- Background

    if o9<>2 then
        call pgmdir$+"adc_progress.aon","D","","","","",0,0,0,meter_num,status
        call pgmdir$+"adc_progress.aon","N","","","","",0,ope01_dev,1,meter_num,status
    else
        read (ope01_dev,key=ope01a.firm_id$+ope01a.ar_type$+ope01a.customer_id$+ope01a.order_no$,dom=*next)ope01a$
        p8$="Y"
        if ope01a.invoice_type$="S" then
            msg_id$="OP_PRINTPRICES"
            gosub disp_message
            p8$=msg_opt$
        endif

        call pgmdir$+"adc_progress.aon","D","","","","",0,0,0,meter_num,status
        call pgmdir$+"adc_progress.aon","N","","","","",0,ope01_dev,1,meter_num,status
        call pgmdir$+"adc_progress.aon","S","","","","",0,0,1,meter_num,status

rem --- Read header for on-demand printing

        read record (ope01_dev,key=ope01a.firm_id$+ope01a.ar_type$+ope01a.customer_id$+ope01a.order_no$,dom=std_exit) ope01a$
        total=0
        goto On_Demand
    endif

rem --- Initial Read

    read (ope04_dev,key=firm_id$+"O"+"  "+cust_id$,dom=*next)

    while more
        if o9=2 goto On_Demand1
        total=0
        reprint$=""
        ope04a_key$=key(ope04_dev,end=*break)
        read (ope04_dev)
        if ope04a_key.firm_id$+ope04a_key.ordinv_flag$<>firm_id$+"O" break
        find record (ope01_dev,key=ope04a_key.firm_id$+ope04a_key.ar_type$+ope04a_key.customer_id$+ope04a_key.order_no$,dom=Remove_bad) ope01a$
        if (which_ones$="P" and ope01a.invoice_type$<>"S") or (which_ones$="Q" and ope01a.invoice_type$<>"P") continue

On_Demand: rem --- Here for on-demand printing

        if ope01a.print_status$="Y" gosub is_still_printed
        if ope01a.reprint_flag$="Y" reprint$=ope01a.print_status$,ope01a.print_status$="N"
        if pos(ope01a.print_status$="Y")<>0 continue
        if o9=1 and pos(ope01a.lock_status$="YS12") continue
        if ope01a.invoice_type$="V" continue
        if ars01c.sys_install$="Y"
            if ope01a.credit_flag$="C" and ars01c.pick_hold$="N"
                continue
            endif
        endif
        after$="NO"; gosub valid_lines
        if print$="NO" continue
        call pgmdir$+"adc_progress.aon","S","","","","",0,0,1,meter_num,status
        goto heading

Remove_bad: rem --- Remove bad sort key
          
        remove (ope04_dev,key=ope04a_key$)
        continue

heading: rem --- Heading

        b$=""
        othwhse$=""
        dim b1$(325)
        arm01a.customer_name$="Not On File"
        read record (arm01_dev,key=firm_id$+ope01a.customer_id$,dom=Assign_Value) arm01a$
        b$=arm01a.addr_line_1$+arm01a.addr_line_2$+arm01a.addr_line_3$+arm01a.addr_line_4$+arm01a.city$+arm01a.state_code$+arm01a.zip_code$+arm01a.country$
        call pgmdir$+"adc_address.aon",b$,24,5,9,30
Assign_Value:
        b$=arm01a.customer_name$+b$
            
rem --- Ship-To
            
        dim c1$(255),c$(159)
        if cvs(ope01a.shipto_no$,2)=""
            arm03a.name$(1,4)="SAME",c$(1,81)=""
        else
            if ope01a.shipto_no$="000099"
                find record (ope31a_dev,key=firm_id$+ope01a.customer_id$+ope01a.order_no$,dom=call_adc_address) ope31a$
                c$=ope31a.addr_line_1$+ope31a.addr_line_2$+ope31a.addr_line_3$+ope31a.addr_line_4$+ope31a.city$+ope31a.state_code$+ope31a.zip_code$
                arm03a.name$=ope31a.name$
call_adc_address:
                goto Cal_Prog
            else
                find record (arm03_dev,key=firm_id$+ope01a.customer_id$+ope01a.shipto_no$,dom=Cal_Prog) arm03a$
                c$=arm03a.addr_line_1$+arm03a.addr_line_2$+arm03a.addr_line_3$+arm03a.addr_line_4$+arm03a.city$+arm03a.country$
            endif
Cal_Prog:
            call pgmdir$+"adc_address.aon",c$,24,5,9,30
        endif
        c$=arm03a.name$+c$

rem --- Print Heading

        c$=pad(c$,len(b$))

rem --- Salesperson

        x1$="HOUSE"
        find record (arm10f_dev,key=firm_id$+"F"+ope01a.slspsn_code$,dom=Terms) arm10f$
        x1$=arm10f.code_desc$

Terms: rem --- Terms

        x3$=""
        find record (arm10_dev,key=firm_id$+"A"+ope01a.terms_code$,dom=Print_Heading) arm10a$
        x3$=arm10a.code_desc$

Print_Heading: rem --- Print Heading

        gosub report_heading
        t0=0
           
rem --- Position Detail File

        read (ope11_dev,key=ope01a.firm_id$+ope01a.ar_type$+ope01a.customer_id$+ope01a.order_no$,dom=*next)

        while more
            ope11a_key$=key(ope11_dev,end=*break)
            if ope11a_key.firm_id$+ope11a_key.ar_type$+ope11a_key.customer_id$+ope11a_key.order_no$<>ope01a.firm_id$+ope01a.ar_type$+ope01a.customer_id$+ope01a.order_no$ then break
            read record (ope11_dev,key=ope11a_key$) ope11a$

rem --- Type

            find record (opm02_dev,key=firm_id$+ope11a.line_code$,dom=Check_Condn2) opm02a$
            if pos(ope01a.invoice_type$="P")<>0 and ope11a.commit_flag$<>"N"
                if pos(ope11a.warehouse_id$=othwhse$)=0
                    othwhse$=othwhse$+ope11a.warehouse_id$
                endif
            endif
            if whse$<>"" and ope11a.warehouse_id$<>whse$ continue
            if pos(opm02a.line_type$="MNO")<=0


Check_Condn2:
                dim x2$(60),x7$(62); let ivm01a.item_desc$="**Not On File**"
                if pos(opm02a.line_type$=" SRDP")<>0
                    find record (ivm01_dev,key=firm_id$+ope11a.ITEM_ID$,dom=Find_Record1) ivm01a$
                    gosub Compress_Description
Find_Record1:
                    dim x5$(10)
                    find record (ivm02_dev,key=firm_id$+ope11a.warehouse_id$+ope11a.ITEM_ID$,dom=*next) ivm02a$
                endif
            endif
            
            if opm02a.line_type$<>"M" and pos(opm02a.message_type$=" BO")<>0
                gosub details_items
            endif
            t0=t0+ope11a.ext_price

rem --- Any Serial/Lot #'s?
            
            if pos(ivs01a.lotser_flag$="LS")=0 continue
            if pos(opm02a.line_type$=" SRDP")=0 continue
            if ivm01a.lotser_item$<>"Y" continue

rem --- OK There Are Lots

            dim t[2]; let t9=0
            read (ope21_dev,key=ope11a_key.firm_id$+ope11a_key.ar_type$+ope11a_key.customer_id$+ope11a_key.order_no$+ope11a_key.internal_seq_no$,dom=*next)
            while more
                ope21a_key$=key(ope21_dev,end=*break)
                if pos(ope11a_key.firm_id$+ope11a_key.ar_type$+ope11a_key.customer_id$+ope11a_key.order_no$+ope11a_key.internal_seq_no$=ope21a_key$)<>1 break
                read record (ope21_dev) ope21a$
                if ope21a.qty_ordered=0 continue
                gosub Print4
                t9=t9+ope21a.qty_shipped
            wend

            if t9<ope11a.qty_ordered
                dim t1$(i[3],"_"),t[2]
                y9=ope11a.qty_ordered-t9; if ivs01a.lotser_flag$="L" then y9=3
                for y=1 to y9
                    gosub Print4
                next y
            endif

            if l+1>l9 continue
            OutVect!.addItem("")
            l=l+1
        wend
        gosub Total1
        if o9=2 goto After_Loop
        extract record (ope01_dev,key=ope01a.firm_id$+ope01a.ar_type$+ope01a.customer_id$+ope01a.order_no$,err=*continue) ope01a$
        if ope01a.reprint_flag$="Y"
            ope01a.print_status$=reprint$ 
        else 
            ope01a.print_status$="B"
        endif
        ope01a$=field(ope01a$)
        write record (ope01_dev) ope01a$
    wend

After_Loop:

    if o9<>1 then
        after$="YES"
        gosub valid_lines

On_Demand1: rem --- Here for on-demand printing
        if ope01a.reprint_flag$="Y"
            ope01a.print_status$=reprint$,ope01a.reprint_flag$=""
        else
            if print$="YES" and allprint$="YES"
                ope01a.print_status$="Y"
            endif
        endif

        if ope01a.print_status$<>"Y"
            ope01a.print_status$="N"
        endif                                    
        ope01a.lock_status$="N"
        ope01a$=field(ope01a$)
        write record (ope01_dev) ope01a$
        if ope01a.print_status$="Y"
            remove (ope04_dev,key=firm_id$+"O"+"  "+ope01a.customer_id$+ope01a.order_no$,dom=*next)
        endif                
    endif
    
ready:

    call pgmdir$+"adc_progress.aon","D","","","","",0,0,0,0,ignore_status
    if o9=2 goto std_exit

	if OutVect!<>null() and OutVect!.size() then
rem		if rep_prog$<>"" then
rem			rd_temp_chan=unt
rem			open (rd_temp_chan,err=*endif)rep_prog$
rem			rd_temp_fin$=xfin(rd_temp_chan)
rem			close (rd_temp_chan)
rem			rep_prog_stamp$=fndate_time$(rd_temp_fin$(27,4))
rem		endif
		call stbl("+DIR_SYP")+"bax_docout.bbj",err=*next,
:			rdForm!,
:			rd_alias_id$,
:			rep_date$,
:			rep_date_stamp$,
:			rep_time$,
:			rep_time_stamp$,
:			rep_prog_stamp$,
:			headings$[all],
:			columns$[all],
:			OutVect!,
:			BrkVect!,
:			HdrVect!,
:			TotVect!,
:			out_types$,
:			out_action$,
:			out_status$,
:			rd_table_chans$[all]
	endif

	OutVect!=null()
    
    msg_id$="AON_UPDT_PICK_QUERY"
    dim x$:stbl("+SYSINFO_TPL")
    dim msg_tokens$[1]
    x$=stbl("+SYSINFO")                                                            
    msg_tokens$[1]=x.task_desc$
    gosub disp_message
    if msg_opt$<>"Y" then goto std_exit
    call pgmdir$+"adc_progress.aon","N","","","","",0,ope04_dev,1,meter_num,status
    read (ope04_dev,key=firm_id$+"O",dom=*next)

rem --- Clear Print Flags
    while more
        ope04a_key$=key(ope04_dev,end=*break)
        read (ope04_dev,key=ope04a_key$)
        if ope04a_key.firm_id$+ope04a_key.ordinv_flag$<>firm_id$+"O" break
        call pgmdir$+"adc_progress.aon","S","","","","",0,0,1,meter_num,status
        extract record (ope01_dev,key=ope04a_key.firm_id$+ope04a_key.ar_type$+ope04a_key.customer_id$+ope04a_key.order_no$,dom=Clear1) ope01a$
        if (which_ones$="P" and ope01a.invoice_type$<>"S") or (which_ones$="Q" and ope01a.invoice_type$<>"P") continue
        if ope01a.reprint_flag$="Y"
            ope01a.reprint_flag$=""
            ope01a.LOCK_STATUS$="N" 
        else
            if pos(ope01a.print_status$="B")=0 continue
            if pos(ope01a.LOCK_STATUS$="YS12")<>0 continue
            after$="YES"
            gosub valid_lines
            ope01a.LOCK_STATUS$="N"
            if print$="YES" and allprint$="YES" then ope01a.print_status$="Y"
        endif
Write1:
        if ope01a.print_status$<>"Y" ope01a.print_status$="N"
        ope01a$=field(ope01a$)
        write record (ope01_dev) ope01a$
Clear1:
        if ope01a.print_status$="Y" then
            remove (ope04_dev,key=ope04a_key$)
        endif
    wend

all_done: rem --- Done with update

    goto std_exit

report_heading: rem --- Report Heading

    if ope01a.invoice_type$="P"
        OutVect!.addItem("")
        dim out$(80)
        out$(h0+25)="Q U O T A T I O N   O N L Y"
        OutVect!.addItem(out$)
    else 
        dim out$(80)
        out$(h0+21)="O R D E R / P I C K I N G   L I S T"
        OutVect!.addItem(out$)
    endif
    if ope01a.reprint_flag$="Y"
        z0$="*** R E P R I N T ***" 
    else 
        z0$=""
    endif
    dim out$(80)
    out$(h0+29)=z0$
    OutVect!.addItem(out$)
    out$(h0+1)=sysinfo.firm_name$
    out$(h0+56)="Order Number: "+ope01a.order_no$+" "+ope01a.backord_flag$
    OutVect!.addItem(out$)
    dim out$(80)
    out$(h0+64)="Date: "+fndate$(ope01a.order_date$)
    OutVect!.addItem(out$)
    dim out$(80)
    out$(h0+3)="Customer: "+fnmask$(ope01a.customer_id$,m0$)
    out$(h0+50)="Ship To:"
    OutVect!.addItem(out$)
    for i=1 to 6
        dim out$(80)
        out$(h0+13)=b$(i*30-29,30)
        out$(h0+50)=c$(i*30-29,30)
        OutVect!.addItem(out$)
    next i
    OutVect!.addItem(fill(80,"-"))
    dim out$(80)
    out$(h0+1)="Cust P.O.#    Terms           Salesperson          Ship Via   Ship Date    PC"
    OutVect!.addItem(out$)
    OutVect!.addItem(fill(80,"-"))
    dim out$(80)
    out$(h0+1)=ope01a.customer_po_no$
    out$(h0+15)=x3$
    out$(h0+31)=x1$
    out$(h0+52)=ope01a.ar_ship_via$
    out$(h0+63)=fndate$(ope01a.shipmnt_date$)
    out$(h0+75)=ope01a.price_code$
    OutVect!.addItem(out$)
    OutVect!.addItem(fill(80,"-"))
    dim out$(80)
    out$(h0+29)="Item Number &"
    OutVect!.addItem(out$)
    dim out$(80)
    out$(h0+1)="    Order     Ship   B/O        Description"
    if ope01a.invoice_type$="P" or p8$="Y" then out$(h0+74-m4+4,5)="Price"
    if mult_wh>0 then out$(h0+48,4)="Whse"
    out$(h0+53,8)="Location"
    out$(h0+75,6)="Carton"
    OutVect!.addItem(out$)
    OutVect!.addItem(fill(80,"-"))
    l=0
    return

details_items:

rem --- Item detail
    
    if l+1>l9
        gosub continue_page
    endif
    dim out$(80)
rem    out$(1)=ope11a_key.internal_seq_no$
    if pos(opm02a.line_type$="MO")=0 then
        out$(h0+1)=pad(str(ope11a.qty_ordered),9,"R")
        if ope11a.commit_flag$="N"
            out$(h0+14)="Ship:"+fndate$(ope11a.est_shp_date$)
        else 
            out$(h0+14)="______ ______"
        endif
        out$(h0+75)="______"
    endif
    
    if pos(opm02a.line_type$="MO")<>0
        out$(h0+29)=ope11a.order_memo$
    endif                                     
    if opm02a.line_type$="N"
        out$(h0+29)="Non-Stock"
    endif
    if pos(opm02a.line_type$=" SRDP")<>0
        out$(h0+29)=ope11a.item_id$
    endif
    if ope01a.invoice_type$<>"P"
        if pos(opm02a.line_type$=" SRDPN")<>0 and mult_wh>0
            out$(h0+49)=ope11a.warehouse_id$
        endif
        if opm02a.DROPSHIP$="Y"
            out$(h0+54)="*Drop Ship"
        else   
            if pos(opm02a.line_type$=" SRDP")<>0
                out$(h0+54)=ivm02a.location$
            endif
        endif        
        if p8$<>"Y" then goto gt_lf
    endif

    if pos(opm02a.line_type$=" SRDPN")<>0
        out$(h0+73-m4)=str(ope11a.unit_price:m4$)
        total=total+ope11a.ext_price
    endif    
    if pos(opm02a.line_type$="O")<>0
        out$(h0+73-m1)=str(ope11a.ext_price:m1$)
        total=total+ope11a.ext_price
    endif    

gt_lf:
    OutVect!.addItem(out$)
    l=l+1
    if pos(opm02a.line_type$=" SRDPN")<>0
        if l+1>l9
            gosub continue_page
        endif
    endif
    dim out$(80)
    if pos(opm02a.line_type$=" SRDP")<>0
        out$(h0+33)=ivm01a.item_desc$
        OutVect!.addItem(out$)
        l=l+1
    endif
    if opm02a.line_type$="N"
        out$(h0+33)=ope11a.order_memo$
        OutVect!.addItem(out$)
        l=l+1
    endif                                
 return

Print4: rem --- Serial #'s Here
   
    if l>l9-1 then
        gosub continue_page
        if pos(opm02a.line_type$=" SRDP")<>0 then
            dim out$(80)
            out$(h0+29)=ope11a.item_id$+" (Continued)"
            l=l+1
        endif
    endif

    dim out$(80)
    if ivs01a.lotser_flag$<>"L" then
        out$(h0+25)="S/N: "+t1$
    else
        out$(h0+25)="Lot: "+t1$+"   Shipped: "
        if ope21a.qty_shipped<>0 then
            out$(pos(" "<>out$,-1)+2)=str(ope21a.qty_shipped:m2$)
        else
            out$(pos(" "<>out$,-1)+2)=t1$
        endif
    endif

    OutVect!.addItem(out$)
    l=l+1
    return

Total1: rem --- Total

    gosub Print_Totals
    if l+2>l9 then gosub continue_page
    OutVect!.addItem("")
    OutVect!.addItem(fill(80,"="))
    l=l+2
    gosub Certification
    if ope01a.invoice_type$<>"P" then
        gosub Print_Box
    endif
    BrkVect!.addItem(str(OutVect!.size()/(columns+1)))
    HdrVect!.addItem("")
    return

continue_page: rem --- Continued

    if l9-l-1>0 
        for cntr=1 to l9-l-1
            OutVect!.addItem("")
        next cntr
    endif    
    dim out$(80)
    out$(h0+65)="Continued"
    OutVect!.addItem(out$)
    BrkVect!.addItem(str(OutVect!.size()/(columns+1)))
    HdrVect!.addItem(code$)
    gosub report_heading
    return

 Compress_Description: rem --- Compress Description

    if len(ivm01a.item_desc$)>79-h0-32 then ivm01a.item_desc$=ivm01a.item_desc$(1,79-h0-32)
    return

valid_lines: rem --- Look for valid lines here

    print$="NO"
    allprint$="YES" 
    read (ope11_dev,key=ope01a.firm_id$+ope01a.ar_type$+ope01a.customer_id$+ope01a.order_no$,dom=*next)

    while more
        ope11a_key$=key(ope11_dev,end=*break)
        if pos(ope01a.firm_id$+ope01a.ar_type$+ope01a.customer_id$+ope01a.order_no$=ope11a_key$)<>1 break
        read record (ope11_dev) ope11a$
        find record (opm02_dev,key=firm_id$+ope11a.line_code$,dom=*continue) opm02a$
        if ope01a.invoice_type$<>"P"
            if ope11a.commit_flag$="N" continue
            if whse$<>"" and ope11a.warehouse_id$<>whse$
                if ope11a.pick_flag$<>"Y"
                    allprint$="NO"
                    continue 
                else 
                    continue
                endif
            endif
        endif
        if ope01a.reprint_flag$<>"Y" and ope11a.pick_flag$="Y" continue; rem "Not a reprint and already printed for selected warehouse(s)
        if ope01a.reprint_flag$="Y" and ope11a.pick_flag$<>"Y" continue; rem "A reprint and not printed yet for selected warehouse(s)
        if after$="YES" then  ope11a.pick_flag$="Y"; write record (ope11_dev,key=ope11a_key.firm_id$+ope11a_key.ar_type$+ope11a_key.customer_id$+ope11a_key.order_no$+ope11a_key.internal_seq_no$) ope11a$
        print$="YES"
    wend

    read (ope01_dev,key=ope01a.firm_id$+ope01a.ar_type$+ope01a.customer_id$+ope01a.order_no$)
    return

Print_Box: rem --- Print Box

    if l+9+mult_wh>l9 gosub continue_page
        OutVect!.addItem("")
        dim out$(80)
        out$(h0+13)="Carton       1       2       3      4       5     Total"
        OutVect!.addItem(out$)
        dim out$(80)
        out$(h0+23)=fill(47,"-")
        out$(h0+22,1)="+"
        out$(h0+30,1)="+"
        out$(h0+38,1)="+"
        out$(h0+46,1)="+"
        out$(h0+54,1)="+"
        out$(h0+62,1)="+"
        out$(h0+70,1)="+"
        OutVect!.addItem(out$)
        dim out$(80)
        out$(h0+13)="         |       |       |       |       |       |       |"
        OutVect!.addItem(out$)
        out$(13,6)="Weight"
        OutVect!.addItem(out$)
        out$(13,6)=""
        OutVect!.addItem(out$)
        dim out$(80)
        out$(h0+23)=fill(47,"-")
        out$(h0+22,1)="+"
        out$(h0+30,1)="+"
        out$(h0+38,1)="+"
        out$(h0+46,1)="+"
        out$(h0+54,1)="+"
        out$(h0+62,1)="+"
        out$(h0+70,1)="+"
        OutVect!.addItem(out$)
        l=l+9

        if mult_wh=0 return
        if whse$<>"" and len(othwhse$)<2
            message$="All of this order to be filled from these warehouses."
            goto message_creation
        endif
                    
        if pos(whse$=othwhse$)>0
            othwhse$=othwhse$(1,pos(whse$=othwhse$)-1)+othwhse$(pos(whse$=othwhse$)+2)
        endif
        if whse$="" or (whse$<>"" and othwhse$="")
            message$="All of this order to be filled from this warehouse.";goto message_creation
        endif
        message$="Portions of this order are to be filled from warehouse "
Message1:
        message$=message$+othwhse$(1,2)+", "
        othwhse$=othwhse$(3)
        if len(othwhse$)>0 then goto Message1
        message$=message$(1,len(message$)-2)+"."
        if pos(","=message$)>0 
            message$=message$(1,pos(","=message$,-1)-1)+" and"+message$(pos(","=message$,-1)+1)
        endif

 message_creation:
        while more
            if l+1>l9 gosub continue_page
            if len(message$)<60
                dim out$(80)
                out$(h0+13)=message$
                OutVect!.addItem(out$)
                l=l+1
                break
            endif
            dim out$(80)
            out$(h0+13)=message$(1,pos(" "=message$(1,60),-1))
            OutVect.addItem(out$)
            l=l+1
            message$=message$(pos(" "=message$(1,60),-1)+1)
        wend
    return

Certification: rem --- Certification
    ms$=""
    gosub build_msg
    if status then return
    for y=1 to 10
        if x4$(y*40-39,40)=fill(40) continue
        if y=1
            if l+1>l9
                gosub continue_page 
            else 
                OutVect!.addItem("")
                l=l+1
            endif
        endif
        if l+1>l9 then
            gosub continue_page
        endif
        dim out$(80)
        out$(h0+28)=x4$(y*40-39,40)
        OutVect!.addItem(out$)
        l=l+1
    next y
    return

Print_Totals: rem --- Print Totals

    if p8$<>"Y" then return
    if l+4>l9
        gosub continue_page
    endif
    OutVect!.addItem("")
    dim out$(80)
    out$(h0+80-10)="Extension"
    OutVect!.addItem(out$)
    dim out$(80)

    out$(h0+80-m1)=fill(m1-1,"=")
    OutVect!.addItem(out$)
    dim out$(80)
    out$(h0+71-m1)="Total:"
    out$(h0+80-m1)=str(total:m1$)
    OutVect!.addItem(out$)
    l=l+4
    return

is_still_printed: rem --- Verify if Pick Ticket is still printed

    read (ope11_dev,key=ope01a.firm_id$+ope01a.ar_type$+ope01a.customer_id$+ope01a.order_no$,dom=*next)
    while more
        flag=0
        ope11a_key$=key(ope11_dev,end=*break)
        if pos(ope01a.firm_id$+ope01a.ar_type$+ope01a.customer_id$+ope01a.order_no$=ope11a_key$)<>1 then break
        read record (ope11_dev,key=ope11a_key$,dom=*continue) ope11a$
        if ope11a.pick_flag$="Y" then flag=1;break
    wend
    if flag=1 then 
        return
    else
        ope01a.print_status$="N"
        ope01a.reprint_flag$=""
    endif
    return
    
rem --- Reformat new opm-04/14 records into old-style
build_msg:
rem --- arm-10 G records for backwards compatibility

    status=11
    ml=0
    opm14a_key$=firm_id$+ope01a.MESSAGE_CODE$
    find record (opm04_dev,key=opm14a_key$,dom=Return4) opm04a$
    status=0
    read (opm14_dev,key=opm14a_key$,dom=*next)

    while more

        let opm14a_key$=key(opm14_dev,end=*break)
        if pos(opm04a.firm_id$+opm04a.MESSAGE_CODE$=opm14a_key$)<>1 then break
        read record (opm14_dev,key=opm14a_key$) opm14a$
        if pos(opm14a.firm_id$+opm14a.message_code$+opm14a.message_seq$=ms$,6) then continue
        ms$=ms$+opm14a.firm_id$+opm14a.message_code$+opm14a.message_seq$
        x4$(ml*40+1)=opm14a.message_text$
        ml=ml+1
        if ml<10 then continue
    wend

Return4: 
    return

rem #include std_functions.src
rem --- Standard AddonSoftware functions (01Mar2006)
rem --- Functions used to retrieve form values

    def fnstr_pos(q0$,q1$,q1)=int((pos(q0$=q1$,q1)+q1-1)/q1)
    def fnget_rec_date$(q0$)=rd_rec_data$[fnstr_pos(cvs(q0$,1+2+4)+"."+
:                            cvs(q0$,1+2+4),rd_rec_data$[0,0],40),0]
    def fnget_fld_data$(q0$,q1$)=cvs(rd_rec_data$[fnstr_pos(cvs(q0$,1+2+4)+"."+
:                                cvs(q1$,1+2+4),rd_rec_data$[0,0],40),0],2)
    def fnget_table$(q0$)=rd_alias_id$

rem --- Miscellaneous functions

    def fncenter(q$,q)=int((q-len(q$))/2)

rem --- Format inventory item description

    def fnitem$(q$,q1,q2,q3)=cvs(q$(1,q1)+" "+q$(q1+1,q2)+" "+q$(q1+q2+1,q3),32)

rem --- Date/time handling functions

    def fndate$(q$)
        q1$=""
        q1$=date(jul(num(q$(1,4)),num(q$(5,2)),num(q$(7,2)),err=*next),err=*next)
        if q1$="" q1$=q$
        return q1$
    fnend
    
    def fnyy$(q$)=q$(3,2)
    def fnclock$(q$)=date(0:"%hz:%mz %p")
    def fntime$(q$)=date(0:"%Hz%mz")

rem --- fnmask$: Alphanumeric Masking Function (formerly fnf$)

    def fnmask$(q1$,q2$)
        if q2$="" q2$=fill(len(q1$),"0")
        return str(-num(q1$,err=*next):q2$,err=*next)
        q=1
        q0=0
        while len(q2$(q))
              if pos(q2$(q,1)="-()") q0=q0+1 else q2$(q,1)="X"
              q=q+1
        wend
        if len(q1$)>len(q2$)-q0 q1$=q1$(1,len(q2$)-q0)
        return str(q1$:q2$)
    fnend

rem --- fnbasename$: Strip path and optionally the suffix from a file name

    def fnbasename$(q$,q0$)
        q=max(pos("/"=q$,-1),pos(":"=q$,-1),pos(">"=q$,-1),pos("\"=q$,-1))
        if q then q$=q$(q+1)
        if q0$<>"" then q=mask(q$,q0$); if q q$=q$(1,q-1)
    return q$

rem --- fnglobal: Return numeric value of passed stbl variable

    def fnglobal(q$,q1)
        q1$=stbl(q$,err=*next),q1=num(q1$,err=*next)
        return q1
    fnend

rem --- fnglobal$: Return string value of passed STBL variable

    def fnglobal$(q$,q1$)
        q1$=stbl(q$,err=*next)
        return q1$
    fnend

rem #endinclude std_functions.src

rem #include disp_message.src

disp_message:rem --- Display Message Dialog

    call stbl("+DIR_SYP")+"bac_message.bbj",msg_id$,msg_tokens$[all],msg_opt$,table_chans$[all]
return
	
rem #endinclude disp_message.src

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    call stbl("+DIR_SYP")+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5)),
:                                str(err),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src

rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5)),
:                                   str(err),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    call pgmdir$+"adc_progress.aon","D","","","","",0,0,0,meter_num,status
	if on_demand$<>"N"
		rd_called$="YES" 
	endif	
    run stbl("+DIR_SYP")+"bas_process_end.bbj",err=*next
    release
rem #endinclude std_end.src

    end
