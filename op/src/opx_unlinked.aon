rem --- Remove Unlinked Order Lines
rem --- Program opx_ea v8.0.0 04Dec2007 (opx_ea)
rem --- Created by c:\codeport_bbj\adx_codeport.bbj v1.1.5 (12/04/2007 01:44:30)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright BASIS International Ltd.  All Rights Reserved.
rem --- All Rights Reserved


    seterr std_error
    setesc std_error

rem --- Retrieve the program path

    pgmdir$=stbl("+DIR_PGM",err=*next)
       
rem --- Retrieve sysinfo data

    rem --- If BUI, initialize Barista processes
    if info(3,6)="5" then
        use ::ado_util.src::util
        Translate!=util.initBUIProcess()
        if Translate!=null() then goto std_exit
    endif

    sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=*next)
    milestone=num(stbl("+MILESTONE",err=*next),err=*next)
    firm_id$=sysinfo.firm_id$
            
rem --- set rd_alias_id$, if needed, for DocOut Settings
    
    if rd_alias_id$=""
        rd_alias_id$=pgm(-2)
        rd_alias_id$=rd_alias_id$(max(pos("/"="/"+rd_alias_id$,-1),pos("\"="\"+rd_alias_id$,-1)))
        rd_alias_id$=rd_alias_id$(1,pos("."=rd_alias_id$+".")-1)
    endif

rem --- Get user approval to proceed

        msg_id$="AON_RUN_QUERY"
        dim x$:stbl("+SYSINFO_TPL")
        dim msg_tokens$[1]
        x$=stbl("+SYSINFO")                                                            
        msg_tokens$[1]=x.task_desc$
        gosub disp_message
        if msg_opt$<>"Y" then goto std_exit_no_update
            

rem --- Open/Lock files

            files=6,begfile=1,endfile=files
            dim files$[files],options$[files],ids$[files],templates$[files],channels[files]
            files$[1]="ars_params",ids$[1]="ARS_PARAMS"
            files$[2]="ivs_params",ids$[2]="IVS_PARAMS"
            files$[3]="opt-01",ids$[3]="OPE_ORDHDR"
            files$[4]="opt-11",ids$[4]="OPE_ORDDET"
            files$[5]="opt-21",ids$[5]="OPE_ORDLSDET"
            files$[6]="opt-31",ids$[6]="OPE_ORDSHIP"
            call pgmdir$+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],
:                                   ids$[all],templates$[all],channels[all],batch,status
            if status goto std_exit
            ars01a_dev=channels[1]
            ivs01a_dev=channels[2]
            ope01_dev=channels[3]
            ope11_dev=channels[4]
            ope21_dev=channels[5]
            ope31_dev=channels[6]

rem --- Dimension string templates

             dim ars01a$:templates$[1],ivs01a$:templates$[2],ope01a$:templates$[3],
:            ope11a$:templates$[4],ope21a$:templates$[5],ope31a$:templates$[6]


rem --- Retrieve parameter records

            ars01a_key$=firm_id$+"AR00"
            find record (ars01a_dev,key=ars01a_key$,err=std_missing_params) ars01a$
            ivs01a_key$=firm_id$+"IV00"
            find record (ivs01a_dev,key=ivs01a_key$,err=std_missing_params) ivs01a$

rem --- Initialize
            call stbl("+DIR_SYP")+"bac_key_template.bbj","OPE_ORDDET","PRIMARY",ope11a_key_tpl$,rd_table_chans$[all],status$
            call stbl("+DIR_SYP")+"bac_key_template.bbj","OPE_ORDLSDET","PRIMARY",ope21a_key_tpl$,rd_table_chans$[all],status$
            call stbl("+DIR_SYP")+"bac_key_template.bbj","OPE_ORDSHIP","PRIMARY",ope31a_key_tpl$,rd_table_chans$[all],status$
            dim ope11a_key$:ope11a_key_tpl$
            dim ope21a_key$:ope21a_key_tpl$
            dim ope31a_key$:ope31a_key_tpl$
            more=1
            call pgmdir$+"adc_progress.aon","N","","","","",0,ope11_dev,1,meter_num,status

rem --- Read Detail Records


    while more

            ope11a_key$=key(ope11_dev,end=*break)
            if pos(ope11a_key.firm_id$=firm_id$)=0 then break
            read (ope11_dev,key=ope11a_key$,dom=*continue)
            hdr_key$=ope11a_key.firm_id$+ope11a_key.ar_type$+ope11a_key.customer_id$+ope11a_key.order_no$+ope11a_key.ar_inv_no$            
            gosub check_header
            if header$="YES" then read (ope11_dev,key=ope11a_key.firm_id$+ope11a_key.ar_type$+ope11a_key.customer_id$+ope11a_key.order_no$+ope11a_key.ar_inv_no$+$ff$,dom=*continue)
            k1$=ope11a_key.firm_id$+ope11a_key.ar_type$+ope11a_key.customer_id$+ope11a_key.order_no$+ope11a_key.ar_inv_no$
Remove_Record: remove (ope11_dev,key=ope11a_key$)

            ope11a_key$=key(ope11_dev,end=*break)
            if pos(k1$=ope11a_key$)=1 then goto Remove_Record
    wend

Read_manual_Record: rem --- Read Manual Ship-To Records


    while more 
            ope31a_key$=key(ope31_dev,end=*break)
            if pos(ope31a_key.firm_id$=firm_id$)=0 then break
            read (ope31_dev,key=ope31a_key$,dom=*continue)
            hdr_key$=ope31a_key.firm_id$+"  "+ope31a_key.customer_id$+ope31a_key.order_no$+ope31a_key.ar_inv_no$
            gosub check_header
            if header$="YES" then continue
            remove (ope31_dev,key=ope31a_key$)

    wend

Read_Lot_Serial: rem --- Read Lot/Serial Detail Records


    while more
            ope21a_key$=key(ope21_dev,end=*break)
            if pos(ope21a_key.firm_id$=firm_id$)=0 then break
            read (ope21_dev,key=ope21a_key$,dom=*continue)
            hdr_key$=ope21a_key.firm_id$+ope21a_key.ar_type$+ope21a_key.customer_id$+ope21a_key.order_no$+ope21a_key.ar_inv_no$
            gosub check_header
            if header$="YES" then read (ope21_dev,key=ope21a_key.firm_id$+ope21a_key.ar_type$+ope21a_key.customer_id$+ope21a_key.order_no$+ope21a_key.ar_inv_no$+$ff$,dom=*continue)
            k1$=ope21a_key.firm_id$+ope21a_key.ar_type$+ope21a_key.customer_id$+ope21a_key.order_no$+ope21a_key.ar_inv_no$
        while more
Remove_Record1: remove (ope21_dev,key=ope21a_key$)

                 ope21a_key$=key(ope21_dev,end=done)
                 if pos(k1$=ope21a_key$)=1 then goto Remove_Record1
        wend
    wend

done: rem --- End

           goto std_exit

check_header: rem --- Check For Valid Header Record

    header$="NO"
    call pgmdir$+"adc_progress.aon","S","","","","",0,0,1,meter_num,status
    find (ope01_dev,key=hdr_key$,dom=header)
    header$="YES"
header:
    return
    
disp_message:rem --- Display Message Dialog

    call stbl("+DIR_SYP")+"bac_message.bbj",msg_id$,msg_tokens$[all],msg_opt$,table_chans$[all]
    return    

rem #include std_error.src

std_error: rem --- Standard error handler (18Nov2014)

    if tcb(19)>0
        rem --- Escape handler
        if and(chr(tcb(19)),$08$)=$08$
            release
        else
            setesc std_error
            return
        endif
    endif

    if err=0   
        rem --- Get tcb(12) and tcb(10) to send into bac_error
        lock_byte=tcb(10)
        lock_chan=tcb(12)  
    endif

    rd_err_text$=""
    if tcb(2)=0 and tcb(5) then rd_err_text$=pgm(tcb(5),tcb(13),err=*next)
    call stbl("+DIR_SYP")+"bac_error.bbj",pgm(-2),str(tcb(5)),str(err),rd_err_text$,rd_err_act$,lock_byte,lock_chan
    if pos("ESCAPE"=rd_err_act$) seterr 0; setesc 0
    if pos("RETRY"=rd_err_act$) retry
    if pgm(-1)<>pgm(-2) status=999; exit 
    release

rem #endinclude std_error.src
rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:                                   str(err:"000"),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    msg_id$="UPDATE_COMPLETE"
    dim msg_tokens$[1]
    msg_opt$=""
    gosub disp_message

std_exit_no_update:

    call pgmdir$+"adc_progress.aon","D","","","","",0,0,0,meter_num,status
    run stbl("+DIR_SYP")+"bas_process_end.bbj",err=*next
    release

rem #endinclude std_end.src

    end
