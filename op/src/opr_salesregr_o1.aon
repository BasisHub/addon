rem --- Monthly Sales Register
rem --- Program opr_zb v8.0.0 22Jan2008 (opr_zb)
rem --- Created by c:\codeport_bbj\adx_codeport.bbj v1.1.5 (01/22/2008 04:35:26)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright (c) 1981-2007 AddonSoftware
rem --- All Rights Reserved


        seterr std_error
        setesc std_error

rem --- Document initializations

        OutVect!=bbjAPI().getSysGui().makeVector()
        HdrVect!=bbjAPI().getSysGui().makeVector()
        BrkVect!=bbjAPI().getSysGui().makeVector()
        rep_date$=date(0:"%Mz/%Dz/%Yd")
        rep_date_stamp$=date(0:"%Yd%Mz%Dz")
        rep_time$=date(0:"%hz:%mz %p")
        rep_time_stamp$=date(0:"%Hz%mz%sz")

rem --- Retrieve the program path

        pgmdir$=stbl("+DIR_PGM",err=*next)

rem --- Retrieve sysinfo data

        sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
        dim sysinfo$:sysinfo_template$
        sysinfo$=stbl("+SYSINFO",err=*next)
        milestone=num(stbl("+MILESTONE",err=*next),err=*next)
        firm_id$=sysinfo.firm_id$

rem --- Open/Lock Files

        call pgmdir$+"adc_printer.aon",printer_dev,1,"","",status
        if status then goto std_exit

rem --- Parameters

        g5=len(gls01a.acct_output$)
        m0=len(m0$)
        m1=len(m1$)


rem --- Parameters
        call stbl("+DIR_PGM")+"adc_getmask.aon","","AR","I","",m0$,0,m0
        call stbl("+DIR_PGM")+"adc_getmask.aon","","AR","A","",m1$,0,m1 

rem --- Initializations
        fr=0
        more=1
        cntr=0
        cntr1=0
        t0$=""
        t1$="",d1=0,d2=0,d3=0,c1=0,c2=0,c3=0
        if r1$="" then  h5$="First" else if r0$="A" then  h5$=r1$ else  h5$=fnmask$(r1$,m0$)
        if r2$="" then  h6$="Last" else if r0$="A" then  h6$=r2$ else  h6$=fnmask$(r2$,m0$)
        if r3$="" then  h7$="First" else  h7$=fndate$(r3$)
        if r4$="" then  h8$="Last" else  h8$=fndate$(r4$)
        if r5$="S" then
            h9$="*** Summary ***",x8$=""
            x9$=""
        else
            h9$="*** Detail ***"
            x8$="No."
            x9$="Line"
        endif
        when$=sysinfo.system_date$
        clock$="",page=0,width=132,l9=55,l=l9+1,headings=5
        dim headings$[headings],j1$(width),j2$(width,"-"),j3$(width,"="),j4$(width-100," ")
        headings$[0]=n1$
        headings$[1]=n3$
        headings$[2]=h9$
        if r1$=""headings$[3]="Begining Customer: First" else headings$[3]="Begining Customer:"+r1$
        if r2$="" headings$[3]=headings$[3]+" -- Ending Customer: Last" else headings$[3]=headings$[3]+" -- Ending Customer: "+r2$
        if r3$="" headings$[4]="Begining Invoice Date: First" else headings$[4]="Begining Order Date "+r3$                
        if r4$="" headings$[4]=headings$[4]+" -- Ending Invoice Date: Last" else headings$[4]=headings$[4]+" -- Ending Order Date: "+r4$

rem --Column heading
        dim columns$[7,10]
        columns = 8

        columns$[0,0]="Customer No & Name", columns$[0,1]="C",columns$[0,2]="30"
        columns$[1,0]="Inv.No",             columns$[1,1]="C",columns$[1,2]="8"
        columns$[2,0]="Inv.Date",           columns$[2,1]="C",columns$[2,2]="10"
        columns$[3,0]="Line.No",            columns$[3,1]="C",columns$[3,2]="8"
        columns$[4,0]="G.L.No.",            columns$[4,1]="C",columns$[4,2]="8"
        columns$[5,0]="Description",        columns$[5,1]="C",columns$[5,2]="25"
        columns$[6,0]="Debit",              columns$[6,1]="N",columns$[6,2]="10",columns$[6,3]=m1$
        columns$[7,0]="Credit",             columns$[7,1]="N",columns$[7,2]="10",columns$[7,3]=m1$


rem --- retrieve template for ARM_CUSTMAST record key
        call stbl("+DIR_SYP")+"bac_key_template.bbj","ARM_CUSTMAST","ALT_KEY_02",arm01a_altkey02_tpl$,table_chans$[all],status$
        dim arm01a_altkey$:arm01a_altkey02_tpl$

rem --- retrieve template for OPT_ORDHDR record key
        call stbl("+DIR_SYP")+"bac_key_template.bbj","OPT_ORDHDR","PRIMARY",opt01a_key_tpl$,table_chans$[all],status$
        dim opt01a_key$:opt01a_key_tpl$

rem --- retrieve template for OPT_ORDDET record key
        call stbl("+DIR_SYP")+"bac_key_template.bbj","OPT_ORDDET","PRIMARY",opt11a_key_tpl$,table_chans$[all],status$
        dim opt11a_key$:opt11a_key_tpl$

rem --- retrieve template for OPW_MTDGLJRN record key
        call stbl("+DIR_SYP")+"bac_key_template.bbj","OPW_MTDGLJRN","PRIMARY",opw04a_key_tpl$,table_chans$[all],status$
        dim opw04a_key$:opw04a_key_tpl$

rem --- retrieve template for GLW_ACCTTOTALS record key
        call stbl("+DIR_SYP")+"bac_key_template.bbj","GLW_ACCTTOTALS","PRIMARY",glw04a_key_tpl$,table_chans$[all],status$
        dim glw04a_key$:glw04a_key_tpl$


rem --- Background

        call pgmdir$+"adc_progress.aon","N","","","","",0,opt01_dev,1,meter_num,status

rem --- Create Work File

        if r0$="N" then
            cntr=1
            read (opt01_dev,key=firm_id$+"  "+r1$,dom=temp_flag)
        endif
        read (arm01_dev,key=firm_id$+r1$,knum=2,dom=*next)
    
temp_flag:
    while more
        if cntr=0
            arm01a_altkey$=key(arm01_dev,knum=2,end=*break)
            if arm01a_altkey.firm_id$<>firm_id$ then break
            if r2$<>"" and arm01a_altkey.alt_sequence$(1,len(r2$))>r2$ then break
            read (arm01_dev)
            if r0$="A" then read (opt01_dev,key=firm_id$+"  "+arm01a_altkey.customer_id$,dom=*next)
        endif

init_read: rem --- Initial Read

label_one:
            if r0$="N" then  opt01a_key$=key(opt01_dev,end=end_of_file)
            if r0$="A" then  opt01a_key$=key(opt01_dev,end=*continue)



            if opt01a_key.firm_id$=firm_id$ then
                if r0$="A" then
                    if opt01a_key.customer_id$<>arm01a_altkey.customer_id$ then
                        continue
                    endif
                endif
                if r0$="N" and r2$<>"" and opt01a_key.customer_id$>r2$ then break
                read record (opt01_dev,key=opt01a_key$) opt01a$
                call pgmdir$+"adc_progress.aon","S","","","","",0,0,1,meter_num,status
                if r3$<>"" and opt01a.invoice_date$<r3$ then goto init_read
                if r4$<>"" and opt01a.invoice_date$>r4$ then goto init_read
                arm10d.ar_dist_code$=opt01a.dist_code$

                gosub ar_account_cash_account

rem --- Read Detail

        read (opt11_dev,key=opt01a.firm_id$+opt01a.ar_type$+opt01a.customer_id$+opt01a.ar_inv_no$,dom=*next)


read_detail:
        opt11a_key$=key(opt11_dev,end=init_read)
        if opt11a_key.firm_id$+opt11a_key.ar_type$+opt11a_key.customer_id$+opt11a_key.ar_inv_no$<>opt01a.firm_id$+opt01a.ar_type$+opt01a.customer_id$+opt01a.ar_inv_no$ then goto init_read
        read record (opt11_dev,key=opt11a_key$) opt11a$

rem --- Line Type

        d1$=""
        find record (opm02_dev,key=opt11a.firm_id$+opt11a.line_code$,dom=find_revenue_account) opm02a$
        if opm02a.line_type$="M" then goto read_detail



        if opm02a.line_type$<>"S" then
            if opm02a.line_type$<>"O" then  arm10d.ar_dist_code$=opm02a.dist_code$; goto find_revenue_account
            find (glm01_dev,key=opt11a.firm_id$+opm02a.gl_rev_acct$,dom=find_revenue_account)
            arm10d.gl_ar_acct$=opm02a.gl_rev_acct$

        else
rem --- Standard Item

            arm10d.ar_dist_code$=opt01a.dist_code$
            if ars01a.dist_by_item$="Y" then
                find record (ivm02_dev,key=opt11a.firm_id$+opt11a.warehouse_id$,dom=find_revenue_account) ivm02a$
                arm10d.ar_dist_code$=ivm02a.dist_code$
            endif

find_revenue_account: rem --- Find Revenue Account

            if d1$="" then
                find record (arm10d_dev,key=opt11a.firm_id$+"D"+opt01a.dist_code$,dom=read_detail) arm10d$
                d1$=arm10d.gl_sls_acct$
            endif
        endif



        d0=-opt11a.ext_price
        if r5$="D" then
            z9$=opt11a.line_no$
        else
            z9$="   "
        endif
        gosub write_to_work_file
        goto read_detail
    endif




end_of_file: rem --- End Of File?

        if r0$="A" then
            continue
        else
            break
        endif
    wend


rem if summary program exists to glr_accttotalrpt.aon

    if r5$="S" then
        retain$="YES"
        update$=pgmdir$+"glr_accttotalrpt.aon"
        overlay$=update$
        out_action$="PRT-PDF"
        run pgmdir$+"glr_accttotalrpt.aon"
        goto std_exit
    endif

    
rem --- Initial Read From Work File

    if r0$="N" then
        cntr1=1
        read (opw04_dev,key=firm_id$,dom=temp_flag2)
    else
        read (arm01_dev,key=firm_id$+r1$,knum=2,dom=*next)
    endif

temp_flag2:

 while more
    
    if cntr1=0
        arm01a_altkey$=key(arm01_dev,knum=2,end=done)
        if arm01a_altkey.firm_id$<>firm_id$ then break
        if r2$<>"" and arm01a_altkey.alt_sequence$(1,len(r2$))>r2$ then break
        read (arm01_dev)
        read (opw04_dev,key=firm_id$+"  "+arm01a_altkey.customer_id$,dom=*next)
    endif

heading_read: rem --- Heading Read
    times=0
    chce=0
    if r0$="A" then
        opw04a_key$=key(opw04_dev,end=*continue)
    else
        opw04a_key$=key(opw04_dev,end=done)
    endif





    if opw04a_key.firm_id$=firm_id$ then
        if r0$="A" then
            if opw04a_key.customer_id$<>arm01a_altkey.customer_id$ then
                continue
            endif
        endif
        read record (opw04_dev,key=opw04a_key$) opw04a$

rem --- Breaks
        
        if opw04a_key.customer_id$<>t0$ then
            gosub customer_break
            times=1
        endif

        if opw04a_key.ar_inv_no$<>t1$ then

        if d3-abs(c3)<>0 then chce=1; gosub previous_invoice_outof_balance
            if times=0
                xwk = fnblank(6)
            endif



rem --- Find Invoice Date

            read record (opt01_dev,key=opw04a_key.firm_id$+opw04a_key.ar_type$+opw04a_key.customer_id$+opw04a_key.ar_inv_no$,dom=*next) opt01a$

rem --- Print Invoice Number & Date
        
        call pgmdir$+"adc_progress.aon","S","","","","",0,0,1,meter_num,status
        if r5$="D" then 
                
                OutVect!.addItem(opw04a_key.ar_inv_no$)
                OutVect!.addItem(str(fndate$(opt01a.invoice_date$)))
            endif

            t1$=opw04a_key.ar_inv_no$
            d3=0
            c3=0
        endif

rem --- Find G/L Name

        glm01a.gl_acct_desc$="*** Not On File ***"
        find record (glm01_dev,key=firm_id$+opw04a_key.gl_account$,dom=print_detail) glm01a$
        x1$=glm01a.gl_acct_desc$

print_detail: rem --- Print
            
        if r5$="D" then
            OutVect!.addItem(opw04a_key.line_no$)
            OutVect!.addItem(fnmask$(opw04a_key.gl_account$(1,g[3]),g5$))
            OutVect!.addItem(x1$)

            if opw04a.gl_post_amt>0 then
                OutVect!.addItem(str(opw04a.gl_post_amt))
                xwk = fnblank(1)
            else
                xwk = fnblank(1)
                OutVect!.addItem(str(abs(opw04a.gl_post_amt)))
            endif
            l=l+1
            xwk = fnblank(3)
            
        endif

        if opw04a.gl_post_amt>0 then
            d1=d1+opw04a.gl_post_amt
            d2=d2+opw04a.gl_post_amt
            d3=d3+opw04a.gl_post_amt
        else
            c1=c1+opw04a.gl_post_amt
            c2=c2+opw04a.gl_post_amt
            c3=c3+opw04a.gl_post_amt
        endif
        goto heading_read
    endif


rem --- End of file?

        if r0$="A" then
            continue
        else
            break
        endif
 wend


done: rem --- End

        t9$="E"
        gosub customer_break
        if r5$="D" then
            xwk = fnblank(6)
            OutVect!.addItem("-----------------")
            OutVect!.addItem("-----------------")
            xwk = fnblank(6)
            OutVect!.addItem("-----------------")
            OutVect!.addItem("-----------------")
            OutVect!.addItem("Grand Total : ")
            if d2-abs(c2)<>0 then
                xwk = fnblank(4)
                OutVect!.addItem("***")
            else
                xwk = fnblank(5)
            endif
            OutVect!.addItem(str(d2))
            OutVect!.addItem(str(abs(c2)))
        endif

rem --- G/L Account Totals

        retain$="YES"
        update$=pgmdir$+"glr_accttotalrpt.aon"
        overlay$=update$
        out_action$="PRT-PDF"
        next_overlay$=overlay$
        goto std_exit

ar_account_cash_account: rem --- A/R Account, Cash Account

        rem dim d9$(80)
        find record (arm10d_dev,key=firm_id$+"D"+opt01a.dist_code$,dom=rtn_1) arm10d$
        if opt01a.cash_sale$="Y" then
            d1$=arm10d.gl_cash_acct$
        else
            d1$=arm10d.gl_ar_acct$
        endif
        d0=opt01a.total_sales+opt01a.tax_amount+opt01a.freight_amt-opt01a.discount_amt
        z9$="   "
        gosub write_to_work_file

rem --- Discount Amount

    if opt01a.discount_amt<>0 then
        d1$=arm10d.gl_disc_acct$
        d0=opt01a.discount_amt
        z9$="   "
        gosub write_to_work_file
    endif

rem --- Freight Amount

    if opt01a.freight_amt<>0 then
        d1$=arm10d.gl_frgt_acct$
        d0=-opt01a.freight_amt
        z9$="   "
        gosub write_to_work_file
    endif

rem --- Tax Account

    precision 4
    rem dim tax$(60),x0$(60)
    find record (opm06_dev,key=firm_id$+opt01a.tax_code$,dom=rtn_1) opm06a$
    x=x0*opt01a.taxable_amt/100
    precision 2
    x=x*1
    if x1<>0 and abs(x)>x1 then  x=x1*sgn(x)
    y=x
    d1$=opm06a.gl_account$
    d0=-x
    if d0<>0 then gosub write_to_work_file
    arm01a.customer_name$=opm06a$
    for x9=1 to 10
        precision 4
        if x9=1 then x1$=opm06a.ar_tot_code_01$
        if x9=2 then x1$=opm06a.ar_tot_code_02$
        if x9=3 then x1$=opm06a.ar_tot_code_03$
        if x9=4 then x1$=opm06a.ar_tot_code_04$
        if x9=5 then x1$=opm06a.ar_tot_code_05$
        if x9=6 then x1$=opm06a.ar_tot_code_06$
        if x9=7 then x1$=opm06a.ar_tot_code_07$
        if x9=8 then x1$=opm06a.ar_tot_code_08$
        if x9=9 then x1$=opm06a.ar_tot_code_09$
        if x9=10 then x1$=opm06a.ar_tot_code_10$
        if x1$<>"  " then
            find record (opm06_dev,key=firm_id$+x1$,dom=*continue) opm06a2$
            x=x0*opt01a.taxable_amt/100
            precision 2
            x=x*1
            if x1<>0 and abs(x)>x1 then  x=x1*sgn(x)
            y=y+x
            d1$=opm06a.gl_account$
            d0=-x
            if d0<>0 then gosub write_to_work_file
        endif
    next x9
    precision 2
    if opt01a.tax_amount<>y then
        x=opt01a.tax_amount-y
        d1$=opm06a.gl_account$
        d0=-x
        if d0<>0 then gosub write_to_work_file
    endif
rtn_1:
    return

customer_break: rem --- Customer Break

    if t0$<>"" then
        if d3-abs(c3)<>0 then
            chce=1
            gosub previous_invoice_outof_balance
            chce=0
        endif
        if r5$="D" then
            xwk = fnblank(3)
            OutVect!.addItem("-----------------")
            OutVect!.addItem("-----------------")
            OutVect!.addItem("Customer "+t0$+" Total: ")
            xwk = fnblank(5)
            OutVect!.addItem(str(d1))
            OutVect!.addItem(str(abs(c1)))
            xwk = fnblank(8)
            l=l+3
        endif
    endif


    if t9$<>"E" then
        arm01a.customer_name$="*** Not On File ***"
        if r0$="N"
            find record (arm01_dev,key=opw04a.firm_id$+opw04a.customer_id$,dom=label_three) arm01a$
        else
            find record (arm01_dev,key=opw04a.firm_id$+arm01a_altkey.alt_sequence$+opw04a.customer_id$,knum=2,dom=label_three) arm01a$
        endif
        x0$=fnmask$(opw04a.customer_id$,m0$)+" "+arm01a.customer_name$
        if r5$="D" then
label_three:

            OutVect!.addItem(x0$)
        endif

        t0$=opw04a_key.customer_id$
        d1=0
        c1=0
        d3=0
        c3=0
    endif

    return

previous_invoice_outof_balance: rem --- Previous Invoice Out Of Balance

    gosub invoice_history_detl_retained
    if d3-abs(c3)<>0 then
         
        if r5$="D" then
               
                xwk = fnblank(2)
                OutVect!.addItem("**")
                OutVect!.addItem(str(d3:m1$))
                OutVect!.addItem(str(abs(c3):m1$))
                xwk = fnblank(8)
                xwk = fnblank(3)
                endif
        endif
       
    endif

    return

invoice_history_detl_retained: rem --- Invoice History Detail Retained?

    read (opt11_dev,key=opw04a_key.firm_id$+opw04a_key.ar_type$+opw04a_key.customer_id$+opw04a_key.ar_inv_no$,dom=*next)
    opt11a_key$=key(opt11_dev,end=*next)
    if pos(opw04a_key.firm_id$+opw04a_key.ar_type$+opw04a_key.customer_id$+opw04a_key.ar_inv_no$=opt11a_key$)=1
        return
    endif
    oob=-(d3-abs(c3))

rem --- Summarize Non-Retained Postings

    d1$=fill(g[4],"?")
    d0=oob
    gosub update_gl_summary
    if r5$="D" then
        if chce=0
            xwk = fnblank(2)
        endif
        OutVect!.addItem("???")
        OutVect!.addItem(fnmask$(arm10d.gl_ar_acct$(1,g[3]),gls01a.acct_output$))
        OutVect!.addItem("***Detail Not Retained***")
        if oob>0 then
            OutVect!.addItem(str(oob))
            xwk = fnblank(1)
        else
            xwk = fnblank(1)
            OutVect!.addItem(str(abs(oob)))
        endif
        if chce=0 then
            xwk = fnblank(1)
        else
            xwk = fnblank(3)
           
        endif
        if oob>0 then
            d1=d1+oob
            d2=d2+oob
            d3=d3+oob
        else
            c1=c1+oob
            c2=c2+oob
            c3=c3+oob
        endif
    endif

    return

write_to_work_file: rem --- Write To Work File

    z0=0
    dim opw04a2$:templates$[15]
    opw04a2.firm_id$=opt01a.firm_id$
    opw04a2.ar_type$=opt01a.ar_type$
    opw04a2.customer_id$=opt01a.customer_id$
    opw04a2.ar_inv_no$=opt01a.ar_inv_no$
    opw04a2.gl_account$=d1$
    opw04a2.line_no$=z9$
    opw04a2.gl_post_amt=d0
    find record (opw04_dev,key=opw04a.firm_id$+opw04a.ar_type$+opw04a.customer_id$+opw04a.ar_inv_no$+opw04a.gl_account$+opw04a.line_no$,dom=*next) opw04a2$
    opw04a2.gl_post_amt=opw04a2.gl_post_amt+d0
    write record (opw04_dev,key=opw04a.firm_id$+opw04a.ar_type$+opw04a.customer_id$+opw04a.ar_inv_no$+opw04a.gl_account$+opw04a.line_no$) opw04a2$

update_gl_summary: rem --- Update G/L Summary

    if d0<>0 then
        glw04a.firm_id$=opt01a.firm_id$
        glw04a.gl_account$=d1$

        glw04a.gl_post_amt=0
        glw04a.units=0

        read record (glw04_dev,key=glw04a.firm_id$+glw04a.gl_account$,dom=*next) glw04a$
        glw04a.gl_post_amt=glw04a.gl_post_amt+d0
        write record (glw04_dev,key=glw04a.firm_id$+glw04a.gl_account$,err=*next) glw04a$
    endif

    return

rem #include std_functions.src
rem --- Standard AddonSoftware functions (01Mar2006)
rem --- Functions used to retrieve form values

    def fnstr_pos(q0$,q1$,q1)=int((pos(q0$=q1$,q1)+q1-1)/q1)
    def fnget_rec_date$(q0$)=rd_rec_data$[fnstr_pos(cvs(q0$,1+2+4)+"."+
:                            cvs(q0$,1+2+4),rd_rec_data$[0,0],40),0]
    def fnget_fld_data$(q0$,q1$)=cvs(rd_rec_data$[fnstr_pos(cvs(q0$,1+2+4)+"."+
:                                cvs(q1$,1+2+4),rd_rec_data$[0,0],40),0],2)
    def fnget_table$(q0$)=rd_alias_id$

rem --- Miscellaneous functions

    def fncenter(q$,q)=int((q-len(q$))/2)

rem --- Format inventory item description

    def fnitem$(q$,q1,q2,q3)=cvs(q$(1,q1)+" "+q$(q1+1,q2)+" "+q$(q1+q2+1,q3),32)

rem --- Date/time handling functions
        def fndate$(q$)
            if cvs(q$,2)="" return ""
            if pos("9"<>q$)=0 return q$
            testdate$=""
            testdate$=date(jul(num(q$(1,4)),num(q$(5,2)),num(q$(7,2)),err=*next),err=*next)
            return testdate$
        fnend

rem     def fndate$(q$)=date(jul(num(q$(1,4)),num(q$(5,2)),num(q$(7,2))))
    def fnyy$(q$)=q$(3,2)
    def fnclock$(q$)=date(0:"%hz:%mz %p")
    def fntime$(q$)=date(0:"%Hz%mz")

rem --- fnBlank : Create blank cells in OutVect!. No return value
   
    def fnblank(q0)
        for q1=1 to q0
            OutVect!.addItem("")
        next q1
        return q1
    fnend

rem --- fnmask$: Alphanumeric Masking Function (formerly fnf$)

    def fnmask$(q1$,q2$)
        if q2$="" q2$=fill(len(q1$),"0")
        return str(-num(q1$,err=*next):q2$,err=*next)
        q=1
        q0=0
        while len(q2$(q))
              if pos(q2$(q,1)="-()") q0=q0+1 else q2$(q,1)="X"
              q=q+1
        wend
        if len(q1$)>len(q2$)-q0 q1$=q1$(1,len(q2$)-q0)
        return str(q1$:q2$)
    fnend

rem --- fnbasename$: Strip path and optionally the suffix from a file name

    def fnbasename$(q$,q0$)
        q=max(pos("/"=q$,-1),pos(":"=q$,-1),pos(">"=q$,-1),pos("\"=q$,-1))
        if q then q$=q$(q+1)
        if q0$<>"" then q=mask(q$,q0$); if q q$=q$(1,q-1)
    return q$

rem --- fnglobal: Return numeric value of passed stbl variable

    def fnglobal(q$,q1)
        q1$=stbl(q$,err=*next),q1=num(q1$,err=*next)
        return q1
    fnend

rem --- fnglobal$: Return string value of passed STBL variable

    def fnglobal$(q$,q1$)
        q1$=stbl(q$,err=*next)
        return q1$
    fnend

rem #endinclude std_functions.src

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    call stbl("+DIR_SYP")+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:                                str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src
rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:                                   str(err:"000"),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)
   
    run stbl("+DIR_SYP")+"bas_process_end.bbj",err=*next
    release
rem #endinclude std_end.src

    end
