rem --- Invoice Edit Report
rem --- Program opr_ja v8.0.0 25Jan2008 (opr_ja)
rem --- Created by c:\codeport_bbj\adx_codeport.bbj v1.1.5 (01/25/2008 03:03:13)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright BASIS International Ltd.  All Rights Reserved.
rem --- All Rights Reserved

    setesc std_error
    seterr std_error
    
rem --- Use statements

    use ::sys/prog/bao_option.bbj::Option

rem --- Retrieve the program path

    pgmdir$=""
    pgmdir$=stbl("+DIR_PGM",err=*next)
    sypdir$=""
    sypdir$=stbl("+DIR_SYP",err=*next)

rem --- Retrieve sysinfo data

    sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=*next)
    firm_id$=sysinfo.firm_id$

    milestone=50
    milestone=num(stbl("+MILESTONE",err=*next))

rem --- Open/Lock files

    files=14,begfile=1,endfile=files
    dim files$[files],options$[files],ids$[files],templates$[files],channels[files]
    files$[1]="arm-01",ids$[1]="ARM_CUSTMAST"
    files$[2]="arm-02",ids$[2]="ARM_CUSTDET"
    files$[3]="arc_termcode",ids$[3]="ARC_TERMCODE"
    files$[4]="ars_params",ids$[4]="ARS_PARAMS"
    files$[5]="ivm-01",ids$[5]="IVM_ITEMMAST"
    files$[6]="ivm-02",ids$[6]="IVM_ITEMWHSE"
    files$[7]="ivm-04",ids$[7]="IVM_ITEMTIER"
    files$[8]="ivc_prodcode",ids$[8]="IVC_PRODCODE"
    files$[9]="ivs_params",ids$[9]="IVS_PARAMS"
    files$[10]="ope-01",ids$[10]="OPE_ORDHDR"
    files$[11]="ope-11",ids$[11]="OPE_ORDDET"
    files$[12]="ope-21",ids$[12]="OPE_ORDLSDET"
    files$[13]="opm-02",ids$[13]="OPC_LINECODE"
    
    call pgmdir$+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],
:       ids$[all],templates$[all],channels[all],batch,status
    if status then goto std_exit
    
    arm01_dev=channels[1]
    arm02_dev=channels[2]
    arm10_dev=channels[3]
    ars01a_dev=channels[4]
    ivm01_dev=channels[5]
    ivm02_dev=channels[6]
    ivm04_dev=channels[7]
    ivm10_dev=channels[8]
    ivs01a_dev=channels[9]
    ope01_dev=channels[10]
    ope11_dev=channels[11]
    ope21_dev=channels[12]
    opm02_dev=channels[13]

rem --- Dimension string templates

    dim arm01a$:templates$[1],arm02a$:templates$[2],arm10a$:templates$[3],
:       ars01a$:templates$[4],ivm01a$:templates$[5],ivm02a$:templates$[6],
:       ivm04a$:templates$[7],ivm10a$:templates$[8],ivs01a$:templates$[9],
:       ope01a$:templates$[10],ope11a$:templates$[11],
:       ope21a$:templates$[12],opm02a$:templates$[13]

rem --- Assign form input values to local variables

    declare Option option!

    from_cust$  = option!.getOptionData("CUSTOMER_ID_1")
    thru_cust$  = option!.getOptionData("CUSTOMER_ID_2")
    from_ord$   = option!.getOptionData("ORDER_NO_1")
    thru_ord$   = option!.getOptionData("ORDER_NO_2")
    taken_by$   = option!.getOptionData("ORD_TAKEN_BY")
    print_stat$ = option!.getOptionData("OPR_PRINT_STATUS")
    page_break$ = option!.getOptionData("PICK_CHECK")

rem --- Parameters

    dim i[5],p[2]
    n1$=sysinfo.firm_name$
    n2$="AR"
    n4$=sysinfo.task_desc$
    lf$="N"
    
    find record (ars01a_dev,key=firm_id$+n2$+"00",dom=std_missing_params) ars01a$
    find record (ivs01a_dev,key=firm_id$+"IV00",dom=std_missing_params) ivs01a$
    
    if pos(ivs01a.lifofifo$="LF") then  lf$="Y"
    i[0]=ivs01a.item_id_len
    i[1]=num(ivs01a.precision$)
    i[2]=ivs01a.ls_no_len
    i[3]=num(ivs01a.desc_len_01$)
    i[4]=num(ivs01a.desc_len_02$)
    i[5]=num(ivs01a.desc_len_03$)
    call stbl("+DIR_PGM")+"adc_getmask.aon","","AR","I","",m0$,0,m0
    p[0]=m0
    p[1]=max(6,p[0])

rem --- Initialize Data

    dim lf_channels[1]
    h0=132
    if from_cust$="" and thru_cust$="" or from_cust$<>thru_cust$ then from_ord$=""
    if from_cust$="" and thru_cust$="" or from_cust$<>thru_cust$ then thru_ord$=""

rem --- Run report overlay

    run pgmdir$+"opr_invoiceedit_o1.aon"

rem --- #include std_error.src

std_error: rem --- Standard error handler (22Feb2013)

    if tcb(19)>0
        rem --- Escape handler
        if and(chr(tcb(19)),$08$)=$08$
            release
        else
            setesc std_error
            return
        endif
    endif

    rd_err_text$=""
    if tcb(2)=0 and tcb(5) then rd_err_text$=pgm(tcb(5),tcb(13),err=*next)
    call stbl("+DIR_SYP")+"bac_error.bbj",pgm(-2),str(tcb(5)),str(err),rd_err_text$,rd_err_act$
    if pos("ESCAPE"=rd_err_act$) seterr 0; setesc 0
    if pos("RETRY"=rd_err_act$) retry
    if pgm(-1)<>pgm(-2) status=999; exit 
    release

rem --- #endinclude std_error.src
rem --- #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:       str(err:"000"),rd_err_text$,rd_err_act$

std_missing_params_exit: 
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape

std_missing_params_release: 
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem --- #endinclude std_missing_params.src

rem --- #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    run stbl("+DIR_SYP")+"bas_process_end.bbj",err=*next
    release
    
rem --- #endinclude std_end.src

    end
