rem --- Sales Register Update (Sales Analysis And History)
rem --- Program opu_updatesales.aon v8.0.0 08Feb2008 (opu_ca)
rem --- Created by c:\codeport_bbj\adx_codeport.bbj v1.1.5 (02/08/2008 10:10:02)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright BASIS International Ltd.  All Rights Reserved.
rem --- All Rights Reserved


    setesc std_error
    seterr std_error
    
    declare BBjVector OutVect!

    next_overlay$="";rem --- clear next_var and outvect! so adc_process_end doesn't loop...i.e., don't run anything after this
    if OutVect!<>null() then OutVect!=null()
	
rem --- Check for register errors

    if errors <> 0 then
		msg_id$="AON_REG_ERRS"
        gosub disp_message
		if pos("PASSVALID"=msg_opt$)=0 goto no_to_update
    endif
	
rem --- Check for missing information

    if missing_data <> 0 then
        msg_id$ = "OP_MISSING_LOTSER_NO"
        gosub disp_message
        goto no_to_update
    endif
    
rem --- Check for out-of-balance

    if balance <> 0 then
        msg_id$ = "OP_REGISTER_OOB"
        gosub disp_message
        goto no_to_update
    endif

rem --- Retrieve the program path

    pgmdir$=""
    pgmdir$=stbl("+DIR_PGM",err=*next)
    sypdir$=""
    sypdir$=stbl("+DIR_SYP",err=*next)

rem --- Retrieve sysinfo data

    dim sysinfo$:stbl("+SYSINFO_TPL")
    sysinfo$=stbl("+SYSINFO",err=*next)
    firm_id$=sysinfo.firm_id$

rem --- Open/Lock files

    files=40,begfile=1,endfile=files
    dim files$[files],options$[files],ids$[files],templates$[files],channels[files]

    files$[1]="arm-01",ids$[1]="ARM_CUSTMAST"
    files$[2]="arm-02",ids$[2]="ARM_CUSTDET"
    files$[3]="ivm-01",ids$[3]="IVM_ITEMMAST"
    files$[4]="ivm-02",ids$[4]="IVM_ITEMWHSE"
    files$[5]="ivw-05",ids$[5]="IVW_LFCOST"
    files$[6]="opt-01",ids$[6]="OPE_ORDHDR"
    files$[7]="ope-04",ids$[7]="OPE_PRNTLIST"
    files$[8]="opt-11",ids$[8]="OPE_ORDDET"
    files$[9]="opt-31",ids$[9]="OPE_ORDSHIP"
    files$[10]="opt-41",ids$[10]="OPE_INVCASH"
    files$[11]="opm-02",ids$[11]="OPC_LINECODE"
    files$[12]="opm-09",ids$[12]="OPM_CUSTJOBS"
    rem files$[13]="opt-01",ids$[13]="OPT_INVHDR"
    rem files$[14]="opt-21",ids$[14]="OPT_INVLSDET"
    rem files$[15]="opt-31",ids$[15]="OPT_INVSHIP"
    rem files$[16]="opt-41",ids$[16]="OPT_INVCASH"
    files$[17]="sam-01",ids$[17]="SAM_CUSTOMER"
    files$[18]="sam-02",ids$[18]="SAM_TERRITRY"
    files$[19]="sam-03",ids$[19]="SAM_SALESPSN"
    files$[20]="sam-04",ids$[20]="SAM_CUSTTYPE"
    files$[21]="sam-05",ids$[21]="SAM_CUSTSHIP"
    files$[22]="sam-06",ids$[22]="SAM_CUSTSIC"
    files$[23]="sam-07",ids$[23]="SAM_ITEM"
    files$[24]="sam-08",ids$[24]="SAM_WAREHSE"
    files$[25]="sam-09",ids$[25]="SAM_VENDOR"
    files$[26]="sam-10",ids$[26]="SAM_DISTCODE"
    files$[27]="sam-11",ids$[27]="SAM_NONSTOCK"
    files$[28]="ars_params",ids$[28]="ARS_PARAMS"
    files$[29]="sam_customer_tot",ids$[29]="SAM_CUSTOMER_TOT"
    files$[30]="sam_territry_tot",ids$[30]="SAM_TERRITRY_TOT"
    files$[31]="sam_salespsn_tot",ids$[31]="SAM_SALESPSN_TOT"
    files$[32]="sam_custtype_tot",ids$[32]="SAM_CUSTTYPE_TOT"
    files$[33]="sam_custship_tot",ids$[33]="SAM_CUSTSHIP_TOT"
    files$[34]="sam_custsic_tot",ids$[34]="SAM_CUSTSIC_TOT"
    files$[35]="sam_item_tot",ids$[35]="SAM_ITEM_TOT"
    files$[36]="sam_warehse_tot",ids$[36]="SAM_WAREHSE_TOT"
    files$[37]="sam_vendor_tot",ids$[37]="SAM_VENDOR_TOT"
    files$[38]="sam_distcode_tot",ids$[38]="SAM_DISTCODE_TOT"
    files$[39]="sam_nonstock_tot",ids$[39]="SAM_NONSTOCK_TOT"

    call pgmdir$+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],
:       ids$[all],templates$[all],channels[all],batch,status

    if status goto std_exit

    arm01_dev=channels[1]
    arm02_dev=channels[2]
    ivm01_dev=channels[3]
    ivm02_dev=channels[4]
    ivw05_dev=channels[5]
    ope01_dev=channels[6]
    ope04_dev=channels[7]
    ope11_dev=channels[8]
    ope31_dev=channels[9]
    ope41_dev=channels[10]
    opm02_dev=channels[11]
    opm09_dev=channels[12]
    rem opt01_dev=channels[13]
    rem opt21_dev=channels[14]
    rem opt31_dev=channels[15]
    rem opt41_dev=channels[16]
    sam01_dev=channels[17]
    sam02_dev=channels[18]
    sam03_dev=channels[19]
    sam04_dev=channels[20]
    sam05_dev=channels[21]
    sam06_dev=channels[22]
    sam07_dev=channels[23]
    sam08_dev=channels[24]
    sam09_dev=channels[25]
    sam10_dev=channels[26]
    sam11_dev=channels[27]
    ars01a_dev=channels[28]
    sam01tot_dev=channels[29]
    sam02tot_dev=channels[30]
    sam03tot_dev=channels[31]
    sam04tot_dev=channels[32]
    sam05tot_dev=channels[33]
    sam06tot_dev=channels[34]
    sam07tot_dev=channels[35]
    sam08tot_dev=channels[36]
    sam09tot_dev=channels[37]
    sam10tot_dev=channels[38]
    sam11tot_dev=channels[39]

rem --- Dimension string templates

    dim arm01a$:templates$[1],arm02a$:templates$[2],ivm01a$:templates$[3],
:       ivm02a$:templates$[4],ivw05a$:templates$[5],ope01a$:templates$[6],
:       ope04a$:templates$[7],ope11a$:templates$[8],ope31a$:templates$[9],
:       ope41a$:templates$[10],opm02a$:templates$[11],opm09a$:templates$[12],
:       sam01a$:templates$[17],sam02a$:templates$[18],
:       sam03a$:templates$[19],sam04a$:templates$[20],sam05a$:templates$[21],
:       sam06a$:templates$[22],sam07a$:templates$[23],sam08a$:templates$[24],
:       sam09a$:templates$[25],sam10a$:templates$[26],sam11a$:templates$[27],
:       ars01a$:templates$[28],
:       sam01tot$:templates$[29],sam02tot$:templates$[30],
:       sam03tot$:templates$[31],sam04tot$:templates$[32],sam05tot$:templates$[33],
:       sam06tot$:templates$[34],sam07tot$:templates$[35],sam08tot$:templates$[36],
:       sam09tot$:templates$[37],sam10tot$:templates$[38],sam11tot$:templates$[39]

    rem dim opt01a$:templates$[13],opt21a$:templates$[14],opt31a$:templates$[15],opt41a$:templates$[16]

rem --- Retrieve parameter records

    ars01a_key$=firm_id$+"AR00"
    find record (ars01a_dev,key=ars01a_key$,err=std_missing_params) ars01a$
    ivs01a_key$=firm_id$+"IV00"
    find record (ivs01a_dev,key=ivs01a_key$,err=std_missing_params) ivs01a$

rem --- Initializations

    precision i[2]
    dim iv_files[44],iv_info$[3],iv_params$[4],iv_refs$[20],iv_refs[20]
    iv_files[0]=sys01_dev
    iv_files[1]=ivm01_dev
    iv_files[2]=ivm02_dev
    iv_files[4]=ivm04_dev
    iv_files[40]=ivw04_dev
    iv_info$[0]=firm_id$
    iv_params$[0]=sysinfo.system_date$
    iv_params$[1]=sysinfo.user_id$
    iv_params$[2]=i2$
    iv_params$[3]=i3$
    iv_params$[4]=i4$

rem --- Continue?

    call pgmdir$+"adc_progress.aon","D","","","","",0,0,0,0,ignore_status
    if status = 999 then goto std_exit
    
    msg_id$ = "OP_UPDATE_SALESREG"
    gosub disp_message
    if msg_opt$<>"Y" then goto no_to_update
    
    call pgmdir$+"adc_progress.aon","N",sysinfo.task_desc$,"Sales Analysis And History","Updating","",m0+8,ope04_dev,1,0,ignore_status
    if status = 999 then goto std_exit
    
rem --- Inits

    more=1

rem --- Position File

    read (ope04_dev,key=firm_id$+"I",dom=*next)

rem --- Main read 

    while more

        read record (ope04_dev, end=*break) ope04a$
        if ope04a.firm_id$<>firm_id$ or ope04a.ordinv_flag$<>"I" then break

        ope01_found=0      
        ope01_trip$=firm_id$+ope04a.ar_type$+ope04a.customer_id$+ope04a.order_no$
        read(ope01_dev,key=ope01_trip$,dom=*next)
        while 1
            ope01_key$=key(ope01_dev,end=*break)
            if pos(ope01_trip$=ope01_key$)<>1 then break
            extract record (ope01_dev) ope01a$; rem Advisory Locking
            if ope01a.print_status$<>"Y" or ope01a.lock_status$<>"S" then read(ope01_dev); continue
            if ope01a.ordinv_flag$<>"I" then read(ope01_dev); continue
            if ope01a.trans_status$<>"R" then read(ope01_dev); continue
            
            ope01a.lock_status$="1"
            ope01a.mod_user$=sysinfo.user_id$
            ope01a.mod_date$=date(0:"%Yd%Mz%Dz")
            ope01a.mod_time$=date(0:"%Hz%mz")
            ope01a$ = field(ope01a$)
            write record (ope01_dev) ope01a$
            ope01_found=1      
            break; rem --- new order can have at most just one new invoice, if any
        wend
        if !ope01_found then continue
        
        call pgmdir$+"adc_progress.aon","S","","","","",0,0,1,meter_num,status
        if status = 999 then exitto std_exit

    rem --- Addition Reads

        ext_sales = 0
        ext_returns = 0
        ext_other = 0
        find record (arm01_dev,key=firm_id$+ope01a.customer_id$,dom=*next) arm01a$
        find record (arm02_dev,key=firm_id$+ope01a.customer_id$+"  ",dom=*next) arm02a$

    rem --- Voids are done

        if ope01a.invoice_type$="V" then continue

    rem --- Position Invoice Detail File

        ope11_trip$=ope01_key$
        read (ope11_dev,key=ope11_trip$,dom=*next)

    rem --- Read next line item  
    
        prev_line_code$ = ""
        while more
            ope11_key$=key(ope11_dev,end=*break)
            if pos(ope11_trip$=ope11_key$)<>1 then break
            read record (ope11_dev) ope11a$
            if ope11a.trans_status$<>"R" then continue
            
            if lf$="Y" then
                find record (ivw05_dev,key=ope11a.firm_id$+ope11a.ar_type$+ope11a.customer_id$+ope11a.order_no$+ope11a.item_id$+ope11a.line_no$,err=*next) ivw05a$
            endif

        rem ---Get Line Type

            if ope11a.commit_flag$="N" then continue
            
            if ope11a.line_code$<>prev_line_code$ then
                prev_line_code$=ope11a.line_code$
                find record (opm02_dev,key=firm_id$+ope11a.line_code$,dom=*next) opm02a$
            endif

        rem ---Commission Detail
            
            if pos(opm02a.line_type$="SNP") and ope11a.ext_price>0 then ext_sales=ext_sales+ope11a.ext_price
            if ope11a.ext_price<0 then ext_returns=ext_returns+ope11a.ext_price
            if pos(opm02a.line_type$="OM") then ext_other=ext_other+ope11a.ext_price

        rem ---Update Sales Analysis

            if sa$<>"Y" then continue
            if pos(opm02a.line_type$="SNPO")=0 then continue
            if pos(opm02a.line_type$="NPO") and opm02a.prod_type_pr$="N" then continue

            ivm01a.sa_level$="I"
            arm02a.sa_flag$="I"
            if opm02a.line_type$="N" then ivm01a.sa_level$="P"
            find record (ivm01_dev,key=firm_id$+ope11a.item_id$,dom=*next) ivm01a$
            find record (ivm02_dev,key=firm_id$+ope11a.warehouse_id$+ope11a.item_id$,dom=*next) ivm02a$
            
            if ivm01a.stock_level$="W" then
                vendor$=ivm02a.vendor_id$
            else
                vendor$=ivm01a.vendor_id$
            endif
            
            call pgmdir$+"adc_fiscalperyr.aon",firm_id$,ope01a.invoice_date$,period$,year$,table_chans$[all],status
            if status goto std_exit
            period=num(period$)

        rem ---Customer

            if sas01a.by_customer$="Y" and pos(arm02a.sa_flag$="PI") and pos(ivm01a.sa_level$="PI") then
                dim sam01a$:fattr(sam01a$)
                
                sam01a.firm_id$=firm_id$
                sam01a.year$=year$
                sam01a.customer_id$=ope01a.customer_id$                
                sam01a.product_type$=ope11a.product_type$
                sam01a.item_id$=ope11a.item_id$

                if arm02a.sa_flag$="P" or sas01a.customer_lev$="P" then 
                    sam01a.item_id$(1)=""
                endif
                
                if sas01a.customer_lev$="C" then 
                    sam01a.product_type$=""
                    sam01a.item_id$(1)=""
                endif

                rem --- Update sam_customer (sam-01)                
                dim sam$:fattr(sam01a$)
                sam_dev=sam01_dev
                sam_key$=sam01a.firm_id$+sam01a.year$+sam01a.customer_id$+sam01a.product_type$+sam01a.item_id$
                sam$=sam01a$
                gosub write_sam_rec

                rem --- Update sales totals by customer
                dim sam$:fattr(sam01tot$)
                sam01tot.firm_id$=sam01a.firm_id$
                sam01tot.year$=sam01a.year$
                sam01tot.customer_id$=sam01a.customer_id$
                sam01tot.product_type$=""
                sam_dev=sam01tot_dev
                sam_key$=sam01tot.firm_id$+sam01tot.year$+sam01tot.customer_id$+sam01tot.product_type$
                sam$=sam01tot$
                gosub write_sam_rec

                rem --- Update sales totals by customer/product type
                if arm02a.sa_flag$<>"C" and sas01a.customer_lev$<>"C" 
                    sam01tot.product_type$=sam01a.product_type$
                    sam_key$=sam01tot.firm_id$+sam01tot.year$+sam01tot.customer_id$+sam01tot.product_type$
                    sam$=sam01tot$
                    gosub write_sam_rec
                endif
            endif

        rem ---Territory

            if sas01a.by_territory$="Y" and pos(ivm01a.sa_level$="PI")<>0 then
                dim sam02a$:fattr(sam02a$)
                
                sam02a.firm_id$=firm_id$
                sam02a.year$=year$                
                sam02a.territory$=ope01a.territory$
                sam02a.product_type$=ope11a.product_type$
                sam02a.item_id$=ope11a.item_id$  
                
                if ivm01a.sa_level$="P" or sas01a.terrcode_lev$="P" then 
                    sam02a.item_id$(1)=""
                endif
                
                if sas01a.terrcode_lev$="T" then 
                    sam02a.product_type$=""
                    sam02a.item_id$(1)=""
                endif               

                rem --- Update sam_territry (sam-02)                
                dim sam$:fattr(sam02a$)
                sam_dev=sam02_dev
                sam_key$=sam02a.firm_id$+sam02a.year$+sam02a.territory$+sam02a.product_type$+sam02a.item_id$
                sam$=sam02a$
                gosub write_sam_rec
    
                rem --- Update sales totals by territory
                dim sam$:fattr(sam02tot$)
                sam02tot.firm_id$=sam02a.firm_id$
                sam02tot.year$=sam02a.year$
                sam02tot.territory$=sam02a.territory$
                sam02tot.product_type$=""
                sam_dev=sam02tot_dev
                sam_key$=sam02tot.firm_id$+sam02tot.year$+sam02tot.territory$+sam02tot.product_type$
                sam$=sam02tot$
                gosub write_sam_rec

                rem --- Update sales totals by territory/product type
                if ivm01a.sa_level$<>"N" and sas01a.terrcode_lev$<>"T"
                    sam02tot.product_type$=sam02a.product_type$
                    sam_key$=sam02tot.firm_id$+sam02tot.year$+sam02tot.territory$+sam02tot.product_type$
                    sam$=sam02tot$
                    gosub write_sam_rec
                endif
            endif

        rem ---Salesperson

            if sas01a.by_salespsn$="Y" and pos(ivm01a.sa_level$="PI")<>0 then
                dim sam03a$:fattr(sam03a$)
                
                sam03a.firm_id$=firm_id$
                sam03a.year$=year$                
                sam03a.slspsn_code$=ope01a.slspsn_code$
                sam03a.product_type$=ope11a.product_type$
                sam03a.item_id$=ope11a.item_id$                
 
                if ivm01a.sa_level$="P" or sas01a.salespsn_lev$="P" then 
                 sam03a.item_id$(1)=""
                endif

                if sas01a.salespsn_lev$="S" then 
                 sam03a.product_type$=""
                 sam03a.item_id$(1)=""
                endif               

                rem --- Update sam_salespsn (sam-03)                
                dim sam$:fattr(sam03a$)
                sam_dev=sam03_dev
                sam_key$=sam03a.firm_id$+sam03a.year$+sam03a.slspsn_code$+sam03a.product_type$+sam03a.item_id$
                sam$=sam03a$
                gosub write_sam_rec
    
                rem --- Update sales totals by salesperson
                dim sam$:fattr(sam03tot$)
                sam03tot.firm_id$=sam03a.firm_id$
                sam03tot.year$=sam03a.year$
                sam03tot.slspsn_code$=sam03a.slspsn_code$
                sam03tot.product_type$=""
                sam_dev=sam03tot_dev
                sam_key$=sam03tot.firm_id$+sam03tot.year$+sam03tot.slspsn_code$+sam03tot.product_type$
                sam$=sam03tot$
                gosub write_sam_rec
            
                rem --- Update sales totals by salesperson/product type
                if ivm01a.sa_level$<>"N" and sas01a.salespsn_lev$<>"S"
                    sam03tot.product_type$=sam03a.product_type$
                    sam_key$=sam03tot.firm_id$+sam03tot.year$+sam03tot.slspsn_code$+sam03tot.product_type$
                    sam$=sam03tot$
                    gosub write_sam_rec
                endif
            endif

        rem ---Customer Type

            if sas01a.by_customer_type$="Y" and pos(arm02a.sa_flag$="PI")<>0 and pos(ivm01a.sa_level$="PI")<>0 then
                dim sam04a$:fattr(sam04a$)

                sam04a.firm_id$=firm_id$
                sam04a.year$=year$                
                sam04a.customer_type$=arm02a.customer_type$
                sam04a.product_type$=ope11a.product_type$
                sam04a.item_id$=ope11a.item_id$   
                
                if ivm01a.sa_level$="P" or sas01a.custtype_lev$="P" then 
                 sam04a.item_id$(1)=""
                endif

                if sas01a.custtype_lev$="C" then 
                 sam04a.product_type$=""
                 sam04a.item_id$(1)=""
                endif               

                rem --- Update sam_custtype (sam-04)                
                dim sam$:fattr(sam04a$)
                sam_dev=sam04_dev
                sam_key$=sam04a.firm_id$+sam04a.year$+sam04a.customer_type$+sam04a.product_type$+sam04a.item_id$
                sam$=sam04a$
                gosub write_sam_rec
    
                rem --- Update sales totals by customer type
                dim sam$:fattr(sam04tot$)
                sam04tot.firm_id$=sam04a.firm_id$
                sam04tot.year$=sam04a.year$
                sam04tot.customer_type$=sam04a.customer_type$
                sam04tot.product_type$=""
                sam_dev=sam04tot_dev
                sam_key$=sam04tot.firm_id$+sam04tot.year$+sam04tot.customer_type$+sam04tot.product_type$
                sam$=sam04tot$
                gosub write_sam_rec
            
                rem --- Update sales totals by customer type/product type
                if ivm01a.sa_level$<>"N" and sas01a.custtype_lev$<>"C"
                    sam04tot.product_type$=sam04a.product_type$
                    sam_key$=sam04tot.firm_id$+sam04tot.year$+sam04tot.customer_type$+sam04tot.product_type$
                    sam$=sam04tot$
                    gosub write_sam_rec
                endif
            endif

        rem ---Ship-To

            if sas01a.by_shipto$="Y" or pos(arm02a.sa_flag$="PI")<>0 or pos(ivm01a.sa_level$="PI")<>0 then
                dim sam05a$:fattr(sam05a$)

                sam05a.firm_id$=firm_id$
                sam05a.year$=year$                
                sam05a.customer_id$=ope01a.customer_id$
                sam05a.shipto_no$=ope01a.shipto_no$
                sam05a.item_id$=ope11a.item_id$  
                
                if sas01a.shipto_lev$="S" then 
                 sam05a.item_id$(1)=""
                endif

                if sas01a.shipto_lev$="C" then 
                 sam05a.shipto_no$=""
                 sam05a.item_id$(1)=""
                endif               

                rem --- Update sam_custship (sam-05)                
                dim sam$:fattr(sam05a$)
                sam_dev=sam05_dev
                sam_key$=sam05a.firm_id$+sam05a.year$+sam05a.customer_id$+sam05a.shipto_no$+sam05a.item_id$
                sam$=sam05a$
                gosub write_sam_rec
            
                rem --- Update sales totals by customer
                dim sam$:fattr(sam05tot$)
                sam05tot.firm_id$=sam05a.firm_id$
                sam05tot.year$=sam05a.year$
                sam05tot.customer_id$=sam05a.customer_id$
                sam05tot.shipto_no$=sam05a.shipto_no$
                sam_dev=sam05tot_dev
                sam_key$=sam05tot.firm_id$+sam05tot.year$+sam05tot.customer_id$+sam05tot.shipto_no$
                sam$=sam05tot$
                gosub write_sam_rec

                rem --- Update sales totals by customer/ship-to
                if sas01a.shipto_lev$<>"C"
                    sam05tot.shipto_no$=""
                    sam_key$=sam05tot.firm_id$+sam05tot.year$+sam05tot.customer_id$+sam05tot.shipto_no$
                    sam$=sam05tot$
                    gosub write_sam_rec
                endif
            endif

        rem ---Standard Industry Code

            if sas01a.by_sic_code$="Y" and pos(ivm01a.sa_level$="PI")<>0 and cvs(arm01a.sic_code$,2)<>"" then
                dim sam06a$:fattr(sam06a$)
                
                sam06a.firm_id$=firm_id$
                sam06a.year$=year$                
                sam06a.sic_code$=arm01a.sic_code$
                sam06a.product_type$=ope11a.product_type$
                sam06a.item_id$=ope11a.item_id$ 
                
                if ivm01a.sa_level$="P" or sas01a.sic_code_lev$="P" then 
                 sam06a.item_id$(1)=""
                endif

                if sas01a.sic_code_lev$="C" then 
                 sam06a.product_type$=""
                 sam06a.item_id$(1)=""
                endif                               

                rem --- Update sam_custsic (sam-06)                
                dim sam$:fattr(sam06a$)
                sam_dev=sam06_dev
                sam_key$=sam06a.firm_id$+sam06a.year$+sam06a.sic_code$+sam06a.product_type$+sam06a.item_id$
                sam$=sam06a$
                gosub write_sam_rec
    
                rem --- Update sales totals by SIC
                dim sam$:fattr(sam06tot$)
                sam06tot.firm_id$=sam06a.firm_id$
                sam06tot.year$=sam06a.year$
                sam06tot.sic_code$=sam06a.sic_code$
                sam06tot.product_type$=""
                sam_dev=sam06tot_dev
                sam_key$=sam06tot.firm_id$+sam06tot.year$+sam06tot.sic_code$+sam06tot.product_type$
                sam$=sam06tot$
                gosub write_sam_rec
            
                rem --- Update sales totals by SIC/product type
                if ivm01a.sa_level$<>"N" and sas01a.sic_code_lev$<>"C"
                    sam06tot.product_type$=sam06a.product_type$
                    sam_key$=sam06tot.firm_id$+sam06tot.year$+sam06tot.sic_code$+sam06tot.product_type$
                    sam$=sam06tot$
                    gosub write_sam_rec
                endif
            endif

        rem --- Product Type

            if sas01a.by_product$="Y" and pos(ivm01a.sa_level$="PI")<>0 then
                dim sam07a$:fattr(sam07a$)
                
                sam07a.firm_id$=firm_id$
                sam07a.year$=year$                
                sam07a.product_type$=ope11a.product_type$
                sam07a.item_id$=ope11a.item_id$ 

                if ivm01a.sa_level$="P" or sas01a.product_lev$="P" then 
                 sam07a.item_id$(1)=""
                endif

                rem --- Update sam_item (sam-07)                
                dim sam$:fattr(sam07a$)
                sam_dev=sam07_dev
                sam_key$=sam07a.firm_id$+sam07a.year$+sam07a.product_type$+sam07a.item_id$
                sam$=sam07a$
                gosub write_sam_rec
            
                rem --- Update sales totals by product type
                dim sam$:fattr(sam07tot$)
                sam07tot.firm_id$=sam07a.firm_id$
                sam07tot.year$=sam07a.year$
                sam07tot.product_type$=sam07a.product_type$
                sam_dev=sam07tot_dev
                sam_key$=sam07tot.firm_id$+sam07tot.year$+sam07tot.product_type$
                sam$=sam07tot$
                gosub write_sam_rec
            endif

        rem --- Warehouse

            if sas01a.by_whse$="Y" and pos(ivm01a.sa_level$="PI")<>0 then
                dim sam08a$:fattr(sam08a$)
                
                sam08a.firm_id$=firm_id$
                sam08a.year$=year$                
                sam08a.warehouse_id$=ope11a.warehouse_id$
                sam08a.product_type$=ope11a.product_type$
                sam08a.item_id$=ope11a.item_id$   
                
                if ivm01a.sa_level$="P" or sas01a.whse_lev$="P" then 
                 sam08a.item_id$(1)=""
                endif

                if sas01a.whse_lev$="W" then 
                 sam08a.product_type$=""
                 sam08a.item_id$(1)=""
                endif                               

                rem --- Update sam_warehse (sam-08)                
                dim sam$:fattr(sam08a$)
                sam_dev=sam08_dev
                sam_key$=sam08a.firm_id$+sam08a.year$+sam08a.warehouse_id$+sam08a.product_type$+sam08a.item_id$
                sam$=sam08a$
                gosub write_sam_rec
    
                rem --- Update sales totals by warehouse
                dim sam$:fattr(sam08tot$)
                sam08tot.firm_id$=sam08a.firm_id$
                sam08tot.year$=sam08a.year$
                sam08tot.warehouse_id$=sam08a.warehouse_id$
                sam08tot.product_type$=""
                sam_dev=sam08tot_dev
                sam_key$=sam08tot.firm_id$+sam08tot.year$+sam08tot.warehouse_id$+sam08tot.product_type$
                sam$=sam08tot$
                gosub write_sam_rec
                       
                rem --- Update sales totals by warehouse/product type
                if ivm01a.sa_level$<>"N" and sas01a.whse_lev$<>"W"
                    sam08a.product_type$=sam08a.product_type$
                    sam_key$=sam08tot.firm_id$+sam08tot.year$+sam08tot.warehouse_id$+sam08tot.product_type$
                    sam$=sam08tot$
                    gosub write_sam_rec
                endif
            endif

        rem --- Stocking Vendor

            if sas01a.by_vendor$="Y" and pos(ivm01a.sa_level$="PI")<>0 and cvs(vendor$,2)<>"" then
                dim sam09a$:fattr(sam09a$)

                sam09a.firm_id$=firm_id$
                sam09a.year$=year$                
                sam09a.vendor_id$=vendor$
                sam09a.product_type$=ope11a.product_type$
                sam09a.item_id$=ope11a.item_id$
                
                if ivm01a.sa_level$="P" or sas01a.vendor_lev$="P" then 
                 sam09a.item_id$(1)=""
                endif

                if sas01a.vendor_lev$="V" then 
                 sam09a.product_type$=""
                 sam09a.item_id$(1)=""
                endif                                               

                rem --- Update sam_vendor (sam-09)                
                dim sam$:fattr(sam09a$)
                sam_dev=sam09_dev
                sam_key$=sam09a.firm_id$+sam09a.year$+sam09a.vendor_id$+sam09a.product_type$+sam09a.item_id$
                sam$=sam09a$
                gosub write_sam_rec
                
                rem --- Update sales totals by stocking vendor
                dim sam$:fattr(sam09tot$)
                sam09tot.firm_id$=sam09a.firm_id$
                sam09tot.year$=sam09a.year$
                sam09tot.vendor_id$=sam09a.vendor_id$
                sam09tot.product_type$=""
                sam_dev=sam09tot_dev
                sam_key$=sam09tot.firm_id$+sam09tot.year$+sam09tot.vendor_id$+sam09tot.product_type$
                sam$=sam09tot$
                gosub write_sam_rec
            
                rem --- Update sales totals by stocking vendor/product type
                if ivm01a.sa_level$<>"N" and sas01a.vendor_lev$<>"V"
                    sam09tot.product_type$=sam09a.product_type$
                    sam_key$=sam09tot.firm_id$+sam09tot.year$+sam09tot.vendor_id$+sam09tot.product_type$
                    sam$=sam09tot$
                    gosub write_sam_rec
                endif
            endif

        rem --- Distribution Code

            if sas01a.by_dist_code$="Y" and pos(ivm01a.sa_level$="PI")<>0 then
                dim sam10a$:fattr(sam10a$)

                sam10a.firm_id$=firm_id$
                sam10a.year$=year$                
                sam10a.ar_dist_code$=ope01a.ar_dist_code$
                sam10a.product_type$=ope11a.product_type$
                sam10a.item_id$=ope11a.item_id$                

                if ivm01a.sa_level$="P" or sas01a.distcode_lev$="P" then 
                 sam10a.item_id$(1)=""
                endif

                if sas01a.distcode_lev$="D" then 
                 sam10a.product_type$=""
                 sam10a.item_id$(1)=""
                endif                                               

                rem --- Update sam_distcode (sam-10)                
                dim sam$:fattr(sam10a$)
                sam_dev=sam10_dev
                sam_key$=sam10a.firm_id$+sam10a.year$+sam10a.ar_dist_code$+sam10a.product_type$+sam10a.item_id$
                sam$=sam10a$
                gosub write_sam_rec
               
                rem --- Update sales totals by distribution code
                dim sam$:fattr(sam10tot$)
                sam10tot.firm_id$=sam10a.firm_id$
                sam10tot.year$=sam10a.year$
                sam10tot.ar_dist_code$=sam10a.ar_dist_code$
                sam10tot.product_type$=""
                sam_dev=sam10tot_dev
                sam_key$=sam10tot.firm_id$+sam10tot.year$+sam10tot.ar_dist_code$+sam10tot.product_type$
                sam$=sam10tot$
                gosub write_sam_rec
            
                rem --- Update sales totals by distribution code/product type
                if ivm01a.sa_level$<>"N" and sas01a.distcode_lev$<>"D"
                    sam10tot.product_type$=sam10a.product_type$
                    sam_key$=sam10tot.firm_id$+sam10tot.year$+sam10tot.ar_dist_code$+sam10tot.product_type$
                    sam$=sam10tot$
                    gosub write_sam_rec
                endif
            endif

        rem --- Non-Stock

            if sas01a.by_nonstock$="Y" and opm02a.line_type$="N" then
                dim sam11a$:fattr(sam11a$)

                sam11a.firm_id$=firm_id$
                sam11a.year$=year$                
                sam11a.product_type$=ope11a.product_type$
                sam11a.nonstock_no$=ope11a.order_memo$

                if sas01a.nonstock_lev$="P" then 
                 sam11a.nonstock_no$(1)=""
                endif

                rem --- Update sam_nonstock (sam-11)                
                dim sam$:fattr(sam11a$)
                sam_dev=sam11_dev
                sam_key$=sam11a.firm_id$+sam11a.year$+sam11a.product_type$+sam11a.nonstock_no$
                sam$=sam11a$
                gosub write_sam_rec
            
                rem --- Update sales totals by non-stock product type
                dim sam$:fattr(sam11tot$)
                sam11tot.firm_id$=sam11a.firm_id$
                sam11tot.year$=sam11a.year$
                sam11tot.product_type$=sam11a.product_type$
                sam_dev=sam11tot_dev
                sam_key$=sam11tot.firm_id$+sam11tot.year$+sam11tot.product_type$
                sam$=sam11tot$
                gosub write_sam_rec
            endif

        rem --- Inner Loop Ends
        
        wend

    rem --- Job Numbers

        if jn$="Y" then
            if cvs(ope01a.job_no$,2)<>"" then
                extract record (opm09_dev,key=firm_id$+ope01a.customer_id$+ope01a.job_no$,dom=*next) opm09a$
                opm09a.lstinv_date$=ope01a.invoice_date$
                opm09a.total_sales=opm09a.total_sales+ext_sales-ext_returns-ope01a.discount_amt+ope01a.freight_amt+ext_other+ope01a.tax_amount
                if opm09a.fst_shp_date$="   " then opm09a.fst_shp_date$=ope01a.invoice_date$
                opm09a$ = field(opm09a$)
                write record (opm09_dev) opm09a$
            endif
        endif

    rem --- Loop back for next invoice --- Main Loop Ends
    
    wend

rem --- All done

    run pgmdir$+"opu_updateinventory.aon"

no_to_update: rem --- NO to Update: Clear On-Sales-Register Flags

    rem --- Reset trans_status$="E" if register is not updated
    read (ope04_dev,key=firm_id$+"I",dom=*next)
    while 1
        read record (ope04_dev, end=*break) ope04a$
        if pos(firm_id$+"I"=ope04a$)<>1 then break
        if ope04a.firm_id$<>firm_id$ then break
        if ope04a.ordinv_flag$<>"I" then break
        ope01_trip$=firm_id$+ope04a.ar_type$+ope04a.customer_id$+ope04a.order_no$
        read(ope01_dev,key=ope01_trip$,dom=*next)
        while 1
            ope01_key$=key(ope01_dev,end=*break)
            if pos(ope01_trip$=ope01_key$)<>1 then break
            extract record (ope01_dev) ope01a$; rem Advisory Locking
            if ope01a.lock_status$<>"S" then read(ope01_dev); continue
            if ope01a.trans_status$<>"R" then read(ope01_dev); continue
            ope01a.lock_status$="N"
            ope01a.trans_status$="E"     
            ope01a.mod_user$=sysinfo.user_id$
            ope01a.mod_date$=date(0:"%Yd%Mz%Dz")
            ope01a.mod_time$=date(0:"%Hz%mz")
            ope01a$ = field(ope01a$)
            write record (ope01_dev) ope01a$

            ope11_trip$=ope01_key$
            read (ope11_dev,key=ope11_trip$,dom=*next)
            while 1
                ope11_key$=key(ope11_dev,end=*break)
                if pos(ope11_trip$=ope11_key$)<>1 then break
                extract record (ope11_dev) ope11a$; rem Advisory Locking
                if ope11a.trans_status$<>"R" then read(ope11_dev); continue
                ope11a.trans_status$="E"     
                ope11a.mod_user$=sysinfo.user_id$
                ope11a.mod_date$=date(0:"%Yd%Mz%Dz")
                ope11a.mod_time$=date(0:"%Hz%mz")
                ope11a$ = field(ope11a$)
                write record (ope11_dev) ope11a$

                ope21_trip$=ope11_key$
                read (ope21_dev,key=ope21_trip$,dom=*next)
                while 1
                    ope21_key$=key(ope21_dev,end=*break)
                    if pos(ope21_trip$=ope21_key$)<>1 then break
                    extract record (ope21_dev) ope21a$; rem Advisory Locking
                    if ope21a.trans_status$<>"R" then read(ope21_dev); continue
                    ope21a.trans_status$="E"     
                    ope21a.mod_user$=sysinfo.user_id$
                    ope21a.mod_date$=date(0:"%Yd%Mz%Dz")
                    ope21a.mod_time$=date(0:"%Hz%mz")
                    ope21a$ = field(ope21a$)
                    write record (ope21_dev) ope21a$
                wend
            wend

            ope31_found=0
            extract record (ope31_dev,key=ope01a.firm_id$+ope01a.customer_id$+ope01a.order_no$+ope01a.ar_inv_no$,dom=*next) ope31a$; ope31_found=1; rem Advisory Locking
            if ope31_found and ope31a.trans_status$="R" then
                ope31a.trans_status$="E"     
                ope31a.mod_user$=sysinfo.user_id$
                ope31a.mod_date$=date(0:"%Yd%Mz%Dz")
                ope31a.mod_time$=date(0:"%Hz%mz")
                ope31a$ = field(ope31a$)
                write record (ope31_dev) ope31a$
            else
                read(ope31_dev,end=*next)
            endif

            ope41_found=0
            extract record (ope41_dev,key=ope01_key$,dom=*next) ope41a$; ope41_found=1; rem Advisory Locking
            if ope41_found and ope41a.trans_status$="R" then
                ope41a.trans_status$="E"     
                ope41a.mod_user$=sysinfo.user_id$
                ope41a.mod_date$=date(0:"%Yd%Mz%Dz")
                ope41a.mod_time$=date(0:"%Hz%mz")
                ope41a$ = field(ope41a$)
                write record (ope41_dev) ope41a$
            else
                read(ope41_dev,end=*next)
            endif

            break; rem --- new order can have at most just one new invoice, if any
        wend
    wend

    goto std_exit

write_sam_rec: rem --- write Sales Analysis records

    rem --- Initialize sales analysis numerics to zero to eliminate <null>s in SQL queries
    for x=1 to 13
        field sam$,"qty_shipped_"+str(x:"00")=0
        field sam$,"total_cost_"+str(x:"00")=0
        field sam$,"total_sales_"+str(x:"00")=0
        field sam$,"ord_qty_shipped_"+str(x:"00")=0
        field sam$,"ord_total_cost_"+str(x:"00")=0
        field sam$,"ord_total_sales_"+str(x:"00")=0
    next x

    extract record (sam_dev,key=sam_key$,dom=*next) sam$;rem Advisory Locking
    field sam$, "qty_shipped_" + str(period:"00") = nfield(sam$, "qty_shipped_" + str(period:"00")) + ope11a.qty_shipped
    field sam$, "total_cost_" + str(period:"00") = nfield(sam$, "total_cost_" + str(period:"00")) + round(ope11a.unit_cost*ope11a.qty_shipped, 2)
    field sam$, "total_sales_" + str(period:"00") = nfield(sam$, "total_sales_" + str(period:"00")) + ope11a.ext_price
rem ... unREM when implementing maintenance of new ord_* numerics in Sales Analysis
rem ...     field sam$, "ord_qty_shipped_" + str(period:"00") = nfield(sam$, "ord_qty_shipped_" + str(period:"00")) - ope11a.qty_shipped
rem ...     field sam$, "ord_total_cost_" + str(period:"00") = nfield(sam$, "ord_total_cost_" + str(period:"00")) - round(ope11a.unit_cost*ope11a.qty_shipped, 2)
rem ...     field sam$, "ord_total_sales_" + str(period:"00") = nfield(sam$, "ord_total_sales_" + str(period:"00")) - ope11a.ext_price
    sam$=field(sam$)
    write record (sam_dev) sam$
    return

rem #include disp_message.src

disp_message: rem --- Display Message Dialog

    call stbl("+DIR_SYP")+"bac_message.bbj",msg_id$,msg_tokens$[all],msg_opt$,table_chans$[all]

    return
    
rem #endinclude disp_message.src

rem --- #include std_error.src

std_error: rem --- Standard error handler (11Oct2017)

    if tcb(19)>0
        rem --- Escape handler
        if and(chr(tcb(19)),$08$)=$08$
            release
        else
            setesc std_error
            return
        endif
    endif

    if err=0   
        rem --- Get tcb(12) and tcb(10) to send into bac_error
        lock_byte=tcb(10)
        lock_chan=tcb(12)  
    endif

    rd_err_text$="",err_num=err
    if tcb(2)=0 and tcb(5) then rd_err_text$=pgm(tcb(5),tcb(13),err=*next)
    if err_num=252 then
        E!=BBjAPI().getLastBBjException()
        rd_err_text$=rd_err_text$+$0A$+E!.getClass().getName()
        if E!.getMessage()<>null() then rd_err_text$=rd_err_text$+": "+E!.getMessage()
    endif
    call stbl("+DIR_SYP")+"bac_error.bbj",pgm(-2),str(tcb(5)),str(err_num),rd_err_text$,rd_err_act$,lock_byte,lock_chan
    if pos("ESCAPE"=rd_err_act$) seterr 0; setesc 0
    if pos("RETRY"=rd_err_act$) retry
    if pgm(-1)<>pgm(-2) status=999; exit 
    release

rem --- #endinclude std_error.src
rem --- #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:       str(err:"000"),rd_err_text$,rd_err_act$

std_missing_params_exit: 
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape

std_missing_params_release: 
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem --- #endinclude std_missing_params.src

rem --- #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    call pgmdir$+"adc_progress.aon","D","","","","",0,0,0,meter_num,status
    run stbl("+DIR_SYP")+"bas_process_end.bbj",err=*next
    release
    
rem --- #endinclude std_end.src

    end
