rem --- Sales Register Update (Inventory And General Ledger)
rem --- Program opu_cb v8.0.0 08Feb2008 (opu_cb)
rem --- Created by c:\codeport_bbj\adx_codeport.bbj v1.1.5 (02/08/2008 04:56:18)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright (c) 1981-2007 AddonSoftware
rem --- All Rights Reserved


rem --- escape x$ and x0$ are used *way* too much in this program

        setesc std_error
        seterr std_error


rem --- Retrieve the program path

        pgmdir$=stbl("+DIR_PGM",err=*next)

rem --- Retrieve sysinfo data

        sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
        dim sysinfo$:sysinfo_template$
        sysinfo$=stbl("+SYSINFO",err=*next)
        milestone=num(stbl("+MILESTONE",err=*next),err=*next)
        firm_id$=sysinfo.firm_id$

rem --- Open/Lock files

        files=32,begfile=1,endfile=files
        dim files$[files],options$[files],ids$[files],templates$[files],channels[files]
        files$[1]="arm-01",ids$[1]="ARM_CUSTMAST"
        files$[2]="arm-02",ids$[2]="ARM_CUSTDET"
        files$[3]="arm-06",ids$[3]="ARM_CUSTPMTS"
        files$[4]="arc_termcode",ids$[4]="ARC_TERMCODE"
        files$[5]="arc_cashcode",ids$[5]="ARC_CASHCODE"
        files$[6]="arc_distcode",ids$[6]="ARC_DISTCODE"
        files$[7]="ars_params",ids$[7]="ARS_PARAMS"
        files$[8]="art-01",ids$[8]="ART_INVHDR"
        files$[9]="art-02",ids$[9]="ART_SALESTAX"
        files$[10]="art-11",ids$[10]="ART_INVDET"
        files$[11]="glm-01",ids$[11]="GLM_ACCT"
        files$[12]="glt-04",ids$[12]="GLE_DAILYDETAIL"
        files$[13]="glt-15",ids$[13]="GLT_BANKOTHER"
        files$[14]="ivm-01",ids$[14]="IVM_ITEMMAST"
        files$[15]="ivm-02",ids$[15]="IVM_ITEMWHSE"
        files$[16]="ivs_params",ids$[16]="IVS_PARAMS"
        files$[17]="ope-01",ids$[17]="OPE_ORDHDR"
        files$[18]="ope-02",ids$[18]="OPE_CREDCUST"
        files$[19]="ope-04",ids$[19]="OPE_PRNTLIST"
        files$[20]="ope-11",ids$[20]="OPE_ORDDET"
        files$[21]="ope-21",ids$[21]="OPE_ORDLSDET"
        files$[22]="ope-31",ids$[22]="OPE_ORDSHIP"
        files$[23]="ope-41",ids$[23]="OPE_INVCASH"
        files$[24]="opm-02",ids$[24]="OPC_LINECODE"
        files$[25]="opm-06",ids$[25]="OPC_TAXCODE"
        files$[27]="ops_mtdsales",ids$[27]="OPS_MTDSALES"
        files$[28]="opt-01",ids$[28]="OPT_ORDHDR"
        files$[29]="opt-21",ids$[29]="OPT_INVLSDET"
        files$[30]="opt-71",ids$[30]="OPT_SALESCOM"
        files$[31]="poe-08",ids$[31]="POE_LINKED"
        files$[32]="poe-12",ids$[32]="POE_PODET"
        call pgmdir$+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],
:                                   ids$[all],templates$[all],channels[all],batch,status
        if status goto std_exit
        arm01_dev=channels[1]
        arm02_dev=channels[2]
        arm06_dev=channels[3]
        arm10_dev=channels[4]
        arm10c_dev=channels[5]
        arm10d_dev=channels[6]
        ars01a_dev=channels[7]
        art01_dev=channels[8]
        art02_dev=channels[9]
        art11_dev=channels[10]
        glm01_dev=channels[11]
        glt04_dev=channels[12]
        glt15_dev=channels[13]
        ivm01_dev=channels[14]
        ivm02_dev=channels[15]
        ivs01a_dev=channels[16]
        ope01_dev=channels[17]
        ope02_dev=channels[18]
        ope04_dev=channels[19]
        ope11_dev=channels[20]
        ope21_dev=channels[21]
        ope31_dev=channels[22]
        ope41_dev=channels[23]
        opm02_dev=channels[24]
        opm06_dev=channels[25]
        ops10s_dev=channels[27]
        opt01_dev=channels[28]
        opt21_dev=channels[29]
        opt71_dev=channels[30]
        poe08_dev=channels[31]
        poe12_dev=channels[32]

rem --- Dimension string templates

rem ops10a$:templates$[26],

        dim arm01a$:templates$[1],arm02a$:templates$[2],arm06a$:templates$[3],
:       arm10a$:templates$[4],arm10c$:templates$[5],arm10d$:templates$[6],
:       ars01a$:templates$[7],art01a$:templates$[8],art02a$:templates$[9],
:       art11a$:templates$[10],glm01a$:templates$[11],glt04a$:templates$[12],
:       glt15a$:templates$[13],ivm01a$:templates$[14],
:       ivm02a$:templates$[15],ivs01a$:templates$[16],ope01a$:templates$[17],
:       ope02a$:templates$[18],ope04a$:templates$[19],
:       ope11a$:templates$[20],ope21a$:templates$[21],ope31a$:templates$[22],
:       ope41a$:templates$[23],
:       opm02a$:templates$[24],opm06a$:templates$[25],
:       ops10s$:templates$[27],opt01a$:templates$[28],opt21a$:templates$[29],
:       opt71a$:templates$[30],poe08a$:templates$[31],poe12a$:templates$[32]


rem --- Retrieve parameter records

        ars01a_key$=firm_id$+"AR00"
        find record (ars01a_dev,key=ars01a_key$,err=std_missing_params) ars01a$
        ivs01a_key$=firm_id$+"IV00"
        find record (ivs01a_dev,key=ivs01a_key$,err=std_missing_params) ivs01a$

rem --- Initializations
        more=1
        dim c[2],t[15],x1$(20)

rem --- Background

        call pgmdir$+"adc_progress.aon","S",sysinfo.task_desc$,"Inventory And General Ledger","","",m0+8,ope04_dev,1,0,ignore_status

rem --- Position file

        read (ope04_dev,key=firm_id$+"I",dom=*next)

rem --- retrieve template for OPE_CREDCUST record key
        call stbl("+DIR_SYP")+"bac_key_template.bbj","OPE_CREDCUST","PRIMARY",ope02a_key_tpl$,table_chans$[all],status$
        dim ope02a_key$:ope02a_key_tpl$

rem --- retrieve template for OPE_PRNTLIST record key
        call stbl("+DIR_SYP")+"bac_key_template.bbj","OPE_PRNTLIST","PRIMARY",ope04a_key_tpl$,table_chans$[all],status$
        dim ope04a_key$:ope04a_key_tpl$

rem --- retrieve template for OPE_ORDDET record key
        call stbl("+DIR_SYP")+"bac_key_template.bbj","OPE_ORDDET","PRIMARY",ope11a_key_tpl$,table_chans$[all],status$
        dim ope11a_key$:ope11a_key_tpl$

rem --- retrieve template for OPE_ORDLSDET record key
        call stbl("+DIR_SYP")+"bac_key_template.bbj","OPE_ORDLSDET","PRIMARY",ope21a_key_tpl$,table_chans$[all],status$
        dim ope21a_key$:ope21a_key_tpl$


rem --- Read next invoice header --- Main Loop Starts
while more
        precision 2
        k2$=""
        k3$=""
        k4$=""
        ope04a_key$=key(ope04_dev,end=*break)
        read (ope04_dev)
        if ope04a_key.firm_id$+ope04a_key.ordinv_flag$<>firm_id$+"I" then break
        extract record (ope01_dev,key=ope04a_key.firm_id$+ope04a_key.ar_type$+"000",dom=*continue) ope01a$
        if ope01a.print_status$+ope01a.lock_status$<>"Y1" and ope01a.print_status$+ope01a.lock_status$<>"Y2" then continue
        if ope01a.cash_sale$="Y" then
            find record (ope41_dev,key=ope01a.firm_id$+ope01a.firm_id$+ope01a.ar_type$+ope01a.customer_id$+ope01a.order_no$,dom=*next) ope41a$
        endif

        if cvs(ope01a.invoice_date$,2)="" then let ope01a.invoice_date$=sysinfo.system_date$
        ope01a.lock_status$="2"
        write record (ope01_dev,key=ope01a.firm_id$+ope01a.firm_id$+ope01a.ar_type$+ope01a.customer_id$+ope01a.order_no$+ope01a.sequence_000$) ope01a$
        t9b=0
        t9f=0
        t0=0
        t1=0
        t8=0
        t8c=0
        newshpdt$=""


    if ope01a.invoice_type$<>"V" then
        if ope01a.ordinv_flag$="I" then

rem --- Display record

            call pgmdir$+"adc_progress.aon","S","","","","",0,0,1,meter_num,status

rem --- Retrieve Distribution Code

            dim z0$(10*g[4])
            d$=ope01a.dist_code$
            gosub retrieve_distribution_code
            z0$(1)=arm10d.gl_ar_acct$+arm10d.gl_cash_acct$+arm10d.gl_sls_acct$+arm10d.gl_disc_acct$+
:                  arm10d.gl_frgt_acct$+arm10d.gl_inv_adj$+arm10d.gl_inv_acct$+arm10d.gl_cogs_acct$+
:                  arm10d.gl_cogs_adj$+arm10d.gl_ppv_acct$
            z9$=z0$

rem --- Retrieve Cash Receipts Code

            if ope01a.cash_sale$="Y" then
                dim z6$(10*g[4],"0")
                find record (arm10_dev,key=firm_id$+"C"+ope41a.cash_rec_cd$,dom=retrieve_customer) arm10c$
                z0$(g[4]+1,g[4])=arm10c.gl_cash_acct$
                z6$(1)=z0$
                x$=z9$
            endif

retrieve_customer: rem --- Retrieve Customer

            arm01a.firm_id$=firm_id$
            arm01a.customer_id$=ope01a.customer_id$
            arm01a.customer_name$="Unknown Customer"
            find record (arm01_dev,key=arm01a.firm_id$+arm01a.customer_id$,dom=*next) arm01a$
            if ope01a.cash_sale$="Y" then
                if cvs(ope41a.customer_name$,2)<>"" then
                    arm01a.customer_name$=ope41a.customer_name$
                endif
            endif

rem --- Initialize G/L Posting Fields

            if gl$="Y" then
                ref1$=fnmask$(ope01a.customer_id$(1,p[0]),ars01a.customer_output$)
                ref2$=ope01a.ar_inv_no$
                memo$=arm01a.customer_name$
                when$=ope01a.invoice_date$
            endif

rem --- Position Invoice Detail File

            read (ope11_dev,key=ope04a.firm_id$+ope04a.ar_type$+ope04a.customer_id$+ope04a.order_no$,dom=*next)

rem --- Read next line item --- inner loop
                while more
                    precision i[2]
                    ope11a_key$=key(ope11_dev,end=*break)
                    if ope11a_key.firm_id$+ope11a_key.ar_type$+ope11a_key.customer_id$+ope11a_key.order_no$<>ope04a_key.firm_id$+ope04a_key.ar_type$+ope04a_key.customer_id$+ope04a_key.order_no$ then break
                    read record (ope11_dev) ope11a$
                    z0$(1)=z9$
                    ref3$=ope11a.line_no$
                    acct$=""
                    if ope01a.cash_sale$="Y" then let z0$(1)=z6$
                    line_nbr$=ope11a.line_no$

rem --- Retrieve Order Line Code

                    if ope11a.line_code$<>k2$ then
                        k2$=ope11a.line_code$
                        opm02a.gl_rev_acct$=fill(g[4],"0")
                        find record (opm02_dev,key=firm_id$+ope11a.line_code$,dom=*next) opm02a$
                    endif

                    if ope11a.commit_flag$<>"N" then

rem --- Retrieve Inventory Item

                            precision i[2]
                            if pos(opm02a.line_type$="SPN")<>0 then
                                find record (ivm01_dev,key=firm_id$+ope11a.item_id$,dom=*next) ivm01a$
                                if opm02a.line_type$<>"N" then
                                    ivm02a.firm_id$=firm_id$
                                    ivm02a.warehouse_id$=ope11a.warehouse_id$
                                    ivm02a.item_id$=ope11a.item_id$
                                    find record (ivm02_dev,key=ivm02a.firm_id$+ivm02a.warehouse_id$+ivm02a.item_id$,dom=sales_account) ivm02a$
                                    d$=ivm02a.dist_code$
                                endif

sales_account: rem ------------ Sales Account

                                if r9$="N" and opm02a.line_type$<>"P" and opm02a.dropship$<>"Y"
                                    d$=ope01a.dist_code$; rem "Invoice Ribbon
                                else
                                    if pos(opm02a.line_type$="PN")>0 or opm02a.dropship$="Y"
                                        d$=opm02a.dist_code$; rem "Order Line Item
                                    endif
                                endif

                                gosub retrieve_distribution_code

                                if status=0 then
                                    z0$(2*g[4]+1,g[4])=arm10d.gl_cash_acct$
                                else
                                    gosub missing_distribtion_code
                                
                                endif

rem --- Inventory & COGS Accounts

                                if r9$="N" and opm02a.line_type$="N" and opm02a.dropship$<>"Y" gosub retrieve_distribution_code
                                if status<>0 gosub missing_distribtion_code; rem "Order Line Item
                                z0$(6*g[4]+1,2*g[4])=arm10d.gl_inv_acct$; rem "Invoice Ribbon, or Inventory Warehouse Record, or Order Line Item
                                if r9$="N" and opm02a.line_type$="N" and opm02a.dropship$<>"Y"
                                    z0$(6*g[4]+1,1*g[4])=ivm01a.gl_inv_acct$
                                    z0$(7*g[4]+1,1*g[4])=ivm01a.gl_cogs_acct$
                                endif
                                account$=z0$(6*g[4]+1,g[4])

rem --- Serialized/Lotted Items

                                if opm02a.line_type$<>"N" 
                                    ls_nbr$=""
                                    ls_qnty=0
                                    cost=ope11a.unit_cost
                                    qnty=ope11a.qty_shipped
                                    if ls$="Y" and ivm01a.lotser_item$="Y" then
                                        read (ope21_dev,key=ope11a.firm_id$+ope11a.ar_type$+ope11a.customer_id$+ope11a.order_no$+ope11a.line_no$,dom=*next)
                                        while more
                                            ope21a_key$=key(ope21_dev,end=*break)
                                            if pos(ope11a.firm_id$+ope11a.ar_type$+ope11a.customer_id$+ope11a.order_no$+ope11a.line_no$=ope21a_key$)<>1 then break
                                            read record (ope21_dev) ope21a$
                                            ls_nbr$=c1$
                                            cost=ope21a.unit_cost
                                            qnty=ope21a.qty_shipped
                                            ls_qnty=ls_qnty+qnty

rem --- Inventory Item Update

                                            gosub inventory_item_update

rem --- Lot/Serial Invoice History

                                            if ls$<>"Y" or ivm01a.lotser_item$<>"Y" then break
                                            opt21a.firm_id$=ope21a.firm_id$
                                            opt21a.ar_type$=ope21a.ar_type$
                                            opt21a.customer_id$=ope21a.customer_id$
                                            opt21a.ar_inv_no$=ope01a.ar_inv_no$
                                            opt21a.line_no$=ope21a.line_no$
                                            opt21a.sequence_no$=ope21a.sequence_no$
                                            if ih$="Y" then write record (opt21_dev,key=opt21a.firm_id$+opt21a.ar_type$+opt21a.customer_id$+opt21a.ar_inv_no$+opt21a.line_no$+opt21a.sequence_no$) opt21a$
                                            remove (ope21_dev,key=ope21a_key$)
                                        wend
                                    endif
                                endif


rem --- Post G/L Cost

                                if ls_qnty<>ope11a.qty_shipped then
                                    qnty=ope11a.qty_shipped-ls_qnty
                                    cost=ope11a.unit_cost,ls_nbr$=""
                                    gosub inventory_item_update
                                endif

                                precision 2
                                amount=(-ope11a.unit_cost)*ope11a.qty_shipped
                                units=-ope11a.qty_shipped
                                if ope11a.cash_sale$="Y" then let ref3$=ope11a.line_no$+" "+"(Cash)"
                                gosub glpost
                                account$=z0$(7*g[4]+1,g[4])
                                amount=-amount,units=-units
                                gosub glpost
                            endif

rem --- G/L Sales Distribution

                            precision 2
                            if pos(opm02a.line_type$<>"M") then
                                if opm02a.gl_rev_acct$<>fill(g[4],"0") and opm02a.line_type$="O" then
                                    z0$(2*g[4]+1,g[4])=opm02a.gl_rev_acct$
                                endif
                                account$=z0$(1,g[4])
                                amount=ope11a.ext_price,units=0
                                if ope01a.cash_sale$="Y" then let account$=z0$(g[4]+1,g[4])
                                gosub glpost
                                account$=z0$(2*g[4]+1,g[4])
                                amount=-amount,units=-ope11a.qty_shipped
                                gosub glpost
                                t0=t0+ope11a.ext_price
                                t1=t1+ope11a.unit_cost*ope11a.qty_shipped
                                if ope01a.invoice_date$<=g9$ then
                                    if ope11a.ext_price>0 then let t[0]=t[0]+ope11a.ext_price
                                    if ope11a.ext_price<0 then let t[1]=t[1]+ope11a.ext_price
                                    t[4]=t[4]+ope11a.unit_cost*ope11a.qty_shipped
                                else
                                    if ope11a.ext_price>0 then let t[8]=t[8]+ope11a.ext_price
                                    if ope11a.ext_price<0 then let t[9]=t[9]+ope11a.ext_price
                                    t[12]=t[12]+ope11a.unit_cost*ope11a.qty_shipped
                                endif
                            endif
                    endif

rem --- Remove/Update line item

                    precision i[2]
                    gosub uncomit_qty_shipped
                    if ope11a.qty_backord then let t9b=t9b+1
                    if ope11a.commit_flag$="N" then
                        let t9f=t9f+1
                        gosub label_one
                    endif

                    if ars01a.cash_sale$<>"Y" or ope01a.customer_id$<>ars01a.customer_id$ then
                        if ope11a.qty_backord<>0 
                            ope11a.qty_ordered=ope11a.qty_backord
                            ope11a.qty_backord=0
                            if opm02a.line_type$="O" and ope11a.ext_price=0 and ope11a.unit_price<>0 then
                                let ope11a.ext_price=round(ope11a.unit_price,2),ope11a.unit_price=0
                                gosub label_one
                            endif
                            ope11a.qty_shipped=ope11a.qty_ordered
                            ope11a.ext_price=round(ope11a.qty_ordered*ope11a.unit_price,2)


label_one:
                            ope11a.pick_flag$="N"
                            t8=t8+ope11a.ext_price
                            t8c=round(t8c+ope11a.qty_ordered*ope11a.unit_cost,2)
                            if ope11a.est_shp_date$<newshpdt$ or newshpdt$="" then let newshpdt$=ope11a.est_shp_date$
                            precision i[2]
                            write record (ope11_dev,key=ope11a_key$) ope11a$
                            precision 2
                            continue
                        endif
                    endif

                    remove (ope11_dev,key=ope11a_key$,dom=*next)

                    remove (ope61_dev,key=firm_id$+ope11a.warehouse_id$+ope11a.item_id$+ope11a.ar_type$+ope11a.order_no$+ope11a.line_no$+ope11a.customer_id$,dom=*next)

                    read (ope11_dev,key=ope11a_key$,dom=*next)
                    if po$="Y" then gosub unlink_po
                    continue
                wend
rem ----------- Inner Loop Ends

rem ------- Generate AR Open Invoice Records
rem -------- Loop created to replace goto 3500 using break

            while more
                precision 2
                if t0<>ope01a.total_sales then let ope01a.total_sales=t0
                if ope01a.cash_sale$<>"Y" then
                    art01a.firm_id$=ope01a.firm_id$
                    art01a.ar_type$=ope01a.ar_type$
                    art01a.customer_id$=ope01a.customer_id$
                    art01a.ar_inv_no$=ope01a.ar_inv_no$
                    art01a.sequence_00$="00"
                    find record (art01_dev,key=art01a.firm_id$+art01a.ar_type$+art01a.customer_id$+art01a.ar_inv_no$+art01a.sequence_00$,dom=ar_open_inv_hdr) art01a$
                    goto ar_open_inv_det_smry_record

ar_open_inv_hdr: rem --- AR Open Invoice Header

                    art01a.dist_code$=ope01a.dist_code$
                    art01a.terms_code$=ope01a.terms_code$
                    art01a.invoice_date$=ope01a.invoice_date$

                    art01a.invoice_type$=ope01a.invoice_type$
                    art01a.job_no$=opeo1a.job_no$

                    find record (arm10_dev,key=firm_id$+"A"+ope01a.terms_code$,dom=*next) arm10a$
                    v=u[1]
                    call pgmdir$+"adc_duedate.aon",arm10a.prox_or_days$,art01a.invoice_date$,v,v$,status
                    art01a.inv_due_date$=v$
                    v=arm10a.disc_days
                    call pgmdir$+"adc_duedate.aon",arm10a.prox_or_days$,art01a.invoice_date$,v,v$,status
                    art01a.disc_date$=v$
                    ope11a.unit_cost=t0+ope01a.tax_amount+ope01a.freight_amt-ope01a.discount_amt
                    ope11a.unit_price=(t0-ope01a.discount_amt)*arm10a.disc_percent/100
                    write record (art01_dev,key=art01a.firm_id$+art01a.ar_type$+art01a.customer_id$+art01a.ar_inv_no$+art01a.sequence_00$) art01a$
                    break

ar_open_inv_det_smry_record: rem --- AR Open Invoice Detail Summary Record

                    art01a.firm_id$=art11a.firm_id$
                    art01a.ar_type$=art11a.ar_type$
                    art01a.customer_id$=art11a.customer_id$
                    art01a.ar_inv_no$=art11a.ar_inv_no$
                    art01a.sequence_00$=art11a.sequence_no$
                    art01a.dist_code$="99"

                    read (art11_dev,key=art11a.firm_id$+art11a.ar_type$+art11a.customer_id$+art11a.ar_inv_no$+art11a.sequence_no$,dom=ar_open_invoice_detail)
                    extract record (art11_dev,key=art11a.firm_id$+art11a.ar_type$+art11a.customer_id$+art11a.ar_inv_no$+art11a.sequence_no$) art11a$
                    if art11a.trans_type$="C" then let art11a.trans_type$="A"

                    art11a.trans_date$=ope01a.invoice_date$
                    art11a.ar_inv_no$=ope01a.ar_inv_no$
                    art11a.trans_amt=art11a.trans_amt+t0+ope01a.tax_amount+ope01a.freight_amt-ope01a.discount_amt
                    art11a.trans_amt=art11a.trans_amt
                    write record (art11_dev,key=art11a.firm_id$+art11a.ar_type$+art11a.customer_id$+art11a.ar_inv_no$+art11a.sequence_no$) art11a$
                    break

ar_open_invoice_detail: rem --- AR Open Invoice Detail

                    art01a.firm_id$=art11a.firm_id$
                    art01a.ar_type$=art11a.ar_type$
                    art01a.customer_id$=art11a.customer_id$
                    art01a.ar_inv_no$=art11a.ar_inv_no$
                    art01a.sequence_00$=art11a.sequence_no$
                    art01a.dist_code$="01"

                    k$=keyp(art11_dev,end=label_two)
                    if art11a.firm_id$+art11a.ar_type$+art11a.customer_id$+art11a.ar_inv_no$+art11a.sequence_no$=art01a.firm_id$+art01a.ar_type$+art01a.customer_id$+art01a.ar_inv_no$+art01a.sequence_00$ then
                        art10a.sequnce_00$=str(num(art11a.sequence_no$)+1:"00")
                    endif
label_two:
                    art11a.trans_type$="I"
                    art11a.trans_date$=ope01a.invoice_date$
                    art11a.refchk_no$=ope01a.ar_inv_no$
                    art11a.trans_amt=t0+ope01a.tax_amount+ope01a.freight_amt-ope01a.discount_amt
                    write record (art11_dev,key=art11a.firm_id$+art11a.ar_type$+art11a.customer_id$+art11a.ar_inv_no$+art11a.sequence_no$) art11a$
                    break
                endif

rem --- Bank Reconciliation

                if br$<>"Y" then break
                glt15a.firm_id$=firm_id$
                glt15a.gl_cash_acct$=z6$(g[4]+1,g[4])
                glt15a.trans_no$=fnyy_yy21$(fndate$(fndate$(ope10a.invoice_date$)))
                glt15a.trans_type$="S"
                
                
                glt15a.trans_type$="DO"
                glt15a.trns_date$=fnyy_yy21$(fndate$(fndate$(ope10a.invoice_date$)))
                glt15a.description$="Sales Register Update"
                x0=0
                find record (glt15_dev,key=glt15a.firm_id$+glt15a.gl_cash_acct$+glt15a.trans_no$,dom=*next) glt15a$
                x0=x0+t0+ope01a.tax_amount+ope01a.freight_amt-ope01a.discount_amt
                write record (glt15_dev,key=glt15a.firm_id$+glt15a.gl_cash_acct$+glt15a.trans_no$) glt15a$
                break
            wend

rem --- Update arm-02 Customer Summary

            extract record (arm02_dev,key=firm_id$+ope01a.customer_id$+ope01a.ar_type$,dom=accumulate_mtd_sales) arm02a$
            arm02a.lstinv_date$=ope10a.invoice_date$
            if ope01a.cash_sale$<>"Y" then let arm02a.aging_cur=arm02a.aging_cur+t0+ope01a.tax_amount+ope01a.freight_amt-ope01a.discount_amt
            credit=arm02a.aging_future+arm02a.aging_cur+arm02a.aging_30+arm02a.aging_60+arm02a.aging_90+arm02a.aging_120; rem "Current Credit
            write record (arm02_dev,key=arm02a.firm_id$+arm02a.customer_id$+arm02a.ar_type$) arm02a$
            goto accumulate_mtd_sales



rem ************ ops10c file

rem --- Update MTD Cash Totals

            if ope01a.cash_sale$="Y" then
                s0$=firm_id$+"C"
                extract record (ops10_dev,key=s0$,dom=*next) ops10c$
                if ope01a.invoice_date$<=g9$ then let s[0]=s[0]+h[0]
                if ope01a.invoice_date$>g9$ then let s[3]=s[3]+h[0]
                write record (ops10_dev,key=s0$) ops10c$
            endif

accumulate_mtd_sales: rem --- Accoumulate MTD Sales

            if ope01a.invoice_date$<=g9$ then
                t[2]=t[2]+ope01a.tax_amount
                t[3]=t[3]+ope01a.freight_amt
                t[5]=t[5]+ope01a.discount_amt
            endif
            if ope01a.invoice_date$>g9$ then
                t[10]=t[10]+ope01a.tax_amount
                t[11]=t[11]+ope01a.freight_amt
                t[13]=t[13]+ope01a.discount_amt
            endif
            x1$=""

rem --- Post Tax, Freight And Discount to G/L

            if gl$="Y" then
                when$=ope01a.invoice_date$
                ref3$="",units=0
                if ope01a.cash_sale$<>"Y" then
                    account$=z0$(1,g[4])
                    amount=ope01a.tax_amount+ope01a.freight_amt-ope01a.discout_amt
                    gosub glpost
                else
                    account$=z0$(g[4]+1,g[4])
                    amount=ope01a.tax_amount+ope01a.freight_amt-ope01a.discout_amt
                    ref3$="Cash Sale"
                    gosub glpost
                endif

                account$=z0$(3*g[4]+1,g[4])
                amount=ope01a.discount_amt
                gosub glpost
                account$=z0$(4*g[4]+1,g[4])
                amount=-ope01a.freight_amt
                gosub glpost
            endif

rem --- Write Taxes, Sales Tax GL Account Update

            gosub calculate_store_tax

rem --- Update arm-06 Payment Summary

            arm06a.firm_id$=firm_id$
            arm06a.customer_id$=ope01a.customer_id$
            find record (arm06_dev,key=arm06a.firm_id$+arm06a.customer_id$,dom=*next) arm06a$

            arm06a.firm_id$=firm_id$
            arm06a.customer_id$=ope01a.customer_id$
            arm06a.lstinv_date$=ope01a.invoice_date$

            if ope01a.invoice_date$<=g9$ then
                arm06a.mtd_sales=arm06a.mtd_sales+t0
                arm06a.mtd_cost=arm06a.mtd_cost+t1
                arm06a.ytd_sales=arm06a.ytd_sales+t0
                arm06a.ytd_cost=arm06a.ytd_cost+t1
                if arm06a.mtd_high_crd<credit
                    arm06a.mtd_high_crd=credit; rem "MTD High Credit
                endif
                if arm06a.mtd_hi_cred<credit
                    arm06a.mtd_hi_cred=credit; rem "YTD High Credit
                endif
            else
                arm06a.nmtd_sales=arm06a.nmtd_sales+t0
                arm06a.nxt_mtd_cost=arm06a.nxt_mtd_cost+t1
                if arm06a.nmtd_high_cr<credit then let arm06a.nmtd_high_cr=credit
            endif

            write record (arm06_dev,key=arm06a.firm_id$+arm06a.customer_id$) arm06a$
        endif
    endif

rem --- Remove/Rewrite Header

    remove (ope04_dev,key=ope04a_key$,dom=*next)

rem **************
    x0$=a0$
    art01a.ar_inv_no$=opt01a.order_no$
    opt01a.order_no$=ope01a.order_no$
    ope01a.total_sales=t0
    ope01a.total_cost=t1
    write record (opt01_dev,key=opt01a.firm_id$+opt01a.ar_type$+opt01a.customer_id$+opt01a.ar_inv_no$+opt01a.sequence_000$) opt01a$

    opt71a.firm_id$=opt01a.firm_id$
    opt71a.ar_type$=opt01a.ar_type$
    opt71a.slspsn_code$=opt01a.slspsn_code$
    opt71a.ar_inv_no$=opt01a.ar_inv_no$
    opt71a.customer_id$=opt01a.customer_id$
    opt71a.invoice_type$=opt01a.invoice_type$
    opt71a.invoice_date$=opt01a.invoice_date$
    write record (opt71_dev,key=opt71a.firm_id$+opt71a.ar_type$+opt71a.slspsn_code$+opt71a.ar_inv_no$) opt71a$

    if ope01a.invoice_type$="V" then let t9b=0,t9f=0

    if (t9b=0 and t9f=0) or ope01a.customer_id$=ars01a.customer_id$ then
        remove (ope01_dev,key=ope04a_key.firm_id$+ope04a_key.ar_type$+ope04a_key.customer_id$+ope04a_key.order_no$+"000",dom=*next)
        if ope02_dev gosub remove_tickler
        remove (ope31_dev,key=ope04a_key.firm_id$+ope04a_key.customer_id$+ope04a_key.order_no$,dom=*next)
        remove (ope51_dev,key=ope04a_key.firm_id$+ope04a_key.ar_type$+ope04a_key.order_no$+ope04a_key.customer_id$,dom=*next)
    else
        ope01a.ordinv_flag$="O"
        ope01a.invoice_date$=""
        ope01a.ar_inv_no$=""
        ope10a.freight_amt=0
        ope01a.print_status$="N"
        ope01a.lock_status$="N"
        ope01a.tax_amount=0
        ope01a.freight_amt=0
        ope01a.discount_amt=0
        ope01a.comm_percent=0
        ope01a.taxable_amt=0
        ope01a.comm_amt=0
        ope01a.total_sales=t8
        ope01a.total_cost=t8c

        if t9b>0
            ope01a.backord_flag$="B"
        else
            ope01a.backord_flag$=""; rem "Are there B/O items?
        endif
        if newshpdt$<>"" then let ope01a.shipmnt_date$=newshpdt$
        write record (ope01_dev,key=ope01a.firm_id$+ope01a.ar_type$+ope01a.customer_id$+ope01a.order_no$+ope01a.sequence_000$) ope01a$

        ope04a.firm_id$=ope01a.firm_id$
        ope04a.ordinv_flag$="O"
        ope04a.ar_type$=ope01a.ar_type$
        ope04a.customer_id$=ope01a.customer_id$
        ope04a.order_no$=ope01a.order_no$
        write record (ope04_dev,key=ope04a.firm_id$+ope04a.ordinv_flag$+ope04a.ar_type$+ope04a.customer_id$+ope04a.order_no$) ope04a$
        read (ope04_dev,key=ope04a_key.firm_id$+ope04a_key.ordinv_flag$+ope04a_key.ar_type$+ope04a_key.customer_id$+ope04a_key.order_no$,dom=*next)
    endif

    if ope01a.cash_sale$="Y" remove (ope41_dev,key=ope10a.firm_id$+ope01a.ar_type$+ope01a.customer_id$+ope01a.order_no$,dom=*next)
wend
rem --- Main Loop Ends


done: rem --- End

        precision 2
        ops10s.firm_id$=firm_id$
        ops10s.record_id_s$="S"
        extract record (ops10_dev,key=ops10s.firm_id$+ops10s.record_id_s$,dom=*next) ops10s$

        ops10s.mtd_sales=ops10s.mtd_sales+t[0]
        ops10s.mtd_returns=ops10s.mtd_returns+t[1]
        ops10s.mtd_tax=ops10s.mtd_tax+t[2]
        ops10s.mtd_freight=ops10s.mtd_freight+t[3]
        ops10s.mtd_cost=ops10s.mtd_cost+t[4]
        ops10s.mtd_discount=ops10s.mtd_discount+t[5]
        ops10s.mtd_csh_sale=ops10s.mtd_csh_sale+t[6]
        ops10s.reserved_num=ops10s.reserved_num+t[7]
        ops10s.nmtd_sales=ops10s.nmtd_sales+t[8]
        ops10s.nmtd_returns=ops10s.nmtd_returns+t[9]
        ops10s.nmtd_tax=ops10s.nmtd_tax+t[10]
        ops10s.nxt_mtd_frgt=ops10s.nxt_mtd_frgt+t[11]
        ops10s.nxt_mtd_cost=ops10s.nxt_mtd_cost+t[12]
        ops10s.nxt_mtd_disc=ops10s.nxt_mtd_disc+t[13]
        ops10s.nmtd_cashsl=ops10s.nmtd_cashsl+t[14]
        ops10s.reserved_num=ops10s.reserved_num+t[15]

        write record (ops10_dev,key=ops10s.firm_id$+ops10s.record_id_s$) ops10s$
        if gl$="Y" then call pgmdir$+"glc_ctlupdate.aon",status
        goto std_exit

inventory_item_update: rem --- Inventory Item Update

        iv_info$[1]=ope11a.warehouse_id$
        iv_info$[2]=ope11a.item_id$
        iv_info$[3]=ls_nbr$
        iv_refs$[0]=ope01a.invoice_date$
        iv_refs$[1]=ope01a.customer_id$
        iv_refs$[2]=ope01a.order_no$
        iv_refs$[3]=ope01a.ar_inv_no$
        iv_refs$[5]=line_nbr$
        iv_refs$[6]=ope11a.line_code$
        iv_refs$[7]=account$
        iv_refs$[12]=opm02a.dropship$
        iv_refs[0]=-qnty
        iv_refs[1]=cost
        iv_refs[2]=ope11a.unit_price
        call pgmdir$+"ivc_ua.bbx","OP",iv_files[all],iv_info[all],iv_params$[all],iv_info$[all],iv_refs$[all],iv_refs[all],iv_status
        return

retrieve_distribution_code: rem --- Retrieve Distribution Code

        if d$<>k3$ then
            k3$=d$
            status=1
            find record (arm10_dev,key=firm_id$+"D"+k3$,dom=label_rtn_1) arm10d$
        endif

        status=0

label_rtn_1:
        return

missing_distribtion_code: rem --- Missing Distribution Code

        dim message$[1]
        message$[0]="Missing Distribution Code "+d$+" For Customer "+fnmask$(ope01a.customer_id$(1,p[0]),ars01a.customer_output$)
        message$[1]="Order "+ope01a.order_no$+" - Line "+ope11a.line_no$+" (<Enter>=Continue)"
        call pgmdir$+"adc_stdmessage.aon",2,message$[all],1,22,-1,v$,v3
        return

uncomit_qty_shipped: rem --- Uncommit Quantity Not Shipped Or Backordered

        if pos(opm02a.line_type$="SP")=0
            return
        endif
        if ope11a.commit_flag$="N"
            return
        endif
        if ope11a.qty_ordered-ope11a.qty_backord-ope11a.qty_shipped<=0
            return
        endif

rem --- ope-21 lot/serial entries are always shipped

        iv_info$[1]=ope11a.warehouse_id$
        iv_info$[2]=ope11a.item_id$
        iv_info$[3]=""
        iv_refs[0]=ope11a.qty_ordered-ope11a.qty_backord-ope11a.qty_shipped
        call pgmdir$+"ivc_ua.bbx","UC",iv_files[all],iv_info[all],iv_params$[all],iv_info$[all],iv_refs$[all],iv_refs[all],iv_status

        return

remove_tickler:
rem --- Remove ope-02/ope-03 Credit Manager Tickler File Records

        read (ope02_dev,key=ope04_key.firm_id$+ope04_key.customer_id$,dom=*next)

        While more
            ope02a_key$=key(ope02_dev,end=label_three)
            read (ope02_dev)
            if ope02a_key.firm_id$+ope02a_key.customer_id$<>ope04_key.firm_id$+ope04_key.customer_id$ then goto label_three
            if ope02a_key.order_no$=ope04_key.order_no$ then break
        Wend

        remove (ope02_dev,key=ope02a_key$)

label_three:
        remove (ope03_dev,key=ope02a_key.firm_id$+ope02a_key.rev_date$+ope02a_key.customer_id$+ope02a_key.order_no$,dom=label_three)

        return

update_salestax_history: rem --- Update Sales Tax History



rem **************************

        x2=0
        x3=0
        x4=0
        x5=0
        find record (art02_dev,key=x$,dom=*next) art02a$
        xk$=x$
        
        
        x2=x2+ope01a.taxable_amt
        x3=x3+x
        x4=x4+t0+ope01a.freight_amt-ope01a.discount_amt
        if ope01a.taxable_amt<0 then let x5=x5+ope01a.taxable_amt
        write record (art02_dev,key=x$) art02a$
        return

calculate_store_tax: rem --- Calculate and store taxes

        precision 4
        dim tax$(60)
        x$=firm_id$+a0$(80,2)+fnyy_yy21$(fndate$(a0$(24,1),a0$(24,3)))+fndate$(a0$(25,1),a0$(24,3))

        x0=0
        x1=0
        x=ope01a.tax_amount
        y=0
        find record (opm06_dev,key=firm_id$+ope01a.tax_code$,dom=label_four) opm06a$
        tax$(1)=opm06a.firm_id$+opm06a.tax_code$
        x=x0*ope01a.taxable_amt/100
        precision 2
        x=x*1
        if x1<>0 and abs(x)>x1 then let x=x1*sgn(x)
        y=x
        gosub update_salestax_history
        account$=tax$(46,g[4])
        amount=-x,units=0
        gosub glpost

        for x9=1 to 10
            precision 4
            x1$=tax$(26+2*(x9-1),2)
            
            if cvs(x1$,2)="" then continue
            x$(3,2)=x1$
            x0=0,x1=0,x=0
            find record (opm06_dev,key=firm_id$+x1$,dom=*continue) opm06a$
            x=x0*ope01a.taxable_amt/100
            precision 2
            x=x*1
            if x1<>0 and abs(x)>x1 then let x=x1*sgn(x)
            y=y+x
            gosub update_salestax_history
            account$=opm06a.gl_account$
            amount=-x,units=0
            gosub glpost
        next x9

label_four:
        precision 2
        if ope01a.tax_amount<>y then
            x=ope01a.tax_amount-y
            y0=t0
            y1=ope01a.freight_amt
            y2=ope01a.discount_amt
            y4=ope01a.taxable_amt
            t0=0
            a[1]=0
            a[2]=0
            a[4]=0
            gosub update_salestax_history
            t0=y0
            ope01a.freight_amt=y1
            ope01a.discount_amt=y2
            ope01a.taxable_amt=y4
            y0=0
            y1=0
            y2=0
            y4=0
            account$=tax$(46,g[4])
            amount=-x,units=0
            gosub glpost
        endif

        precision 2
        return

glpost: rem --- Standard G/L Posting Routine

        if gl$<>"Y" then
            return
        endif
        call pgmdir$+"glc_glpost.aon",glm01_dev,glt04_dev,glt14_dev,account$,when$,ref1$,ref2$,ref3$,memo$,amount,units,status

        return

rem --- Delete PO to order link
unlink_po:
        find record (poe08_dev,key=firm_id$+ope11a.customer_id$+ope11a.order_no$+ope11a.line_no$,knum=1,dom=label_six) poe08a$
        extract record (poe12_dev,key=poe08a.firm_id$+poe08a.vendor_id$+poe08a.po_no$+poe08a.po_line_no$,dom=label_five) poe12a$
        rem let ppp2$(11,22)=""
        poe12a.customer_id$=""
        poe12a.order_no$=""
        poe12a.line_no$=""
        poe12a.shipto_no$=""
        write record (poe12_dev,key=poe12a.firm_id$+poe12a.vendor_id$+poe12a.pn_no$+poe12a.po_line_no$) poe12a$
        remove (poe08_dev,key=poe08a.firm_id$+poe08a.vendor_id$+poe08a.po_no$+poe08a.po_line_no$,dom=*next)

label_five:

label_six:
        return

rem --- #include std_functions.src
rem --- Standard AddonSoftware functions (01Mar2006)
rem --- Functions used to retrieve form values

        def fnstr_pos(q0$,q1$,q1)=int((pos(q0$=q1$,q1)+q1-1)/q1)
        def fnget_rec_date$(q0$)=rd_rec_data$[fnstr_pos(cvs(q0$,1+2+4)+"."+
:                            cvs(q0$,1+2+4),rd_rec_data$[0,0],40),0]
        def fnget_fld_data$(q0$,q1$)=cvs(rd_rec_data$[fnstr_pos(cvs(q0$,1+2+4)+"."+
:                                cvs(q1$,1+2+4),rd_rec_data$[0,0],40),0],2)
        def fnget_table$(q0$)=rd_alias_id$

rem --- Miscellaneous functions

        def fncenter(q$,q)=int((q-len(q$))/2)

rem --- Format inventory item description

        def fnitem$(q$,q1,q2,q3)=cvs(q$(1,q1)+" "+q$(q1+1,q2)+" "+q$(q1+q2+1,q3),32)

rem --- Date/time handling functions

        def fndate$(q$)=date(jul(num(q$(1,4)),num(q$(5,2)),num(q$(7,2))))
        def fnyy$(q$)=q$(3,2)
        def fnclock$(q$)=date(0:"%hz:%mz %p")
        def fntime$(q$)=date(0:"%Hz%mz")

rem --- fnmask$: Alphanumeric Masking Function (formerly fnf$)

        def fnmask$(q1$,q2$)
            if q2$="" q2$=fill(len(q1$),"0")
            return str(-num(q1$,err=*next):q2$,err=*next)
            q=1
            q0=0
            while len(q2$(q))
                  if pos(q2$(q,1)="-()") q0=q0+1 else q2$(q,1)="X"
                  q=q+1
            wend
            if len(q1$)>len(q2$)-q0 q1$=q1$(1,len(q2$)-q0)
            return str(q1$:q2$)
        fnend

rem --- fnbasename$: Strip path and optionally the suffix from a file name

        def fnbasename$(q$,q0$)
            q=max(pos("/"=q$,-1),pos(":"=q$,-1),pos(">"=q$,-1),pos("\"=q$,-1))
            if q then q$=q$(q+1)
            if q0$<>"" then q=mask(q$,q0$); if q q$=q$(1,q-1)
        return q$

rem --- fnglobal: Return numeric value of passed stbl variable

        def fnglobal(q$,q1)
            q1$=stbl(q$,err=*next),q1=num(q1$,err=*next)
            return q1
        fnend

rem --- fnglobal$: Return string value of passed STBL variable

        def fnglobal$(q$,q1$)
            q1$=stbl(q$,err=*next)
            return q1$
        fnend

rem --- #endinclude std_functions.src

rem --- #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

        rd_err_text$=""
        if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
        call stbl("+DIR_SYP")+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:                                str(err:"000"),rd_err_text$,rd_err_act$
        if pos("EXIT"=rd_err_act$) goto std_error_exit
        if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
        if pos("RETRY"=rd_err_act$) retry

std_error_exit:
        master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
        sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
        dim sysinfo$:sysinfo_template$
        sysinfo$=stbl("+SYSINFO",err=std_error_release)
        if cvs(sysinfo.user_id$,2)=master_user$ escape

std_error_release:
        status=999
        if pgm(-1)<>pgm(-2) exit
        release

rem --- #endinclude std_error.src
rem --- #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

        rd_err_text$=""
        if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
        pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
        call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:                                   str(err:"000"),rd_err_text$,rd_err_act$

std_missing_params_exit:
        master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
        sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
        dim sysinfo$:sysinfo_template$
        sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
        if cvs(sysinfo.user_id$,2)=master_user$ escape

std_missing_params_release:
        status=999
        if pgm(-1)<>pgm(-2) exit
        release

rem --- #endinclude std_missing_params.src

rem --- #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)
        call pgmdir$+"adc_progress.aon","D","","","","",0,0,0,meter_num,status
        run stbl("+DIR_SYP")+"bas_process_end.bbj",err=*next
        release
rem --- #endinclude std_end.src

        end
