rem --- Sales Register Update (Inventory And General Ledger)
rem --- Program opu_cb v8.0.0 08Feb2008 (opu_cb)
rem --- Created by c:\codeport_bbj\adx_codeport.bbj v1.1.5 (02/08/2008 04:56:18)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright (c) 1981-2007 AddonSoftware
rem --- All Rights Reserved

rem --- Important Note!  
rem 
rem     This program still does a lot of work to post to the G/L Daily Detail (glt-04).
rem     We are now using the postings from the G/L recap made in opr_salesregister.
rem     I have left a lot of the G/L posting code in this program so we can compare 
rem     it with the register code and make changes if necessary.
rem 
rem     Make any changes to the G/L posting in opr_salesregister, not here!

    setesc std_error
    seterr std_error

rem --- Use Statements

    use ::ado_func.src::func

rem --- Retrieve the program path

    pgmdir$=""
    pgmdir$=stbl("+DIR_PGM",err=*next)
    sypdir$=""
    sypdir$=stbl("+DIR_SYP",err=*next)

rem --- Retrieve sysinfo data

    dim sysinfo$:stbl("+SYSINFO_TPL")
    sysinfo$=stbl("+SYSINFO")
    firm_id$=sysinfo.firm_id$

rem --- Open/Lock files

    files=33,begfile=1,endfile=files
    dim files$[files],options$[files],ids$[files],templates$[files],channels[files]
    files$[1]="arm-01",ids$[1]="ARM_CUSTMAST"
    files$[2]="arm-02",ids$[2]="ARM_CUSTDET"
    files$[3]="arm-06",ids$[3]="ARM_CUSTPMTS"
    files$[4]="arc_termcode",ids$[4]="ARC_TERMCODE"
    files$[5]="arc_cashcode",ids$[5]="ARC_CASHCODE"
    files$[6]="arc_distcode",ids$[6]="ARC_DISTCODE"
    files$[7]="ars_params",ids$[7]="ARS_PARAMS"
    files$[8]="art-01",ids$[8]="ART_INVHDR"
    files$[9]="art-02",ids$[9]="ART_SALESTAX"
    files$[10]="art-11",ids$[10]="ART_INVDET"
    files$[11]="glm-01",ids$[11]="GLM_ACCT"
    files$[12]="glt-04",ids$[12]="GLE_DAILYDETAIL"
    files$[13]="glt-15",ids$[13]="GLT_BANKOTHER"
    files$[14]="ivm-01",ids$[14]="IVM_ITEMMAST"
    files$[15]="ivm-02",ids$[15]="IVM_ITEMWHSE"
    files$[16]="ivs_params",ids$[16]="IVS_PARAMS"
    files$[17]="ope-01",ids$[17]="OPE_ORDHDR"
    files$[18]="ope-03",ids$[18]="OPE_CREDDATE"
    files$[19]="ope-04",ids$[19]="OPE_PRNTLIST"
    files$[20]="ope-11",ids$[20]="OPE_ORDDET"
    files$[21]="ope-21",ids$[21]="OPE_ORDLSDET"
    files$[22]="ope-31",ids$[22]="OPE_ORDSHIP"
    files$[23]="ope-41",ids$[23]="OPE_INVCASH"
    files$[24]="opm-02",ids$[24]="OPC_LINECODE"
    files$[25]="opm-06",ids$[25]="OPC_TAXCODE"
    files$[27]="ops_mtdsales",ids$[27]="OPS_MTDSALES"
    files$[28]="opt-01",ids$[28]="OPT_INVHDR"
    files$[29]="opt-21",ids$[29]="OPT_INVLSDET"
    files$[30]="opt-71",ids$[30]="OPT_SALESCOM"
    files$[31]="poe-08",ids$[31]="POE_LINKED"
    files$[32]="poe-12",ids$[32]="POE_PODET"
    files$[33]="poe-02",ids$[33]="POE_POHDR"

    call pgmdir$+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],
:       ids$[all],templates$[all],channels[all],batch,status
    if status goto std_exit

    arm01_dev=channels[1]
    arm02_dev=channels[2]
    arm06_dev=channels[3]
    arm10_dev=channels[4]
    arm10c_dev=channels[5]
    arm10d_dev=channels[6]
    ars01a_dev=channels[7]
    art01_dev=channels[8]
    art02_dev=channels[9]
    art11_dev=channels[10]
    glm01_dev=channels[11]
    glt04_dev=channels[12]
    glt15_dev=channels[13]
    ivm01_dev=channels[14]
    ivm02_dev=channels[15]
    ivs01a_dev=channels[16]
    ope01_dev=channels[17]
    ope03_dev=channels[18]
    ope04_dev=channels[19]
    ope11_dev=channels[20]
    ope21_dev=channels[21]
    ope31_dev=channels[22]
    ope41_dev=channels[23]
    opm02_dev=channels[24]
    opm06_dev=channels[25]
    ops10s_dev=channels[27]
    opt01_dev=channels[28]
    opt21_dev=channels[29]
    opt71_dev=channels[30]
    poe08_dev=channels[31]
    poe12_dev=channels[32]
    poe02_dev=channels[33]

rem --- Dimension string templates

rem ops10a$:templates$[26],

    dim arm01a$:templates$[1],arm02a$:templates$[2],arm06a$:templates$[3],
:       arm10a$:templates$[4],arm10c$:templates$[5],arm10d$:templates$[6],
:       ars01a$:templates$[7],art01a$:templates$[8],art02a$:templates$[9],
:       art11a$:templates$[10],glm01a$:templates$[11],glt04a$:templates$[12],
:       glt15a$:templates$[13],ivm01a$:templates$[14],
:       ivm02a$:templates$[15],ivs01a$:templates$[16],ope01a$:templates$[17],
:       ope03a$:templates$[18],ope04a$:templates$[19],
:       ope11a$:templates$[20],ope21a$:templates$[21],ope31a$:templates$[22],
:       ope41a$:templates$[23],opm02a$:templates$[24],opm06a$:templates$[25],
:       ops10s$:templates$[27],opt01a$:templates$[28],opt21a$:templates$[29],
:       opt71a$:templates$[30],poe08a$:templates$[31],poe12a$:templates$[32],
:       poe02a$:templates$[33]

rem --- Retrieve parameter records

    find record (ars01a_dev,key=firm_id$+"AR00",err=std_missing_params) ars01a$
    find record (ivs01a_dev,key=firm_id$+"IV00",err=std_missing_params) ivs01a$

rem --- Initializations

    more=1
    dim t[15]

    call "ivc_itemupdt.aon::init",iv_files[all],ivs01a$,iv_items$[all],iv_refs$[all],iv_refs[all],table_chans$[all],status
    if status = 999 then goto std_exit

rem --- Background

    call pgmdir$+"adc_progress.aon","S",sysinfo.task_desc$,"Inventory And General Ledger","","",m0+8,ope04_dev,1,0,status
    if status = 999 then goto std_exit

rem --- Position file

    read (ope04_dev,key=firm_id$+"I",dom=*next)

rem --- retrieve template for OPE_ORDDET record key

    call sypdir$+"bac_key_template.bbj","OPE_ORDDET","PRIMARY",ope11a_key_tpl$,table_chans$[all],status$
    dim ope11a_key$:ope11a_key_tpl$

rem --- retrieve template for OPE_ORDLSDET record key

    call sypdir$+"bac_key_template.bbj","OPE_ORDLSDET","PRIMARY",ope21a_key_tpl$,table_chans$[all],status$
    dim ope21a_key$:ope21a_key_tpl$

rem --- retrieve template for ART_INVDET record key

    call sypdir$+"bac_key_template.bbj","ART_INVDET","PRIMARY",art11a_key_tpl$,table_chans$[all],status$
    dim art11a_key$:art11a_key_tpl$

rem --- Read next invoice header --- Main Loop Starts

    while more

        precision 2
        prev_line_code$ = ""
        prev_dist_code$ = ""

        read record (ope04_dev, end=*break) ope04a$
        if ope04a.firm_id$+ope04a.ordinv_flag$<>firm_id$+"I" then break

        read record (ope01_dev, key=firm_id$+"  "+ope04a.customer_id$+ope04a.order_no$, dom=*continue) ope01a$
    rem if ope01a.print_status$<>"Y" or (ope01a.lock_status$<>"1" and ope01a.lock_status$<>"2") then continue
        if ope01a.print_status$<>"Y" or ope01a.lock_status$<>"1" then continue

        if ope01a.cash_sale$="Y" then
            find record (ope41_dev, key=ope01a.firm_id$+ope01a.ar_type$+ope01a.customer_id$+ope01a.order_no$, dom=*next) ope41a$
        endif

        extract record (ope01_dev, key=firm_id$+"  "+ope04a.customer_id$+ope04a.order_no$) ope01a$
        if cvs(ope01a.invoice_date$,2)="" then ope01a.invoice_date$=sysinfo.system_date$
        ope01a.lock_status$="2"
        ope01a$ = field(ope01a$)
        write record (ope01_dev) ope01a$

        something_backord=0
        something_commit=0
        total_ext=0
        total_cost=0
        total_sales=0
        total_cost_ord=0
        newshpdt$=""

        if ope01a.invoice_type$<>"V" and ope01a.ordinv_flag$="I" then

        rem --- Display record

            call pgmdir$+"adc_progress.aon","S","","","","",0,0,1,meter_num,status
            if status = 999 then exitto std_exit

        rem --- Retrieve Distribution Code
        rem --- (Someday remove the need for z0$)

            dim z0$(100)
            dist_code$=ope01a.ar_dist_code$
            gosub retrieve_distribution_code
            z0$(1) = 
:               pad(arm10d.gl_ar_acct$, 10) +
:               pad(arm10d.gl_cash_acct$, 10) +
:               pad(arm10d.gl_sls_acct$, 10) +
:               pad(arm10d.gl_disc_acct$, 10) +
:               pad(arm10d.gl_frgt_acct$, 10) +
:               pad(arm10d.gl_inv_adj$, 10) +
:               pad(arm10d.gl_inv_acct$, 10) +
:               pad(arm10d.gl_cogs_acct$, 10) +
:               pad(arm10d.gl_cogs_adj$, 10) +
:               pad(arm10d.gl_ppv_acct$, 10)
            z9$=z0$

        rem --- Retrieve Cash Receipts Code

            if ope01a.cash_sale$="Y" then
                dim z6$(100,"0")
                find record (arm10c_dev, key=firm_id$+"C"+ope41a.cash_rec_cd$, dom=*endif) arm10c$
                z0$(11,10)=arm10c.gl_cash_acct$
                z6$(1)=z0$
            endif

        rem --- Retrieve Customer

            arm01a.firm_id$=firm_id$
            arm01a.customer_id$=ope01a.customer_id$
            arm01a.customer_name$="Unknown Customer"
            find record (arm01_dev,key=arm01a.firm_id$+arm01a.customer_id$,dom=*next) arm01a$

            if ope01a.cash_sale$="Y" then
                if cvs(ope41a.customer_name$,2)<>"" then
                    arm01a.customer_name$=ope41a.customer_name$
                endif
            endif

        rem --- Initialize G/L Posting Fields

            if gl$="Y" then
                ref1$=func.alphaMask(ope01a.customer_id$,ars01a.customer_output$)
                ref2$=ope01a.ar_inv_no$
                memo$=arm01a.customer_name$
                when$=ope01a.invoice_date$
            endif

        rem --- Position Invoice Detail File

            read (ope11_dev, key=ope04a.firm_id$+ope04a.ar_type$+ope04a.customer_id$+ope04a.order_no$, dom=*next)

        rem --- Read next line item --- inner loop

            while more
                precision i[2]
                ope11a_key$=key(ope11_dev,end=*break)

                if  ope11a_key.firm_id$+ope11a_key.ar_type$+ope11a_key.customer_id$+ope11a_key.order_no$ <> 
:                   ope04a.firm_id$+ope04a.ar_type$+ope04a.customer_id$+ope04a.order_no$ 
:               then 
                    break
                endif

                read record (ope11_dev) ope11a$
                z0$(1)=z9$
                ref3$=ope11a.line_no$
                acct$=""
                if ope01a.cash_sale$="Y" then z0$(1)=z6$
                line_nbr$=ope11a.line_no$

            rem --- Retrieve Order Line Code

                if ope11a.line_code$<>prev_line_code$ then
                    prev_line_code$=ope11a.line_code$
                    opm02a.gl_rev_acct$=fill(10,"0")
                    find record (opm02_dev,key=firm_id$+ope11a.line_code$,dom=*next) opm02a$
                endif

                if ope11a.commit_flag$<>"N" then

                rem --- Retrieve Inventory Item

                    precision i[2]

                    if pos(opm02a.line_type$="SPN")<>0 then
                        find record (ivm01_dev,key=firm_id$+ope11a.item_id$,dom=*next) ivm01a$

                        if opm02a.line_type$<>"N" then
                            find record (ivm02_dev,key=firm_id$+ope11a.warehouse_id$+ope11a.item_id$,dom=*endif) ivm02a$
                            dist_code$=ivm02a.ar_dist_code$
                        endif

                    rem --- Sales Account

                        if r9$="N" and opm02a.line_type$<>"P" and opm02a.dropship$<>"Y"
                            dist_code$=ope01a.ar_dist_code$; rem "Invoice Ribbon
                        else
                            if pos(opm02a.line_type$="PN")>0 or opm02a.dropship$="Y"
                                dist_code$=opm02a.ar_dist_code$; rem "Order Line Item
                            endif
                        endif

                        gosub retrieve_distribution_code

                        if status=0 then
                            z0$(21,10)=arm10d.gl_sls_acct$
                        else
                            gosub missing_distribtion_code
                        endif

                    rem --- Inventory & COGS Accounts

                        if r9$="N" and opm02a.line_type$="N" and opm02a.dropship$<>"Y" then 
                            gosub retrieve_distribution_code
                            if status<>0 gosub missing_distribtion_code; rem "Order Line Item
                        endif

                        z0$(61,10)=arm10d.gl_inv_acct$; rem "Invoice Ribbon, or Inventory Warehouse Record, or Order Line Item
                        z0$(71,10)=arm10d.gl_cogs_acct$

                        if r9$="N" and opm02a.line_type$="N" and opm02a.dropship$<>"Y" then
                            z0$(61,10)=ivm01a.gl_inv_acct$
                            z0$(71,10)=ivm01a.gl_cogs_acct$
                        endif

                        account$=z0$(61,10)

                    rem --- Serialized/Lotted Items

                        if opm02a.line_type$<>"N" 
                            ls_nbr$=""
                            ls_qnty=0
                            cost=ope11a.unit_cost
                            qnty=ope11a.qty_shipped

                            if ls$="Y" and ivm01a.lotser_item$="Y" then
                                ls_start$ = firm_id$+ope11a.ar_type$+ope11a.customer_id$+ope11a.order_no$+ope11a.internal_seq_no$
                                read (ope21_dev, key=ls_start$, dom=*next)

                                while more
                                    ope21a_key$=key(ope21_dev,end=*break)
                                    if pos(ls_start$=ope21a_key$)<>1 then break
                                    read record (ope21_dev) ope21a$
                                    ls_nbr$=ope21a.lotser_no$
                                    cost=ope21a.unit_cost
                                    qnty=ope21a.qty_shipped
                                    ls_qnty=ls_qnty+qnty

                                rem --- Inventory Item Update

                                    gosub inventory_item_update

                                rem --- Lot/Serial Invoice History

                                    if ls$<>"Y" or ivm01a.lotser_item$<>"Y" then break
                                rem opt21a.firm_id$        = ope21a.firm_id$
                                rem opt21a.ar_type$        = ope21a.ar_type$
                                rem opt21a.customer_id$    = ope21a.customer_id$
                                rem opt21a.ar_inv_no$      = ope01a.ar_inv_no$
                                rem opt21a.orddet_seq_ref$ = ope21a.orddet_seq_ref$
                                rem opt21a.sequence_no$    = ope21a.sequence_no$

                                    dim opt21a$:fattr(opt21a$)
                                    call stbl("+DIR_PGM")+"adc_copyfile.aon",ope21a$,opt21a$,status
                                    opt21a.ar_inv_no$=ope01a.ar_inv_no$

                                    if ih$="Y" then write record (opt21_dev) opt21a$
                                    remove (ope21_dev,key=ope21a_key$)
                                wend
                            endif
                        endif

                    rem --- Post G/L Cost

                        if ls_qnty<>ope11a.qty_shipped then
                            qnty=ope11a.qty_shipped-ls_qnty
                            cost=ope11a.unit_cost
                            ls_nbr$=""
                            gosub inventory_item_update
                        endif

                        precision 2
                        amount=(-ope11a.unit_cost)*ope11a.qty_shipped
                        units=-ope11a.qty_shipped
                        if ope01a.cash_sale$="Y" then ref3$=ope11a.line_no$+" "+"(Cash)"
                    rem gosub glpost

                        account$=z0$(71,10)
                        amount=-amount
                        units=-units
                    rem gosub glpost
                    endif

                rem --- G/L Sales Distribution

                    precision 2
                    if pos(opm02a.line_type$<>"M") then
                        if opm02a.gl_rev_acct$<>fill(10,"0") and opm02a.line_type$="O" then
                            z0$(21,10)=opm02a.gl_rev_acct$
                        endif

                        account$=z0$(1,10)
                        amount=ope11a.ext_price,units=0
                        if ope01a.cash_sale$="Y" then account$=z0$(11,10)
                    rem gosub glpost

                        account$=z0$(21,10)
                        amount=-amount,units=-ope11a.qty_shipped
                    rem gosub glpost

                        total_ext=total_ext+ope11a.ext_price
                        total_cost=total_cost+ope11a.unit_cost*ope11a.qty_shipped

                        if ope01a.invoice_date$<=g9$ then
                            if ope11a.ext_price>0 then t[0]=t[0]+ope11a.ext_price
                            if ope11a.ext_price<0 then t[1]=t[1]+ope11a.ext_price
                            t[4]=t[4]+ope11a.unit_cost*ope11a.qty_shipped
                        else
                            if ope11a.ext_price>0 then t[8]=t[8]+ope11a.ext_price
                            if ope11a.ext_price<0 then t[9]=t[9]+ope11a.ext_price
                            t[12]=t[12]+ope11a.unit_cost*ope11a.qty_shipped
                        endif
                    endif
                endif

            rem --- Remove/Update line item

                precision i[2]
                gosub uncomit_qty_shipped
                if ope11a.qty_backord then something_backord=1
                if ope11a.commit_flag$="N" then
                    something_commit=1
                    gosub update_order_detail
                    continue
                endif

                if ars01a.cash_sale$<>"Y" or ope01a.customer_id$<>ars01a.customer_id$ then
                    if ope11a.qty_backord<>0 
                        ope11a.qty_ordered=ope11a.qty_backord
                        ope11a.qty_backord=0

                        if opm02a.line_type$="O" and ope11a.ext_price=0 and ope11a.unit_price<>0 then
                            ope11a.ext_price=round(ope11a.unit_price,2),ope11a.unit_price=0
                            gosub update_order_detail
                            continue
                        endif

                        ope11a.qty_shipped=ope11a.qty_ordered
                        ope11a.ext_price=round(ope11a.qty_ordered*ope11a.unit_price,2)
                        gosub update_order_detail
                        continue
                    endif
                endif

                remove (ope11_dev,key=ope11a_key$,dom=*next)
                read (ope11_dev,key=ope11a_key$,dom=*next)
                if po$="Y" then gosub unlink_po

            wend

        rem --- Check if the dropship data need to be removed from the PO header

            if unlink_po then
                extract record (poe02_dev, key=poe08a.firm_id$+poe08a.po_no$, dom=*endif) poe02a$
                poe02a.customer_id$ = ""
                poe02a.order_no$ = ""
                poe02a.dropship$ = "N"
            rem poe02a.shipto_no$ = ""; rem this was in the old code, but I think it's wrong
                poe02a$ = field(poe02a$)
                write record (poe02_dev) poe02a$
                unlink = 0
            endif

        rem --- Inner Loop Ends

        rem --- Generate AR Open Invoice Records
        rem --- (while loop used to replace "gotos" with "breaks")

            while more
                precision 2
                if total_ext<>ope01a.total_sales then ope01a.total_sales=total_ext
                if ope01a.cash_sale$<>"Y" then
                    art01a.firm_id$=ope01a.firm_id$
                    art01a.ar_type$=ope01a.ar_type$
                    art01a.customer_id$=ope01a.customer_id$
                    art01a.ar_inv_no$=ope01a.ar_inv_no$
                    art01a.sequence_00$="00"
                    key_value$ = art01a.firm_id$+art01a.ar_type$+art01a.customer_id$+art01a.ar_inv_no$+art01a.sequence_00$
                    find record (art01_dev, key=key_value$, dom=ar_open_inv_hdr) art01a$
                    goto ar_open_inv_det_smry_record

                ar_open_inv_hdr: rem --- AR Open Invoice Header

                    art01a.ar_dist_code$=ope01a.ar_dist_code$
                    art01a.ar_terms_code$=ope01a.terms_code$
                    art01a.invoice_date$=ope01a.invoice_date$
                    art01a.invoice_type$=ope01a.invoice_type$
                    art01a.job_no$=ope01a.job_no$

                    arm10a.inv_days_due = 0
                    find record (arm10_dev,key=firm_id$+"A"+ope01a.terms_code$,dom=*next) arm10a$
                    v=arm10a.inv_days_due
                    call pgmdir$+"adc_duedate.aon",arm10a.prox_or_days$,art01a.invoice_date$,v,v$,status
                    if status = 999 then exitto std_exit
                    art01a.inv_due_date$=v$

                    v=arm10a.disc_days
                    call pgmdir$+"adc_duedate.aon",arm10a.prox_or_days$,art01a.invoice_date$,v,v$,status
                    if status = 999 then exitto std_exit
                    art01a.disc_date$=v$

                    art01a.invoice_amt=total_ext+ope01a.tax_amount+ope01a.freight_amt-ope01a.discount_amt
                    art01a.disc_allowed=(total_ext-ope01a.discount_amt)*arm10a.disc_percent/100
                    art01a$ = field(art01a$)
                    write record (art01_dev) art01a$
                    break

                ar_open_inv_det_smry_record: rem --- AR Open Invoice Detail Summary Record

                    art11a.firm_id$=art01a.firm_id$
                    art11a.ar_type$=art01a.ar_type$
                    art11a.customer_id$=art01a.customer_id$
                    art11a.ar_inv_no$=art01a.ar_inv_no$
                    art11a.sequence_num$="99"
                    art11a_key$=art11a.firm_id$+art11a.ar_type$+art11a.customer_id$+art11a.ar_inv_no$+art11a.sequence_num$
                    read (art11_dev, key=art11a_key$, dom=ar_open_invoice_detail)

                    extract record (art11_dev, key=art11a_key$) art11a$
                    if art11a.trans_type$="C" then art11a.trans_type$="A"
                    art11a.trans_date$=ope01a.invoice_date$
                    art11a.ar_inv_no$=ope01a.ar_inv_no$
                    art11a.trans_amt=art11a.trans_amt+total_ext+ope01a.tax_amount+ope01a.freight_amt-ope01a.discount_amt
                    art11a$ = field(art11a$)
                    write record (art11_dev) art11a$
                    break

                ar_open_invoice_detail: rem --- AR Open Invoice Detail

                    art11a.firm_id$=art01a.firm_id$
                    art11a.ar_type$=art01a.ar_type$
                    art11a.customer_id$=art01a.customer_id$
                    art11a.ar_inv_no$=art01a.ar_inv_no$
                    art11a.sequence_num$="01"
                    start_block = 1

                    if start_block then
                        art11a_key$=keyp(art11_dev,end=*endif)

                        if  art11a_key.firm_id$+art11a_key.ar_type$+art11a_key.customer_id$+art11a_key.ar_inv_no$ = 
:                           art01a.firm_id$+art01a.ar_type$+art01a.customer_id$+art01a.ar_inv_no$ 
:                       then
                            art11a.sequence_num$=str(num(art11a.sequence_num$)+1:"00")
                        endif
                    endif

                    art11a.trans_type$="I"
                    art11a.trans_date$=ope01a.invoice_date$
                    art11a.refchk_no$=ope01a.ar_inv_no$
                    art11a.trans_amt=total_ext+ope01a.tax_amount+ope01a.freight_amt-ope01a.discount_amt
                    art11a$ = field(art11a$)
                    write record (art11_dev) art11a$
                    break
                endif

            rem --- Bank Reconciliation

                if br$<>"Y" then break
                glt15a.firm_id$=firm_id$
                glt15a.gl_account$=z6$(11,10)
                glt15a.trans_no$=pad(ope01a.invoice_date$,8)(3,6)+"S"
                glt15a.trans_amt=0
                find record (glt15_dev,key=glt15a.firm_id$+glt15a.gl_account$+glt15a.trans_no$,dom=*next) glt15a$

                glt15a.trans_type$="D"
                glt15a.posted_code$="O"
                glt15a.trns_date$=ope01a.invoice_date$
                glt15a.description$="Sales Register Update"
                glt15a.trans_amt=glt15a.trans_amt+total_ext+ope01a.tax_amount+ope01a.freight_amt-ope01a.discount_amt
                glt15a$ = field(glt15a$)
                write record (glt15_dev) glt15a$
                break

            wend

        rem --- Update arm-02 Customer Summary

            extract record (arm02_dev,key=firm_id$+ope01a.customer_id$+ope01a.ar_type$,dom=accumulate_mtd_sales) arm02a$
            arm02a.lstinv_date$ = ope01a.invoice_date$
            if ope01a.cash_sale$<>"Y" then arm02a.aging_cur = arm02a.aging_cur+total_ext+ope01a.tax_amount+ope01a.freight_amt-ope01a.discount_amt
            credit = arm02a.aging_future+arm02a.aging_cur+arm02a.aging_30+arm02a.aging_60+arm02a.aging_90+arm02a.aging_120; rem "Current Credit
            arm02a$ = field(arm02a$)
            write record (arm02_dev,key=arm02a.firm_id$+arm02a.customer_id$+arm02a.ar_type$) arm02a$
            goto accumulate_mtd_sales

        rem --- Update MTD Cash Totals (***Orphan Code***)

            if ope01a.cash_sale$="Y" then
                s0$=firm_id$+"C"
                extract record (ops10_dev,key=s0$,dom=*next) ops10c$
                if ope01a.invoice_date$<=g9$ then s[0]=s[0]+h[0]
                if ope01a.invoice_date$>g9$ then s[3]=s[3]+h[0]
                write record (ops10_dev,key=s0$) ops10c$
            endif

        accumulate_mtd_sales: rem --- Accoumulate MTD Sales

            if ope01a.invoice_date$<=g9$ then
                t[2]=t[2]+ope01a.tax_amount
                t[3]=t[3]+ope01a.freight_amt
                t[5]=t[5]+ope01a.discount_amt
            else
                t[10]=t[10]+ope01a.tax_amount
                t[11]=t[11]+ope01a.freight_amt
                t[13]=t[13]+ope01a.discount_amt
            endif

        rem --- Post Tax, Freight And Discount to G/L

            if gl$="Y" then
                when$=ope01a.invoice_date$
                ref3$=""
                units=0

                if ope01a.cash_sale$<>"Y" then
                    account$=z0$(1,10)
                    amount=ope01a.tax_amount+ope01a.freight_amt-ope01a.discount_amt
                rem gosub glpost
                else
                    account$=z0$(11,10)
                    amount=ope01a.tax_amount+ope01a.freight_amt-ope01a.discount_amt
                    ref3$="Cash Sale"
                rem gosub glpost
                endif

                account$=z0$(31,10)
                amount=ope01a.discount_amt
            rem gosub glpost

                account$=z0$(41,10)
                amount=-ope01a.freight_amt
            rem gosub glpost
            endif

        rem --- Write Taxes, Sales Tax GL Account Update

            gosub calculate_store_tax

        rem --- Update arm-06 Payment Summary

            arm06a.firm_id$=firm_id$
            arm06a.customer_id$=ope01a.customer_id$
            find record (arm06_dev,key=arm06a.firm_id$+arm06a.customer_id$,dom=*next) arm06a$

            arm06a.lstinv_date$=ope01a.invoice_date$

            if ope01a.invoice_date$<=g9$ then
                arm06a.mtd_sales=arm06a.mtd_sales+total_ext
                arm06a.mtd_cost=arm06a.mtd_cost+total_cost
                arm06a.ytd_sales=arm06a.ytd_sales+total_ext
                arm06a.ytd_cost=arm06a.ytd_cost+total_cost

                if arm06a.mtd_high_crd<credit
                    arm06a.mtd_high_crd=credit; rem "MTD High Credit
                endif

                if arm06a.ytd_hi_cred<credit
                    arm06a.ytd_hi_cred=credit; rem "YTD High Credit
                endif

            else
                arm06a.nmtd_sales=arm06a.nmtd_sales+total_ext
                arm06a.nxt_mtd_cost=arm06a.nxt_mtd_cost+total_cost
                if arm06a.nmtd_high_cr<credit then arm06a.nmtd_high_cr=credit
            endif

            arm06a$ = field(arm06a$)
            write record (arm06_dev,key=arm06a.firm_id$+arm06a.customer_id$) arm06a$
        endif

    rem --- Remove print record / Update history

        remove (ope04_dev,key=firm_id$+"I  "+ope04a.customer_id$+ope04a.order_no$,dom=*next)

		opt01a$=ope01a$
        opt01a.ar_inv_no$=ope01a.ar_inv_no$
        opt01a.lock_status$="2"
        opt01a.order_no$=ope01a.order_no$
        opt01a.total_sales=total_ext
        opt01a.total_cost=total_cost
        opt01a$ = field(opt01a$)
        write record (opt01_dev) opt01a$

    rem --- Update Commissions file
		if ope01a.invoice_type$<>"V" then
			dim opt71a$:fattr(opt71a$)

			opt71a.firm_id$      = ope01a.firm_id$
			opt71a.ar_type$      = ope01a.ar_type$
			opt71a.slspsn_code$  = ope01a.slspsn_code$
			opt71a.ar_inv_no$    = ope01a.ar_inv_no$
			opt71a.customer_id$  = ope01a.customer_id$
			opt71a.invoice_type$ = ope01a.invoice_type$
			opt71a.invoice_date$ = ope01a.invoice_date$
			opt71a.comm_percent  = ope01a.comm_percent
			opt71a.comm_amt      = ope01a.comm_amt
			opt71a.total_sales   = ope01a.total_sales
			opt71a.total_cost    = ope01a.total_cost

			write record (opt71_dev) opt71a$
		endif
		
    rem --- Do we update or remove the order header?

        if ope01a.invoice_type$="V" then something_backord=0,something_commit=0

        if (!something_backord and !something_commit) or ope01a.customer_id$=ars01a.customer_id$ then
            remove (ope01_dev, key=ope04a.firm_id$+ope04a.ar_type$+ope04a.customer_id$+ope04a.order_no$, dom=*next)
            if ope03_dev gosub remove_tickler
            remove (ope31_dev, key=ope04a.firm_id$+ope04a.customer_id$+ope04a.order_no$, dom=*next)
        rem remove (ope51_dev, key=ope04a.firm_id$+ope04a.ar_type$+ope04a.order_no$+ope04a.customer_id$, dom=*next)
        else
            ope01a.ordinv_flag$="O"
            ope01a.invoice_date$=""
            ope01a.ar_inv_no$=""
            ope01a.freight_amt=0
            ope01a.print_status$="N"
            ope01a.lock_status$="N"
            ope01a.tax_amount=0
            ope01a.freight_amt=0
            ope01a.discount_amt=0
            ope01a.comm_percent=0
            ope01a.taxable_amt=0
            ope01a.comm_amt=0
            ope01a.total_sales=total_sales
            ope01a.total_cost=total_cost_ord

            if something_backord then
                ope01a.backord_flag$="B"
            else
                ope01a.backord_flag$=""; rem "Are there B/O items?
            endif

            if newshpdt$<>"" then ope01a.shipmnt_date$=newshpdt$
            ope01a$ = field(ope01a$)
            write record (ope01_dev) ope01a$

            ope04a.firm_id$=ope01a.firm_id$
            ope04a.ordinv_flag$="O"
            ope04a.ar_type$=ope01a.ar_type$
            ope04a.customer_id$=ope01a.customer_id$
            ope04a.order_no$=ope01a.order_no$
            ope04a$ = field(ope04a$)
            write record (ope04_dev) ope04a$

			ope04a.ordinv_flag$="I"
            read (ope04_dev,key=ope04a.firm_id$+ope04a.ordinv_flag$+ope04a.ar_type$+ope04a.customer_id$+ope04a.order_no$,dom=*next)
        endif

        if ope01a.cash_sale$="Y" remove (ope41_dev,key=ope01a.firm_id$+ope01a.ar_type$+ope01a.customer_id$+ope01a.order_no$,dom=*next)

    wend

rem --- Main Loop Ends

rem --- End

    precision 2
    ops10s.firm_id$=firm_id$
    ops10s.record_id_s$="S"
    extract record (ops10_dev,key=ops10s.firm_id$+ops10s.record_id_s$,dom=*next) ops10s$

    ops10s.mtd_sales=ops10s.mtd_sales+t[0]
    ops10s.mtd_returns=ops10s.mtd_returns+t[1]
    ops10s.mtd_tax=ops10s.mtd_tax+t[2]
    ops10s.mtd_freight=ops10s.mtd_freight+t[3]
    ops10s.mtd_cost=ops10s.mtd_cost+t[4]
    ops10s.mtd_discount=ops10s.mtd_discount+t[5]
    ops10s.mtd_csh_sale=ops10s.mtd_csh_sale+t[6]
    ops10s.reserved_num=ops10s.reserved_num+t[7]
    ops10s.nmtd_sales=ops10s.nmtd_sales+t[8]
    ops10s.nmtd_returns=ops10s.nmtd_returns+t[9]
    ops10s.nmtd_tax=ops10s.nmtd_tax+t[10]
    ops10s.nxt_mtd_frgt=ops10s.nxt_mtd_frgt+t[11]
    ops10s.nxt_mtd_cost=ops10s.nxt_mtd_cost+t[12]
    ops10s.nxt_mtd_disc=ops10s.nxt_mtd_disc+t[13]
    ops10s.nmtd_cashsl=ops10s.nmtd_cashsl+t[14]
    ops10s.reserved_num=ops10s.reserved_num+t[15]
    ops10s$ = field(ops10s$)

    write record (ops10_dev) ops10s$

rem --- Post the G/L Recap from the Sales Register directly to the Daily Detail

    if gl$="Y" then 
        call pgmdir$+"glc_update.aon",glm01_dev,glt04_dev,glw11_dev,status
        call pgmdir$+"glc_ctlupdate.aon",status
        call pgmdir$+"glc_ctldelete.aon",status
    endif

rem --- All Done  

    goto std_exit

rem --- Subroutines    

inventory_item_update: rem --- Inventory Item Update

    iv_items$[1]=ope11a.warehouse_id$
    iv_items$[2]=ope11a.item_id$
    iv_items$[3]=ls_nbr$
    iv_refs$[0]=ope01a.invoice_date$
    iv_refs$[1]=ope01a.customer_id$
    iv_refs$[2]=ope01a.order_no$
    iv_refs$[3]=ope01a.ar_inv_no$
    iv_refs$[5]=line_nbr$
    iv_refs$[6]=ope11a.line_code$
    iv_refs$[7]=account$
    iv_refs$[12]=opm02a.dropship$
    iv_refs[0]=-qnty
    iv_refs[1]=cost
    iv_refs[2]=ope11a.unit_price
    call pgmdir$+"ivc_itemupdt.aon","OP",iv_files[all],ivs01a$,iv_items$[all],iv_refs$[all],iv_refs[all],table_chans$[all],iv_status
    if iv_status = 999 then exitto std_exit

    return

retrieve_distribution_code: rem --- Retrieve Distribution Code

    status = 0

    if dist_code$<>prev_dist_code$ then
        prev_dist_code$=dist_code$
        status = 11
        find record (arm10d_dev, key=firm_id$+"D"+dist_code$, dom=*endif) arm10d$
        status = 0
    endif

    return

missing_distribtion_code: rem --- Missing Distribution Code

    msg_id$ = "OP_MISSING_DIST"
    dim msg_tokens$[4]
    msg_tokens$[1] = dist_code$
    msg_tokens$[2] = func.alphaMask(ope01a.customer_id$,ars01a.customer_output$)
    msg_tokens$[3] = ope01a.order_no$
    msg_tokens$[4] = ope11a.line_no$
    gosub disp_message

    return

uncomit_qty_shipped: rem --- Uncommit Quantity Not Shipped Or Backordered

    if pos(opm02a.line_type$="SP")=0 then return; rem --- Line type can't be committed
    if ope11a.commit_flag$="N" then return; rem --- Isn't committed now
    if ope11a.qty_ordered-ope11a.qty_backord-ope11a.qty_shipped<=0 then return; rem --- Nothing left to uncommit

rem --- ope-21 lot/serial entries are always shipped

    iv_items$[1]=ope11a.warehouse_id$
    iv_items$[2]=ope11a.item_id$
    iv_items$[3]=""
    iv_refs[0]=ope11a.qty_ordered-ope11a.qty_backord-ope11a.qty_shipped
    call pgmdir$+"ivc_itemupdt.aon","UC",iv_files[all],ivs01a$,iv_items$[all],iv_refs$[all],iv_refs[all],table_chans$[all],iv_status
    if iv_status = 999 then exitto std_exit

    return

remove_tickler: rem --- Remove ope-03 Credit Manager Tickler File Records

    read (ope03_dev, key=ope04a.firm_id$+ope04a.customer_id$+ope04a.order_no$, knum="BY_ORDER", dom=*next)
    remove_record = 0

    while more
        read record (ope03_dev, end=*break) ope03a$
        if ope03a.firm_id$+ope03a.customer_id$<>ope04a.firm_id$+ope04a.customer_id$ then break

        if ope03a.order_no$=ope04a.order_no$ then 
            remove_record = 1
            break
        endif
    wend

    if remove_record then 
        remove (ope03_dev, key=ope03a.firm_id$+ope03a.rev_date$+ope03a.customer_id$+ope03a.order_no$, dom=*next)
    endif

    return

update_salestax_history: rem --- Update Sales Tax History

    find record (art02_dev,key=firm_id$+art02a.tax_code$+art02a.year$+art02a.month$,dom=*next) art02a$
    art02a.taxable_amt = art02a.taxable_amt+ope01a.taxable_amt
    art02a.tax_amount  = art02a.tax_amount+tax_amt
    art02a.gross_sales = art02a.gross_sales+total_ext+ope01a.freight_amt-ope01a.discount_amt
    if ope01a.taxable_amt<0 then art02a.returns = art02a.returns+ope01a.taxable_amt
    art02a$ = field(art02a$)
    write record (art02_dev,key=x$) art02a$

    return

calculate_store_tax: rem --- Calculate and store taxes

    precision 4
    dim art02a$:fattr(art02a$)
    art02a.firm_id$  = firm_id$
    art02a.tax_code$ = ope01a.tax_code$
    art02a.year$     = pad(ope01a.invoice_date$,8)(1,4)
    art02a.month$    = pad(ope01a.invoice_date$,8)(5,2)

    tax_amt   = ope01a.tax_amount
    total_tax = 0
    start_block = 1

rem --- Get the main tax code and calculate amount

    if start_block then 
        find record (opm06_dev,key=firm_id$+ope01a.tax_code$,dom=*endif) opm06a$
        tax_amt = round(opm06a.tax_rate*ope01a.taxable_amt/100, 2)
        precision 2
        if opm06a.op_max_limit<>0 and abs(tax_amt)>opm06a.op_max_limit then tax_amt = opm06a.op_max_limit*sgn(tax_amt)
        total_tax = tax_amt
        gosub update_salestax_history

        account$ = opm06a.gl_account$
        amount   = -tax_amt
        units    = 0
    rem gosub glpost

        dim opm06a1$:fattr(opm06a$); rem copy of record so original is not mangled

    rem --- Get any subsidiary tax codes and add up their amounts

        for x9=1 to 10
            precision 4
            tax_code$ = field(opm06a$, "ar_tot_code_"+str(x9:"00"))
            if cvs(tax_code$,2)="" then continue

            art02a.tax_code$ = tax_code$
            find record (opm06_dev, key=firm_id$+tax_code$, dom=*continue) opm06a1$
            tax_amt = round(opm06a1.tax_rate*ope01a.taxable_amt/100, 2)
            precision 2
            if opm06a1.op_max_limit<>0 and abs(tax_amt)>opm06a1.op_max_limit then tax_amt = opm06a1.op_max_limit*sgn(tax_amt)
            total_tax = total_tax+tax_amt
            gosub update_salestax_history

            account$ = opm06a1.gl_account$
            amount   = -tax_amt
            units    = 0
        rem gosub glpost
        next x9
    endif

    precision 2

rem --- If there is a difference in the order's tax amount, post it now

    if ope01a.tax_amount<>total_tax then
        tax_amt = ope01a.tax_amount-total_tax

    rem --- Hold on to original values

        y0=total_ext
        y1=ope01a.freight_amt
        y2=ope01a.discount_amt
        y4=ope01a.taxable_amt

    rem --- Clear values for posting

        total_ext=0
        ope01a.freight_amt=0
        ope01a.discount_amt=0
        ope01a.taxable_amt=0
        gosub update_salestax_history

    rem --- Put back original values

        total_ext=y0
        ope01a.freight_amt=y1
        ope01a.discount_amt=y2
        ope01a.taxable_amt=y4

        account$ = opm06a.gl_account$
        amount   = -tax_amt
        units    = 0
    rem gosub glpost
    endif

    precision 2

    return

glpost: rem --- Standard G/L Posting Routine
rem *** DISABLED ***
rem We are using what's posted in opr_salesregister to post to glt14
rem If changes need to be made to the GL posting, make them there

rem if gl$="Y" then
rem call pgmdir$+"glc_glpost.aon",glm01_dev,glt04_dev,glt14_dev,account$,when$,ref1$,ref2$,ref3$,memo$,amount,units,status
rem if status = 999 then exitto std_exit
rem endif

    return

unlink_po: rem --- Delete PO to order link

    start_block = 1
    unlink_po = 0

    if start_block then 
        find record (poe08_dev,key=firm_id$+ope11a.customer_id$+ope11a.order_no$+ope11a.internal_seq_no$,knum="AO_CUST_ORD",dom=*endif) poe08a$

    rem --- Only sales order sequence number is kept in the PO detail line

        extract record (poe12_dev, key=poe08a.firm_id$+poe08a.po_no$+poe08a.poedet_seq_ref$, dom=*endif) poe12a$
        poe12a.so_int_seq_ref$ = ""
        poe12a$ = field(poe12a$)
        write record (poe12_dev) poe12a$
        unlink_po = 1

        remove (poe08_dev, key=poe08a.firm_id$+poe08a.po_no$+poe08a.poedet_seq_ref$)
    endif

    return

update_order_detail: 

    ope11a.pick_flag$ = "N"
    total_sales = total_sales + ope11a.ext_price
    total_cost_ord = total_cost_ord + round(ope11a.qty_ordered * ope11a.unit_cost, 2)
    if ope11a.est_shp_date$<newshpdt$ or newshpdt$="" then newshpdt$=ope11a.est_shp_date$
    ope11a$ = field(ope11a$)

    precision i[2]
    write record (ope11_dev) ope11a$
    precision 2

    return

rem #include disp_message.src

disp_message: rem --- Display Message Dialog

    call stbl("+DIR_SYP")+"bac_message.bbj",msg_id$,msg_tokens$[all],msg_opt$,table_chans$[all]

    return

rem #endinclude disp_message.src

rem --- #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    call stbl("+DIR_SYP")+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:       str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry

std_error_exit: 
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape

std_error_release: 
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem --- #endinclude std_error.src
rem --- #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:       str(err:"000"),rd_err_text$,rd_err_act$

std_missing_params_exit: 
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape

std_missing_params_release: 
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem --- #endinclude std_missing_params.src

rem --- #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    msg_id$="UPDATE_COMPLETE"
    dim msg_tokens$[1]
    msg_opt$=""
    gosub disp_message

    call pgmdir$+"adc_progress.aon","D","","","","",0,0,0,meter_num,status
    run stbl("+DIR_SYP")+"bas_process_end.bbj",err=*next
    release

rem --- #endinclude std_end.src

    end
