rem ------------------------------------------------------------------------------
rem --- adx_dumptmpl.aon: Show the field name and values of a templated string ---
rem ------------------------------------------------------------------------------
rem 
rem  Copyright 2003-2009, BASIS International
rem 
rem  Author:  Knute Snortum <ksnortum@basis.com> 
rem 
rem  Usage:   call "adx_dumptmpl.aon",templated_str$,[fields_to_skip]
rem              fields_to_skip$:   a mask string of field names not to print
rem 
rem  Example:
rem 
rem   open(1)"X0"               
rem   dim sysfin$:tmpl(1,ind=0) 
rem   sysfin$=fin(1)            
rem   call"adx_dumptmpl.aon",sysfin$  
rem 
rem  Version: 1.0

    in$ = ""
    flds2skip$ = ""
    enter in$, flds2skip$,err=*next

    if in$="" then goto the_end
    if flds2skip$<>"" then junk = mask( "", flds2skip$,err=the_end )
    fld_names$ = fattr( in$, "" )
    ptr = 1, lines = 1

rem --- Main loop

    while ptr<len( fld_names$ )
        pp = pos( $0A$=fld_names$( ptr ) )

        if pp then  
            fld_name$ = fld_names$( ptr, pp-1 ), ptr = ptr+pp 
        else  
            fld_name$ = fld_names$( ptr ), ptr = len( fld_names$ )+1
        endif

    rem Field names to skip

        if flds2skip$<>"" and mask( fld_name$ ) then  continue

        faf$ = fattr( in$, fld_name$ )
        field_type = asc( faf$ )
        repeats = dec( $00$ + faf$( 4, 2 ) )
        fld_len = dec( $00$ + faf$( 10, 2 ) )

    rem Repeating fields (arrays)

        for i = 1 to repeats
            if repeats>1 then  
                array_ref$ = "[" + str( i ) + "]" 
            else  
                array_ref$ = ""
            endif

        rem Strings

            if field_type=1 then  
                fld_data$ = field( in$, fld_name$, i )

                if pos( " ">fld_data$ ) or pos( "~"<fld_data$ ) then  
                    fld_data$ = "$" + hta( fld_data$ ) + "$" 
                else  
                    fld_data$ = """" + fld_data$ + """"
                endif

                print 'sb', pad( fld_name$ + "$" + array_ref$, 32, "." ), 'sf', 

                while len( fld_data$ )>48
                    print @( 32 ), fld_data$( 1, 48 )
                    fld_data$ = fld_data$( 49 )
                    gosub pause
                wend

                if fld_data$<>"" then  
                    print @( 32 ), fld_data$
                    gosub pause
                endif
            else

            rem Numbers

                if field_type=2 then  
                    print 'sb', pad( fld_name$ + array_ref$, 32, "." ), 'sf', str( nfield( in$, fld_name$, i ) )
                    gosub pause
                else

                rem Integers

                    if field_type=3 or field_type=4 then  
                        print 'sb', pad( fld_name$ + "%" + array_ref$, 32, "." ), 'sf', str( nfield( in$, fld_name$, i ) )
                        gosub pause

                    endif
                endif
            endif
        next i

    wend

    goto the_end

pause: rem --- Pause

    if lines<20 then  
        lines = lines+1
        goto pause_done
    endif

    input "Press <enter> to continue, <F4> to quit", *, 'up', 'cl', 
    if ctl=4 then exit 
    lines = 0

pause_done: 
    return 

the_end: rem --- This is the end

    exit 

    end
