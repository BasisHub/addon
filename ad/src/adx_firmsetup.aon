rem ==========================================================================
rem --- adx_firmsetup.aon 
rem --- Utility to setup new firm with clean data files for new install, with or without
rem --- demo data.
rem --- 
rem --- AddonSoftware Version 11.0
rem --- Copyright BASIS International Ltd.  All Rights Reserved.
rem --- All Rights Reserved
rem ==========================================================================

    use java.util.Properties

    setesc std_error
    seterr std_error

rem --- Initializations

    pgmdir$=stbl("+DIR_PGM",err=*next)

rem --- Get user inputs

    formData! = new Properties()
    formData!.setProperty("DATA_LOCATION",Option!.getOptionData("DATA_LOCATION"))
    formData!.setProperty("NEW_FIRM_ID",Option!.getOptionData("NEW_FIRM_ID"))
    formData!.setProperty("FIRM_NAME",Option!.getOptionData("FIRM_NAME"))
    formData!.setProperty("ADDR_LINE_1",Option!.getOptionData("ADDR_LINE_1"))
    formData!.setProperty("ADDR_LINE_2",Option!.getOptionData("ADDR_LINE_2"))
    formData!.setProperty("CITY",Option!.getOptionData("CITY"))
    formData!.setProperty("STATE_CODE",Option!.getOptionData("STATE_CODE"))
    formData!.setProperty("ZIP_CODE",Option!.getOptionData("ZIP_CODE"))
    formData!.setProperty("CNTRY_ID",Option!.getOptionData("CNTRY_ID"))
    formData!.setProperty("PHONE_NO",Option!.getOptionData("PHONE_NO"))
    formData!.setProperty("FEDERAL_ID",Option!.getOptionData("FEDERAL_ID"))
    formData!.setProperty("INSTALL_TYPE",Option!.getOptionData("INSTALL_TYPE"))
    formData!.setProperty("NEW_INSTALL",Option!.getOptionData("NEW_INSTALL"))

    if num(Option!.getOptionData("NEW_INSTALL"))then
        rem --- For a new installation, return formData! to the adx_installwiz form and exit
        callpoint!.setDevObject("formData",formData!)
        rdForm!.destroy()
    else
        rem --- Setup new firm in an existing installation
        demoData%=0; rem --- This is always for an existing install, not a new install with demo data.
        call pgmdir$+"adc_firmsetup.aon",formData!,demoData%,rdForm!,1,status
    endif
    
done: rem --- All done

    goto std_exit
    
rem #include std_error.src

std_error: rem --- Standard error handler (11Oct2017)

    if tcb(19)>0
        rem --- Escape handler
        if and(chr(tcb(19)),$08$)=$08$
            release
        else
            setesc std_error
            return
        endif
    endif

    if err=0   
        rem --- Get tcb(12) and tcb(10) to send into bac_error
        lock_byte=tcb(10)
        lock_chan=tcb(12)  
    endif

    rd_err_text$="",err_num=err
    if tcb(2)=0 and tcb(5) then rd_err_text$=pgm(tcb(5),tcb(13),err=*next)
    if err_num=252 then
        E!=BBjAPI().getLastBBjException()
        rd_err_text$=rd_err_text$+$0A$+E!.getClass().getName()
        if E!.getMessage()<>null() then rd_err_text$=rd_err_text$+": "+E!.getMessage()
    endif
    call stbl("+DIR_SYP")+"bac_error.bbj",pgm(-2),str(tcb(5)),str(err_num),rd_err_text$,rd_err_act$,lock_byte,lock_chan
    if pos("ESCAPE"=rd_err_act$) seterr 0; setesc 0
    if pos("RETRY"=rd_err_act$) retry
    if pgm(-1)<>pgm(-2) status=999; exit 
    release

rem #endinclude std_error.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    run stbl("+DIR_SYP")+"bas_process_end.bbj",err=*next
    release

rem #endinclude std_end.src
    
    end