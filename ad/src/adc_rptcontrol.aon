rem adc_rptcontrol - set up fax and/or email queue rec for desired document/report
rem Program adc_clearfile v8.0.0 30Jun2008

rem  +-----------------------------------------+
rem  | AddonSoftware Version 8.0.0 - 01Oct2006 |
rem  |  Copyright (c) 1981-2006 AddonSoftware  |
rem  |          All Rights Reserved            |
rem  +-----------------------------------------+

rem --- ALIAS_NAME: Alias name of report program (such as ARR_INVOICES...INPUT)
rem --- REF_ID: ID number of customer or vendor (INPUT)
rem --- REF_TP: V for vendor, C for customer (INPUT) 
rem --- DOC_NO: Barista document number assigned to the document (INPUT)
rem --- DOC_TP: document type (PDF,CSV,TXT,etc...INPUT)

    seterr std_error
    setesc std_error
    enter alias_name$,ref_id$,ref_tp$,doc_no$,doc_tp$

rem --- Retrieve sysinfo data

    sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=*next)
    milestone=num(stbl("+MILESTONE",err=*next),err=*next)
    firm_id$=sysinfo.firm_id$

rem --- Open/Lock files

    files=2,begfile=1,endfile=files
    dim files$[files],options$[files],ids$[files],templates$[files],channels[files]
    if ref_tp$="C"
        files$[1]="arm_custrpt_ctl",ids$[1]="ARM_CUSTRPT_CTL"
    else
        files$[1]="apm_vendrpt_ctl",ids$[1]="APM_VENDRPT_CTL"
    endif
    files$[2]="adq_faxemail.dat",ids$[2]="ADQ_FAXEMAIL",options$[2]="S"
    call pgmdir$+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],                                   ids$[all],templates$[all],channels[all],batch,status
    if status goto std_exit

    rptctl_dev=channels[1]
    faxemail_dev=channels[2]

    dim rptctl$:templates$[1]
    dim faxemail$:templates$[2]

rem --- combo of alias and id (vend or cust) will only be found in one file or the other

    rpt_ky$=firm_id$+pad(alias_name$,16)+ref_id$
    readrecord(rptctl_dev,key=rpt_ky$,knum=1,dom=done)rptctl$
    if ref_tp$="C"
        fax_to_org$=rptctl.customer_name$
    else
        fax_to_org$=rptctl.vendor_name$
    endif

    if rptctl.fax_yn$="Y" or rptctl.email_yn$="Y"
        faxemail.firm_id$=rptctl.firm_id$
        faxemail.doc_no$=doc_no$
        faxemail.doc_type$=cvs(doc_tp$,4)
        faxemail.fax_yn$=rptctl.fax_yn$
        faxemail.fax_nos$=rptctl.fax_nos$
        faxemail.from_company$=rptctl.from_company$
        faxemail.from_name$=rptctl.from_name$
        faxemail.fax_to_org$=fax_to_org$
        faxemail.fax_to_name$=rptctl.fax_to$
        faxemail.fax_subject$=rptctl.fax_subject$
        faxemail.fax_message$=rptctl.fax_message$
        faxemail.email_yn$=rptctl.email_yn$
        faxemail.email_from$=rptctl.email_from$
        faxemail.email_replyto$=rptctl.email_replyto$
        faxemail.email_to$=rptctl.email_to$
        faxemail.email_cc$=rptctl.email_cc$
        faxemail.email_bcc$=rptctl.email_bcc$
        faxemail.email_subject$=rptctl.email_subject$
        faxemail.email_message$=rptctl.email_message$

        writerecord(faxemail_dev)faxemail$

    endif

done: rem --- All done

    close(rptctl_dev)
    close(faxemail_dev)

    goto std_exit


rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    call stbl("+DIR_SYP")+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5)),
:                                str(err),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry

std_error_exit:
    
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
    
std_error_release:

    status=999
    if pgm(-1)<>pgm(-2) exit 
    release

rem #endinclude std_error.src

rem #include std_exit.src

std_exit: rem --- Standard called program exit (01Mar2006)

    exit

rem #endinclude std_exit.src

    end
