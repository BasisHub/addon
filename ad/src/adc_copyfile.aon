rem adc Called File Field Copy Routine"
rem Program adc_copyfile v8.0.0 14Feb2008

rem  +-----------------------------------------+
rem  | AddonSoftware Version 8.0.0 - 01Oct2006 |
rem  |  Copyright BASIS International Ltd.  All Rights Reserved.
rem  |          All Rights Reserved            |
rem  +-----------------------------------------+

rem --- string1$  : String To Copy Fields From (input)
rem --- string2$  : String To Copy Fields To (output)
rem --- status    : Returned status (output)

    seterr std_error
    setesc std_error

    enter string1$,string2$,status

rem --- Initializations
    status=1
    string1_list$=fattr(string1$,"",err=std_exit)
    string2_list$=fattr(string2$,"",err=std_exit)

rem --- Main
    while 1
        x=pos($0a$=string1_list$)
        if x=0 break
        curr_field$=string1_list$(1,x-1)
        string1_list$=string1_list$(x+1)
        rem --- Skip if field doesn't exist in destination template
        if pos(curr_field$+$0a$=string2_list$) then 
            array$=fattr(string1$,curr_field$)
            array=dec(array$(4,2))
            for loop=1 to array
                field string2$,curr_field$,[loop]=field(string1$,curr_field$,loop),err=*next
            next loop
        endif
    wend

done:
    status=0
    goto std_exit

rem #include std_error.src

std_error: rem --- Standard error handler (11Oct2017)

    if tcb(19)>0
        rem --- Escape handler
        if and(chr(tcb(19)),$08$)=$08$
            release
        else
            setesc std_error
            return
        endif
    endif

    if err=0   
        rem --- Get tcb(12) and tcb(10) to send into bac_error
        lock_byte=tcb(10)
        lock_chan=tcb(12)  
    endif

    rd_err_text$="",err_num=err
    if tcb(2)=0 and tcb(5) then rd_err_text$=pgm(tcb(5),tcb(13),err=*next)
    if err_num=252 then
        E!=BBjAPI().getLastBBjException()
        rd_err_text$=rd_err_text$+$0A$+E!.getClass().getName()
        if E!.getMessage()<>null() then rd_err_text$=rd_err_text$+": "+E!.getMessage()
    endif
    call stbl("+DIR_SYP")+"bac_error.bbj",pgm(-2),str(tcb(5)),str(err_num),rd_err_text$,rd_err_act$,lock_byte,lock_chan
    if pos("ESCAPE"=rd_err_act$) seterr 0; setesc 0
    if pos("RETRY"=rd_err_act$) retry
    if pgm(-1)<>pgm(-2) status=999; exit 
    release

rem #endinclude std_error.src


rem #include std_exit.src

std_exit: rem --- Standard called program exit (01Mar2006)

    exit

rem #endinclude std_exit.src

    end