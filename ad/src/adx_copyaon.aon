rem ==========================================================================
rem --- adx_copyaon.aon 
rem --- Utility to copy aon directory and sub-directories from one location to another,
rem --- with or without data files.
rem --- 
rem --- AddonSoftware Version 10.0
rem --- Copyright BASIS International Ltd.  All Rights Reserved.
rem --- All Rights Reserved
rem ==========================================================================

    setesc std_error
    seterr std_error

rem --- Initializations

    pgmdir$=stbl("+DIR_PGM",err=*next)

rem --- Get user inputs

    newLocation$=Option!.getOptionData("NEW_INSTALL_LOC") + "/aon"
    demoData%=int(num(Option!.getOptionData("DEMO_DATA")))
    help%=int(num(Option!.getOptionData("APP_HELP")))

rem --- Set oldLocation to aon directory under the current download directory

    sep$ = java.io.File.separator
    bbjHome$=java.lang.System.getProperty("basis.BBjHome")
    oldLocation$ = bbjHome$ + sep$ + "apps" + sep$ + "aon"
    
rem --- Recursively copy oldLocation to newLocation

    call pgmdir$+"adc_copyaon.aon",oldLocation$,newLocation$,demoData%,help%,rdForm!,1,status
    
done: rem --- All done

    goto std_exit
    
rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    call stbl("+DIR_SYP")+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5)),
:                                str(err),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    run stbl("+DIR_SYP")+"bas_process_end.bbj",err=*next
    release

rem #endinclude std_end.src
    
    end