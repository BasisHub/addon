rem adc - Determine Period End Dates (Public/Called)
rem Program adc_perioddates v8.0.0 13Apr2006 (syc_pa)
rem Created by adx_progconv.bbx v1.0.0 (04/13/2006 10:16:04)

rem  +-----------------------------------------+
rem  | AddonSoftware Version 8.0.0 - 01Oct2006 |
rem  |  Copyright (c) 1981-2006 AddonSoftware  |
rem  |          All Rights Reserved            |
rem  +-----------------------------------------+

rem --- GLS01_DEV : Channel that ads-01 is open on (Input)
rem --- PERIOD    : Current fiscal period (Input)
rem --- YEAR      : Current fiscal year (Input)
rem --- BEGDATE$  : Period beginning date in YYYYMMDD format (Returned)
rem --- ENDDATE$  : Period ending date in YYYYMMDD format (Returned)
rem --- STATUS    : Zero=No Error/Not Zero=Error (Returned)

    setesc std_error
    seterr std_error
    enter gls01_dev,period,year,begdate$,enddate$,status

rem --- Retrieve the program path

    pgmdir$=stbl("+DIR_PGM",err=*next)

rem --- Retrieve sysinfo data

    sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=*next)
    firm_id$=sysinfo.firm_id$

rem --- Retrieve miscellaneous templates

    files=1,begfile=1,endfile=files
    dim ids$[files],templates$[files]
    ids$[1]="gls-01:GLS_PARAMS"
    call pgmdir$+"adc_template.aon",begfile,endfile,ids$[all],templates$[all],status
    if status goto std_exit

rem --- Dimension miscellaneous string templates

    dim gls01a$:templates$[1]

rem --- Retrieve parameter records

    status=0
    gls01a_key$=firm_id$+"GL00"
    find record (gls01_dev,key=gls01a_key$,err=std_missing_params) gls01a$
    total_periods=num(gls01a.total_pers$)

rem --- Determine End Of Period

    if period>total_periods period=total_periods
    enddate$=field(gls01a$,"per_ending_"+str(period:"00"))
    calendar_year=year
    if enddate$(1,2)<gls01a.per_ending_01$(1,2) calendar_year=calendar_year+1
    enddate$=str(calendar_year:"0000")+enddate$

rem --- Determine Start Of Period

    if period>1 begdate$=field(gls01a$,"per_ending_"+str(period-1:"00")),calendar_year=year
:          else begdate$=field(gls01a$,"per_ending_"+str(total_periods:"00")),calendar_year=year-1
    if begdate$(1,4)<gls01a.per_ending_01$ calendar_year=calendar_year+1
    if begdate$(1,4)="0229"
:      if mod(calendar_year,4) then begdate$="0228"
    julian=jul(calendar_year,num(begdate$(1,2)),num(begdate$(3,2)))+1
    begdate$=date(julian:"%Yl%Mz%Dz")

rem --- Done

    status=0
    goto std_exit

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    call ("+DIR_SYP")+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:                                str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src

rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:                                   str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_missing_params_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry

std_missing_params_exit:
    
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
    
std_missing_params_release:

    status=999
    if pgm(-1)<>pgm(-2) exit 
    release

rem #endinclude std_missing_params.src

rem #include std_exit.src

std_exit: rem --- Standard called program exit (01Mar2006)

    exit

rem #endinclude std_exit.src

    end
