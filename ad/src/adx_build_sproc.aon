rem --- build_sprocs.aon
rem --- Copyright BASIS International Ltd.  All Rights Reserved.
rem --- prototype for table-driven sproc definition

rem --- for now, this program has hard-coded logic to create the following SPROCs:
rem --- POCALENDAR
rem --- SALES_CUSTOMER
rem --- SALES_CUST_TYPE
rem --- SALES_CUST_TYPE_CUST
rem --- SALES_INVOICE_DETAILS
rem --- PICKLST_DETAIL *** dropping but no longer adding - not used
rem --- PICKLST_HEADER *** dropping but no longer adding - not used
rem --- BOMCOSTING
rem --- BOMMATLDET
rem --- BOMOPDET
rem --- BOMSUBDET
rem --- BOMTOTAL
rem --- SFCALENDAR
rem --- SFHARDCOPY
rem --- SFHARDCOPYCLSDDET
rem --- SFHARDCOPYOPSTD
rem --- SFHARDCOPYMATSTD
rem --- SFHARDCOPYSUBSTD
rem --- SFHARDCOPYCOSTSUM
rem --- SFHARDCOPYTRANS
rem --- SFHARDCOPYFGLS
rem --- CUSTSTATEMENTS
rem --- SIMPLE_INVOICE
rem --- SIMPLE_INVOICE_DTL
rem --- APCHECKS_MAIN
rem --- APCHECKS_CHECK (The check itself)
rem --- APCHECKS_STUB (Vendor and Accounting Stubs)
rem --- VENDORDETAIL_HIST
rem --- OPINVOICE_HDR
rem --- OPINVOICE_DET
rem --- OPINVOICE_DET_LOTSER
rem --- OP_HIST_INVOICE_HDR
rem --- OP_HIST_INVOICE_DET
rem --- OP_HIST_INVOICE_DET_LOTSER
rem --- PURCHASEORDER_HDR
rem --- PURCHASEORDER_DET
rem --- OPPICKLIST_HDR
rem --- OPPICKLIST_DET
rem --- PURCHASEREQUISITION_HDR
rem --- PURCHASEREQUISITION_DET
rem --- SFPICKLIST

rem ---      Dashboard SPROCs
rem --- ARAGINGTOT_BAR
rem --- ARAGING_BAR

rem --- GLINCTOT_GRD
rem --- GLBNKBAL_BAR
rem --- GLBNKBAL_RNG
rem --- GLCMPINC_BAR
rem --- GLINCACCT_BAR drill down from GLCMPINC_BAR
rem --- GLACCTDET_GRD drill down from GLINCACCT_BAR
rem --- GLEXPTOT_PIE
rem --- GLINCEXP_ARE

rem --- SATOPCST_BAR
rem --- SATOPCST_SBR
rem --- SAREPTOT_BAR
rem --- SATOPREP_LIN
rem --- SATOPREP_SAR
rem --- SATOPREP_PIE
rem --- SATOPREP_SBR
rem --- SATOPREPPROD_GRD

rem --- SFWOSSOS_GRD


rem --- 4/2012 Added VIEWs to the hard-coded logic herein
rem --- As of 10/2013, no VIEWs are needed; all are removed

rem --- idea is to make an admin table in Addon (Barista?) that contains
rem --- name, params, .prc loc and .cfg loc so as we deploy, we can run this program
rem --- as part of install/init, and see to it that sprocs are defined.

    seterr std_error
    setesc std_error
    
    if argc>1
        for curr_argv=1 to argc-1
            temp_argv$=argv(curr_argv)
            if pos("-u"=temp_argv$)=1 user_id$=temp_argv$(3);rem User ID
            if pos("-l"=temp_argv$)=1 launch_source$=temp_argv$(3);rem Launch source
        next curr_argv
    endif

    if user_id$=""
        use ::sys/prog/bao_security.bbj::Security
        user_id$=Security.getURLUser()
    endif

    if cvs(user_id$,3)<>""
        user_id$=stbl("+USER_ID",cvs(user_id$,4))
    else
        release;rem couldn't get user id?
    endif

rem --- Retrieve the program path

    pgmdir$=stbl("+DIR_PGM",err=*next)

rem --- Retrieve sysinfo data

    call stbl("+DIR_SYP")+"bas_process_beg.bbj",stbl("+USER_ID"),table_chans$[all]

    sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=*next)
    firm_id$=sysinfo.firm_id$
    milestone=1
    
rem --- Open File(s)
    
    num_files=1
    dim open_tables$[1:num_files],open_opts$[1:num_files],open_chans$[1:num_files],open_tpls$[1:num_files]
    open_tables$[1]="ADS_AUTOLAUNCH",open_opts$[1]="OTA"

    gosub open_tables

    ads_autolaunch=num(open_chans$[1]);dim ads_autolaunch$:open_tpls$[1]

rem --- Open File(s) used in VIEWs to ensure their existence (so CREATE won't err)
rem     ***** NOTE: New VIEWs should add their tables to these opens *****


rem --- Close tables opened solely to ensure VIEWs don't err
rem     ***** NOTE: New VIEWs should add their tables to these opens *****
	
rem --- init

    database$=stbl("+DBNAME",err=std_exit)
    wdir$=dir("")
    chdir(stbl("+DIR_SPROCS",err=*next))
    sproc_dir$=dir("")
    chdir wdir$
    sproc_path$=dsk("")+sproc_dir$
    barista_cfg_path$=dsk("")+dir("")+stbl("+DIR_CFG")
    
rem --- init progress meter

    total_recs=10;rem alter as more 'create procedure' statements are added - eventually will be table driven
    curr_rec=0
    task_val$="BUILDSPROC"
    task_desc$="Create SPROC Defs"

    progress! = bbjAPI().getGroupNamespace()
    progress!.setValue("+process_task",task_val$+"^C^"+task_desc$+"^CNC^"+str(total_recs)+"^")

rem --- init for sql

    chan = sqlunt
    SQLOPEN(chan) database$
    
rem -- main loop (this will eventually be table-driven)

rem --- first drop all std Addon SPROCs

	sql_action$="DROP PROCEDURE"
	abort_on_exec_err=0; rem OK if DROP fails to EXEC, but not OK if CREATE fails or if PREP fails
	
	sproc_vw_name$="POCALENDAR"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def
	
	sproc_vw_name$="SALES_CUSTOMER"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def
	
	sproc_vw_name$="SALES_CUST_TYPE"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def
	
	sproc_vw_name$="SALES_CUST_TYPE_CUST"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def
	
	sproc_vw_name$="SALES_INVOICE_DETAILS"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def

	sproc_vw_name$="PICKLST_DETAIL"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def

	sproc_vw_name$="PICKLST_HEADER"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def

	sproc_vw_name$="BOMCOSTING"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def

    sproc_vw_name$="BOMMATLDET"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def

    sproc_vw_name$="BOMOPDET"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def

    sproc_vw_name$="BOMSUBDET"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def

    sproc_vw_name$="BOMTOTAL"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def

	sproc_vw_name$="SFCALENDAR"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def

	sproc_vw_name$="SFHARDCOPY"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def

	sproc_vw_name$="SFHARDCOPYCLSDDET"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def

	sproc_vw_name$="SFHARDCOPYOPSTD"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def

	sproc_vw_name$="SFHARDCOPYMATSTD"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def

	sproc_vw_name$="SFHARDCOPYSUBSTD"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def

	sproc_vw_name$="SFHARDCOPYCOSTSUM"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def

	sproc_vw_name$="SFHARDCOPYTRANS"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def	
	
	sproc_vw_name$="SFHARDCOPYFGLS"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def	

	sproc_vw_name$="VENDORDETAIL_HIST"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def

	sproc_vw_name$="CUST_STATEMENTS"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def

	sproc_vw_name$="SIMPLE_INVOICE"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def

	sproc_vw_name$="SIMPLE_INVOICE_DTL"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def

	sproc_vw_name$="APCHECKS_MAIN"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def
	
	sproc_vw_name$="APCHECKS_CHECK"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def
	
	sproc_vw_name$="APCHECKS_STUB"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def
	
	sproc_vw_name$="OPINVOICE_HDR"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def
	
	sproc_vw_name$="OPINVOICE_DET"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def
		
	sproc_vw_name$="OPINVOICE_DET_LOTSER"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def

	sproc_vw_name$="OP_HIST_INVOICE_HDR"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def
	
	sproc_vw_name$="OP_HIST_INVOICE_DET"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def
		
	sproc_vw_name$="OP_HIST_INVOICE_DET_LOTSER"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def

	sproc_vw_name$="PURCHASEORDER_HDR"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def

	sproc_vw_name$="PURCHASEORDER_DET"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def
        
    sproc_vw_name$="ARAGINGTOT_BAR"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def      
        
    sproc_vw_name$="ARAGING_BAR"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def      
		
	sproc_vw_name$="GLINCTOT_GRD"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def	
	
	sproc_vw_name$="GLBNKBAL_BAR"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def	
	
	sproc_vw_name$="GLBNKBAL_RNG"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def	
	
	sproc_vw_name$="GLCMPINC_BAR"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def	
	
	sproc_vw_name$="GLINCACCT_BAR"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def	
	
	sproc_vw_name$="GLACCTDET_GRD"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def	
	
	sproc_vw_name$="GLEXPTOT_PIE"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def	
	
	sproc_vw_name$="GLINCEXP_ARE"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def		
		
	sproc_vw_name$="SATOPCST_BAR"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def		
	
	sproc_vw_name$="SATOPCST_SBR"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def		
	
	sproc_vw_name$="SAREPTOT_BAR"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def		
	
	sproc_vw_name$="SATOPREP_LIN"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def		

	sproc_vw_name$="SATOPREP_SAR"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def		
		
	sproc_vw_name$="SATOPREP_PIE"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def	
	
	sproc_vw_name$="SATOPREP_SBR"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def		
    
    sproc_vw_name$="SATOPREPPROD_GRD"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def      
	
	sproc_vw_name$="SFWOSSOS_GRD"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def

	sproc_vw_name$="OPPICKLIST_HDR"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def    

	sproc_vw_name$="OPPICKLIST_DET"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def
	
	sproc_vw_name$="OPPICKLIST_DET_LOTSER"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def

	sproc_vw_name$="PURCHASEREQUISITION_HDR"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def

	sproc_vw_name$="PURCHASEREQUISITION_DET"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def

	sproc_vw_name$="SFPICKLIST"
    sqlprep$=sql_action$+" "+sproc_vw_name$+" "
    gosub create_sproc_def
	
rem --- now add them back (i.e., drop, then add, in case anything has changed)

	sql_action$="CREATE PROCEDURE"
	abort_on_exec_err=1; rem OK if DROP fails to EXEC, but not OK if CREATE fails or if PREP fails
	
    sproc_vw_name$="POCALENDAR"
	sqlprep$="CREATE PROCEDURE POCALENDAR "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, BEGINNING_YEAR CHAR(4) IN, BEGINNING_MONTH CHAR(2) IN, "
    sqlprep$=sqlprep$+"ENDING_YEAR CHAR(4) IN, ENDING_MONTH CHAR(2) IN, BARISTA_WD VARCHAR(50) IN) "
    sqlprep$=sqlprep$+"'"+sproc_path$+"POCALENDAR.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'Purchase Calendar'"

    gosub create_sproc_def

    sproc_vw_name$="SALES_CUSTOMER"
	sqlprep$="CREATE PROCEDURE SALES_CUSTOMER "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, CUSTOMER_NBR CHAR(6) IN, BEGDATE CHAR(8) IN, "
    sqlprep$=sqlprep$+"ENDDATE CHAR(8) IN, BARISTA_WD VARCHAR(50) IN) "
    sqlprep$=sqlprep$+"'"+sproc_path$+"SALES_CUSTOMER.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'Sales for a Customer'"

    gosub create_sproc_def
    
    sproc_vw_name$="SALES_CUST_TYPE"
	sqlprep$="CREATE PROCEDURE SALES_CUST_TYPE "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, BEGDATE CHAR(8) IN, ENDDATE CHAR(8) IN, BARISTA_WD VARCHAR(50) IN) "
    sqlprep$=sqlprep$+"'"+sproc_path$+"SALES_CUST_TYPE.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'Sales by Customer Type'"

    gosub create_sproc_def
    
    sproc_vw_name$="SALES_CUST_TYPE_CUST"
	sqlprep$="CREATE PROCEDURE SALES_CUST_TYPE_CUST "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, CUST_TYPE CHAR(3) IN, BEGDATE CHAR(8) IN, ENDDATE CHAR(8) IN, "
    sqlprep$=sqlprep$+"CUST_ID_MASK CHAR(10) IN, CUST_ID_LEN CHAR(3) IN, BARISTA_WD VARCHAR(50) IN) "
    sqlprep$=sqlprep$+"'"+sproc_path$+"SALES_CUST_TYPE_CUST.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'Sales by Customer within Customer Type'"

    gosub create_sproc_def

    sproc_vw_name$="SALES_INVOICE_DETAILS"
	sqlprep$="CREATE PROCEDURE SALES_INVOICE_DETAILS "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, CUSTOMER_NBR CHAR(6) IN, AR_INV_NBR CHAR(7) IN, BARISTA_WD VARCHAR(50) IN) "
    sqlprep$=sqlprep$+"'"+sproc_path$+"SALES_INVOICE_DETAILS.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'Invoice Details'"

    gosub create_sproc_def

    sproc_vw_name$="BOMCOSTING"
	sqlprep$="CREATE PROCEDURE BOMCOSTING "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, BILL_NO_1 CHAR(20) IN, BILL_NO_2 CHAR(20) IN, BARISTA_WD VARCHAR(50) IN, WHSE CHAR(2) IN, ALL_DATES CHAR(1) IN, PROD_DATE CHAR(8) IN, OPTION_ACTIVE CHAR(1) IN)"
    sqlprep$=sqlprep$+"'"+sproc_path$+"BOMCOSTING.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} ' Listing of Costed BOMs'"

    gosub create_sproc_def

    sproc_vw_name$="BOMMATLDET"
    sqlprep$="CREATE PROCEDURE BOMMATLDET "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, WHSE CHAR(2) IN, BILL_NO CHAR(20) IN, EST_YIELD VARCHAR(1) IN, BM_PRECISION CHAR(1) IN, "
    sqlprep$=sqlprep$+"IV_PRECISION CHAR(1) IN, BARISTA_WD VARCHAR(50) IN, MASKS VARCHAR(1) IN, OPTION_ACTIVE CHAR(1) IN)"
    sqlprep$=sqlprep$+"'"+sproc_path$+"BOMMATLDET.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} ' Listing of Costed BOMs'"

    gosub create_sproc_def

    sproc_vw_name$="BOMOPDET"
    sqlprep$="CREATE PROCEDURE BOMOPDET "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, BILL_NO CHAR(20) IN, EST_YIELD VARCHAR(1) IN, STD_LOT_SIZE VARCHAR(1) IN, "
    sqlprep$=sqlprep$+"BM_PRECISION CHAR(1) IN, IV_PRECISION CHAR(1) IN, BARISTA_WD VARCHAR(50) IN, MASKS VARCHAR(1) IN )"
    sqlprep$=sqlprep$+"'"+sproc_path$+"BOMOPDET.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} ' Listing of Costed BOMs'"

    gosub create_sproc_def

    sproc_vw_name$="BOMSUBDET"
    sqlprep$="CREATE PROCEDURE BOMSUBDET "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, BILL_NO CHAR(20) IN, BM_PRECISION CHAR(1) IN, "
    sqlprep$=sqlprep$+"IV_PRECISION CHAR(1) IN, BARISTA_WD VARCHAR(50) IN, MASKS VARCHAR(1) IN )"
    sqlprep$=sqlprep$+"'"+sproc_path$+"BOMSUBDET.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} ' Listing of Costed BOMs'"

    gosub create_sproc_def

    sproc_vw_name$="BOMTOTAL"
    sqlprep$="CREATE PROCEDURE BOMTOTAL "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, BILL_NO CHAR(20) IN, TOT_MAT_COST CHAR(1) IN, TOT_DIR_COST CHAR(1) IN, TOT_OH_COST CHAR(1) IN, "
    sqlprep$=sqlprep$+"TOT_SUB_COST CHAR(1) IN, BM_PRECISION CHAR(1) IN, IV_PRECISION CHAR(1) IN, BARISTA_WD VARCHAR(50) IN, MASKS VARCHAR(1) IN )"
    sqlprep$=sqlprep$+"'"+sproc_path$+"BOMTOTAL.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} ' Listing of Costed BOMs'"

    gosub create_sproc_def
	
    sproc_vw_name$="SFCALENDAR"
	sqlprep$="CREATE PROCEDURE SFCALENDAR "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, OP_CODE CHAR(3) IN, BEGINNING_YEAR CHAR(4) IN, BEGINNING_MONTH CHAR(2) IN, "
    sqlprep$=sqlprep$+"ENDING_YEAR CHAR(4) IN, ENDING_MONTH CHAR(2) IN, BARISTA_WD VARCHAR(50) IN) "
    sqlprep$=sqlprep$+"'"+sproc_path$+"SFCALENDAR.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'Shop Floor Calendar'"

    gosub create_sproc_def
	
    sproc_vw_name$="SFHARDCOPY"
	sqlprep$="CREATE PROCEDURE SFHARDCOPY "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, WO_LOCATION CHAR(2) IN, WO_NO_1 CHAR(7) IN, WO_NO_2 CHAR(7) IN, "
	sqlprep$=sqlprep$+"BARISTA_WD VARCHAR(1) IN, REPORT_SEQ CHAR(1) IN, WOSTATUS CHAR(4) IN, BILL_NO_1 CHAR(20) IN, "
	sqlprep$=sqlprep$+"BILL_NO_2 CHAR(20) IN, WAREHOUSE_ID CHAR(2) IN, CUSTOMER_ID_1 CHAR(6) IN, CUSTOMER_ID_2 CHAR(6) IN, "
	sqlprep$=sqlprep$+"WO_TYPE_1 CHAR(2) IN, WO_TYPE_2 CHAR(2) IN, REPORT_TYPE CHAR(1) IN, MASKS VARCHAR(1) IN, "
	sqlprep$=sqlprep$+"SF_PREVPER_ENDDATE CHAR(8) IN, "	
    sqlprep$=sqlprep$+"STATUS_OPEN VARCHAR(10) IN, STATUS_PLANNED VARCHAR(10) IN, STATUS_CLOSED VARCHAR(10) IN, STATUS_QUOTED VARCHAR(10) IN) "
    sqlprep$=sqlprep$+"'"+sproc_path$+"SFHARDCOPY.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'WO Hard Copy'"

    gosub create_sproc_def

    sproc_vw_name$="SFHARDCOPYCLSDDET"
	sqlprep$="CREATE PROCEDURE SFHARDCOPYCLSDDET "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, WO_LOCATION CHAR(2) IN, WO_NO CHAR(7) IN, BARISTA_WD VARCHAR(1) IN, MASKS VARCHAR(1) IN,"
	sqlprep$=sqlprep$+" COST_MASK_PATTERN VARCHAR(1) IN, AMT_MASK_PATTERN VARCHAR(1) IN, UNITS_MASK_PATTERN VARCHAR(1) IN, "
	sqlprep$=sqlprep$+" WO_CATEGORY VARCHAR(1) IN, WAREHOUSE_ID VARCHAR(1) IN, WO_TYPE VARCHAR(1) IN, ITEM_ID VARCHAR(1) IN, "
    sqlprep$=sqlprep$+" SF_PREVPER_ENDDATE VARCHAR(1) IN, WO_STATUS_LETTER VARCHAR(1) IN, CLOSED_DATE_RAW VARCHAR(1) IN, PRINT_COSTS CHAR(1) IN) "
	sqlprep$=sqlprep$+"'"+sproc_path$+"SFHARDCOPYCLSDDET.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'WO Hard Copy Closed Detail'"

    gosub create_sproc_def
    sproc_vw_name$="SFHARDCOPYOPSTD"
	sqlprep$="CREATE PROCEDURE SFHARDCOPYOPSTD "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, WO_LOCATION CHAR(2) IN, WO_NO CHAR(7) IN, BARISTA_WD VARCHAR(1) IN, MASKS VARCHAR(1) IN, "
	sqlprep$=sqlprep$+"REPORT_TYPE CHAR(1) IN, PRINT_COSTS CHAR(1) IN) "
    sqlprep$=sqlprep$+"'"+sproc_path$+"SFHARDCOPYOPSTD.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'WO Hard Copy Op Std'"

    gosub create_sproc_def

	sproc_vw_name$="SFHARDCOPYMATSTD"
	sqlprep$="CREATE PROCEDURE SFHARDCOPYMATSTD "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, WO_LOCATION CHAR(2) IN, WO_NO CHAR(7) IN, BARISTA_WD VARCHAR(1) IN, "
	sqlprep$=sqlprep$+"MASKS VARCHAR(1) IN, REPORT_TYPE CHAR(1) IN, ITEM_LEN_PARAM CHAR(2) IN, PRINT_COSTS CHAR(1) IN) "
    sqlprep$=sqlprep$+"'"+sproc_path$+"SFHARDCOPYMATSTD.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'WO Hard Copy Mat Std'"

    gosub create_sproc_def

	sproc_vw_name$="SFHARDCOPYSUBSTD"
	sqlprep$="CREATE PROCEDURE SFHARDCOPYSUBSTD "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, WO_LOCATION CHAR(2) IN, WO_NO CHAR(7) IN, BARISTA_WD VARCHAR(1) IN, MASKS VARCHAR(1) IN, "
	sqlprep$=sqlprep$+"REPORT_TYPE CHAR(1) IN, PRINT_COSTS CHAR(1) IN, "
    sqlprep$=sqlprep$+"STATUS_REQ VARCHAR(10) IN, STATUS_PO VARCHAR(10) IN, STATUS_RCPT VARCHAR(10) IN, STATUS_NONE VARCHAR(10) IN) "
    sqlprep$=sqlprep$+"'"+sproc_path$+"SFHARDCOPYSUBSTD.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'WO Hard Copy Sub Std'"

    gosub create_sproc_def

	sproc_vw_name$="SFHARDCOPYCOSTSUM"
	sqlprep$="CREATE PROCEDURE SFHARDCOPYCOSTSUM "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, WO_LOCATION CHAR(2) IN, WO_NO CHAR(7) IN, BARISTA_WD VARCHAR(1) IN, "
	sqlprep$=sqlprep$+"MASKS VARCHAR(1) IN, PROD_QTY CHAR(10) IN, PRINT_COSTS CHAR(1) IN) "
    sqlprep$=sqlprep$+"'"+sproc_path$+"SFHARDCOPYCOSTSUM.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'WO Hard Copy Cost Sum'"

    gosub create_sproc_def

	sproc_vw_name$="SFHARDCOPYTRANS"
	sqlprep$="CREATE PROCEDURE SFHARDCOPYTRANS "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, WO_LOCATION CHAR(2) IN, WO_NO CHAR(7) IN, BARISTA_WD VARCHAR(1) IN, "
	sqlprep$=sqlprep$+"MASKS VARCHAR(1) IN, TRANS_DATEFROM CHAR(10) IN, TRANS_DATETHRU CHAR(10) IN, TRANSTYPE VARCHAR(3) IN, "
	sqlprep$=sqlprep$+"SF_PREVPER_ENDDATE CHAR(8) IN, PRINT_COSTS CHAR(1) IN) "	
    sqlprep$=sqlprep$+"'"+sproc_path$+"SFHARDCOPYTRANS.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'WO Hard Copy Transactions'"

    gosub create_sproc_def
			
	sproc_vw_name$="SFHARDCOPYFGLS"
	sqlprep$="CREATE PROCEDURE SFHARDCOPYFGLS "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, WO_LOCATION CHAR(2) IN, WO_NO CHAR(7) IN, BARISTA_WD VARCHAR(1) IN, "
	sqlprep$=sqlprep$+"MASKS VARCHAR(1) IN, MAST_CLS_INP_QTY_STR VARCHAR(1) IN, PRINT_COSTS CHAR(1) IN) "	
    sqlprep$=sqlprep$+"'"+sproc_path$+"SFHARDCOPYFGLS.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'WO Hard Copy Finished Good LS'"

    gosub create_sproc_def

    sproc_vw_name$="VENDORDETAIL_HIST"
	sqlprep$="CREATE PROCEDURE VENDORDETAIL_HIST "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, VENDOR_ID CHAR(6) IN, "
    sqlprep$=sqlprep$+"BARISTA_WD VARCHAR(50) IN, MASKS VARCHAR(1) IN) "
    sqlprep$=sqlprep$+"'"+sproc_path$+"VENDORDETAIL_HIST.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'Vendor Detail History'"

    gosub create_sproc_def

    sproc_vw_name$="CUST_STATEMENTS"
	sqlprep$="CREATE PROCEDURE CUST_STATEMENTS "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, STATEMENT_DATE CHAR(8) IN, CUSTOMER_ID CHAR(6) IN, "
    sqlprep$=sqlprep$+"AGE_BASIS CHAR(1) IN, AMT_MASK CHAR(20) IN, CUST_MASK CHAR(20) IN, CUST_SIZE CHAR(1) IN, PERIOD_DATES CHAR(40) IN, "
    sqlprep$=sqlprep$+"BARISTA_WD VARCHAR(50) IN) "
    sqlprep$=sqlprep$+"'"+sproc_path$+"CUSTSTATEMENTS.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'Customer statements'"

    gosub create_sproc_def

    sproc_vw_name$="SIMPLE_INVOICE"
	sqlprep$="CREATE PROCEDURE SIMPLE_INVOICE "
    sqlprep$=sqlprep$+"(FIRM_ID VARCHAR(2) IN, AMT_MASK VARCHAR(20) IN, CUST_MASK VARCHAR(20) IN, "
    sqlprep$=sqlprep$+"CUST_SIZE VARCHAR(1) IN, CUSTOMER_ID VARCHAR(6) IN, TERMS_CD VARCHAR(2) IN, UNIT_MASK VARCHAR(20) IN, AR_INV_NO VARCHAR(7) IN, "
    sqlprep$=sqlprep$+"BARISTA_WD VARCHAR(50) IN) "
    sqlprep$=sqlprep$+"'"+sproc_path$+"SIMPLE_INVOICE.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'AR Simple Invoice'"

    gosub create_sproc_def

    sproc_vw_name$="SIMPLE_INVOICE_DTL"
	sqlprep$="CREATE PROCEDURE SIMPLE_INVOICE_DTL"
    sqlprep$=sqlprep$+"(FIRM_ID VARCHAR(2) IN, AR_INV_NO VARCHAR(7) IN, AMT_MASK VARCHAR(20) IN, UNIT_MASK VARCHAR(20) IN, BARISTA_WD VARCHAR(50) IN) "
    sqlprep$=sqlprep$+"'"+sproc_path$+"SIMPLE_INVOICE_DTL.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'AR Simple Invoice Detail'"

    gosub create_sproc_def    
	
	rem --- APCHECKS_MAIN (main jasper to drive the sub-reports from)
    sproc_vw_name$="APCHECKS_MAIN"
	sqlprep$="CREATE PROCEDURE APCHECKS_MAIN "
	sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, BARISTA_WD VARCHAR(50) IN, AP_TYPE CHAR(2) IN) "	
    sqlprep$=sqlprep$+"'"+sproc_path$+"APCHECKS_MAIN.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'AP Checks'"

    gosub create_sproc_def

	rem --- APCHECKS_CHECK (The check itself)
    sproc_vw_name$="APCHECKS_CHECK"
	sqlprep$="CREATE PROCEDURE APCHECKS_CHECK "
	sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, BARISTA_WD VARCHAR(50) IN, CHECK_NUM CHAR(7) IN, "
	sqlprep$=sqlprep$+"CURR_PAGE CHAR(3) IN, AP_TYPE CHAR(2) IN, VENDOR_ID CHAR(6) IN, "
	sqlprep$=sqlprep$+"AP_ADDRESS1_NAME VARCHAR(35) IN, AP_ADDRESS2 VARCHAR(35) IN, AP_ADDRESS3 VARCHAR(35) IN, "
	sqlprep$=sqlprep$+"AP_ADDRESS4 VARCHAR(35) IN, LOGO_FILE VARCHAR(35) IN, "
	sqlprep$=sqlprep$+"VEND_NAME VARCHAR(35) IN, VEND_ADDR1 VARCHAR(35) IN, "
	sqlprep$=sqlprep$+"VEND_ADDR2 VARCHAR(35) IN, VEND_ADDR3 VARCHAR(35) IN, "	
	sqlprep$=sqlprep$+"VEND_MASK VARCHAR(20) IN, GL_ACCT_MASK VARCHAR(20) IN, "
	sqlprep$=sqlprep$+"CHECK_AMT_MASK VARCHAR(20) IN) "	
    sqlprep$=sqlprep$+"'"+sproc_path$+"APCHECKS_CHECK.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'AP Checks'"

    gosub create_sproc_def
	
	rem --- APCHECKS_STUB (Vendor and Accounting Stubs)
    sproc_vw_name$="APCHECKS_STUB"
	sqlprep$="CREATE PROCEDURE APCHECKS_STUB "
	sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, BARISTA_WD VARCHAR(50) IN, CHECK_NUM CHAR(7) IN, "
	sqlprep$=sqlprep$+"CURR_PAGE CHAR(3) IN, AP_TYPE CHAR(2) IN, VENDOR_ID CHAR(6) IN, STUB_TYPE CHAR(1) IN, "
	sqlprep$=sqlprep$+"AP_ADDRESS1_NAME VARCHAR(35) IN, AP_ADDRESS2 VARCHAR(35) IN, AP_ADDRESS3 VARCHAR(35) IN, "
	sqlprep$=sqlprep$+"AP_ADDRESS4 VARCHAR(35) IN, AP_ADDR3_STUB VARCHAR(35) IN, LOGO_FILE VARCHAR(35) IN, "
	sqlprep$=sqlprep$+"VEND_NAME VARCHAR(35) IN, VEND_ADDR1 VARCHAR(35) IN, "
	sqlprep$=sqlprep$+"VEND_ADDR2 VARCHAR(35) IN, VEND_ADDR3 VARCHAR(35) IN, "	
	sqlprep$=sqlprep$+"VEND_MASK VARCHAR(20) IN, GL_ACCT_MASK VARCHAR(20) IN, "
	sqlprep$=sqlprep$+"STUB_AMT_MASK VARCHAR(20) IN, "
    sqlprep$=sqlprep$+"MAX_STUB_ROWS VARCHAR(2) IN) "	
	sqlprep$=sqlprep$+"'"+sproc_path$+"APCHECKS_STUB.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'AP Checks'"

    gosub create_sproc_def

	rem --- OPINVOICE_HDR
    sproc_vw_name$="OPINVOICE_HDR"
	sqlprep$="CREATE PROCEDURE OPINVOICE_HDR "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, AR_TYPE CHAR(2) IN, CUSTOMER_ID CHAR(6) IN, ORDER_NO CHAR(7) IN, AR_INV_NO CHAR(7) IN, "
	sqlprep$=sqlprep$+"CUST_MASK CHAR(20) IN, CUST_SIZE CHAR(1) IN, "
	sqlprep$=sqlprep$+"BARISTA_WD VARCHAR(50) IN)"
    sqlprep$=sqlprep$+"'"+sproc_path$+"OPINVOICE_HDR.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'OP Invoice Header'"

    gosub create_sproc_def

	rem --- OP_HIST_INVOICE_HDR
    sproc_vw_name$="OP_HIST_INVOICE_HDR"
	sqlprep$="CREATE PROCEDURE OP_HIST_INVOICE_HDR "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, AR_TYPE CHAR(2) IN, CUSTOMER_ID CHAR(6) IN, ORDER_NO CHAR(7) IN, AR_INV_NO CHAR(7) IN, "
	sqlprep$=sqlprep$+"CUST_MASK CHAR(20) IN, CUST_SIZE CHAR(1) IN, "
	sqlprep$=sqlprep$+"BARISTA_WD VARCHAR(50) IN)"
    sqlprep$=sqlprep$+"'"+sproc_path$+"OP_HIST_INVOICE_HDR.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'OP Invoice Header'"

    gosub create_sproc_def

	rem --- OPINVOICE_DET	
    sproc_vw_name$="OPINVOICE_DET"
	sqlprep$="CREATE PROCEDURE OPINVOICE_DET "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, AR_TYPE CHAR(2) IN, CUSTOMER_ID CHAR(6) IN, ORDER_NO CHAR(7) IN, AR_INV_NO CHAR(7) IN, "
	sqlprep$=sqlprep$+"QTY_MASK CHAR(20) IN, AMT_MASK CHAR(20) IN, PRICE_MASK CHAR(20) IN, EXT_MASK CHAR(20) IN, "
	sqlprep$=sqlprep$+"BARISTA_WD VARCHAR(50) IN)"	
    sqlprep$=sqlprep$+"'"+sproc_path$+"OPINVOICE_DET.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'OP Invoice Detail'"

    gosub create_sproc_def

	rem --- OP_HIST_INVOICE_DET	
    sproc_vw_name$="OP_HIST_INVOICE_DET"
	sqlprep$="CREATE PROCEDURE OP_HIST_INVOICE_DET "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, AR_TYPE CHAR(2) IN, CUSTOMER_ID CHAR(6) IN, ORDER_NO CHAR(7) IN, AR_INV_NO CHAR(7) IN, "
	sqlprep$=sqlprep$+"QTY_MASK CHAR(20) IN, AMT_MASK CHAR(20) IN, PRICE_MASK CHAR(20) IN, EXT_MASK CHAR(20) IN, "
	sqlprep$=sqlprep$+"BARISTA_WD VARCHAR(50) IN)"	
    sqlprep$=sqlprep$+"'"+sproc_path$+"OP_HIST_INVOICE_DET.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'OP Invoice Detail'"

    gosub create_sproc_def

	rem --- OPINVOICE_DET_LOTSER
    sproc_vw_name$="OPINVOICE_DET_LOTSER"
	sqlprep$="CREATE PROCEDURE OPINVOICE_DET_LOTSER "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, AR_TYPE CHAR(2) IN, CUSTOMER_ID CHAR(6) IN, ORDER_NO CHAR(7) IN, AR_INV_NO CHAR(7) IN, "
	sqlprep$=sqlprep$+"INTERNAL_SEQ_NO CHAR(12) IN, OPE11_QTY_SHIPPED CHAR(20) IN, QTY_MASK CHAR(20) IN, "
	sqlprep$=sqlprep$+"IVS_LOTSER_FLAG CHAR(1) IN, BARISTA_WD VARCHAR(50) IN)"	
    sqlprep$=sqlprep$+"'"+sproc_path$+"OPINVOICE_DET_LOTSER.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'OP Invoice Detail'"

    gosub create_sproc_def

	rem --- OP_HIST_INVOICE_DET_LOTSER
    sproc_vw_name$="OP_HIST_INVOICE_DET_LOTSER"
	sqlprep$="CREATE PROCEDURE OP_HIST_INVOICE_DET_LOTSER "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, AR_TYPE CHAR(2) IN, CUSTOMER_ID CHAR(6) IN, ORDER_NO CHAR(7) IN, AR_INV_NO CHAR(7) IN, "
	sqlprep$=sqlprep$+"INTERNAL_SEQ_NO CHAR(12) IN, OPE11_QTY_SHIPPED CHAR(20) IN, QTY_MASK CHAR(20) IN, "
	sqlprep$=sqlprep$+"IVS_LOTSER_FLAG CHAR(1) IN, BARISTA_WD VARCHAR(50) IN)"	
    sqlprep$=sqlprep$+"'"+sproc_path$+"OP_HIST_INVOICE_DET_LOTSER.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'OP Invoice Detail'"

    gosub create_sproc_def

	rem --- PURCHASEORDER_HDR
    sproc_vw_name$="PURCHASEORDER_HDR"
	sqlprep$="CREATE PROCEDURE PURCHASEORDER_HDR "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, PO_NO CHAR(7) IN, VEND_MASK CHAR(20) IN, DFLT_MSG CHAR(3) IN, BARISTA_WD VARCHAR(50) IN)"	
    sqlprep$=sqlprep$+"'"+sproc_path$+"PURCHASEORDER_HDR.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'Purchase Order Header'"

    gosub create_sproc_def

	rem --- PURCHASEORDER_DET
    sproc_vw_name$="PURCHASEORDER_DET"
	sqlprep$="CREATE PROCEDURE PURCHASEORDER_DET "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, PO_NO CHAR(7) IN, VENDOR_ID CHAR(6) IN, IV_PRECISION CHAR(1) IN, PRT_VDR_ITEM CHAR(1) IN, "
	sqlprep$=sqlprep$+"HDR_MSG_CODE CHAR(3) IN, HDR_SHIP_FROM CHAR(2) IN, QTY_MASK CHAR(20) IN, COST_MASK CHAR(20) IN, EXT_MASK CHAR(20) IN, "
	sqlprep$=sqlprep$+"NOF_PROMPT CHAR(50) IN, VEND_ITEM_PROMPT CHAR(50) IN, PROMISE_PROMPT CHAR(50) IN, NOT_B4_PROMPT CHAR(50) IN, "
    sqlprep$=sqlprep$+"SHIPFROM_PROMPT CHAR(50) IN, BARISTA_WD VARCHAR(50) IN)"	
    sqlprep$=sqlprep$+"'"+sproc_path$+"PURCHASEORDER_DET.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'Purchase Order Detail'"

    gosub create_sproc_def

	rem --- OPPICKLIST_HDR
    sproc_vw_name$="OPPICKLIST_HDR"
	sqlprep$="CREATE PROCEDURE OPPICKLIST_HDR "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, AR_TYPE CHAR(2) IN, CUSTOMER_ID CHAR(6) IN, ORDER_NO CHAR(7) IN, AR_INV_NO CHAR(7) IN, "
	sqlprep$=sqlprep$+"CUST_MASK CHAR(20) IN, CUST_SIZE CHAR(1) IN, "
	sqlprep$=sqlprep$+"BARISTA_WD VARCHAR(50) IN)"
    sqlprep$=sqlprep$+"'"+sproc_path$+"OPPICKLIST_HDR.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'OP Pick List Header'"

    gosub create_sproc_def

	rem --- OPPICKLIST_DET
    sproc_vw_name$="OPPICKLIST_DET"
	sqlprep$="CREATE PROCEDURE OPPICKLIST_DET "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, AR_TYPE CHAR(2) IN, CUSTOMER_ID CHAR(6) IN, ORDER_NO CHAR(7) IN, AR_INV_NO CHAR(7) IN, "
	sqlprep$=sqlprep$+"QTY_MASK CHAR(20) IN, PRICE_MASK CHAR(20) IN, SELECTED_WHSE CHAR(2) IN, PICK_OR_QUOTE CHAR(1) IN, "
    sqlprep$=sqlprep$+"REPRINT CHAR(1) IN, PRINT_PRICES CHAR(1) IN, MULT_WH CHAR(1) IN, WO_INFO_LABELS CHAR(1) IN, "
	sqlprep$=sqlprep$+"BARISTA_WD VARCHAR(50) IN)"
    sqlprep$=sqlprep$+"'"+sproc_path$+"OPPICKLIST_DET.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'OP Pick List Detail'"

    gosub create_sproc_def

	rem --- OPPICKLIST_DET_LOTSER
    sproc_vw_name$="OPPICKLIST_DET_LOTSER"
	sqlprep$="CREATE PROCEDURE OPPICKLIST_DET_LOTSER "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, AR_TYPE CHAR(2) IN, CUSTOMER_ID CHAR(6) IN, ORDER_NO CHAR(7) IN, AR_INV_NO CHAR(7) IN, "
	sqlprep$=sqlprep$+"INTERNAL_SEQ_NO CHAR(12) IN, OPE11_QTY_SHIPPED CHAR(20) IN, QTY_MASK CHAR(20) IN, "
	sqlprep$=sqlprep$+"IVS_LOTSER_FLAG CHAR(1) IN, BARISTA_WD VARCHAR(50) IN)"	
    sqlprep$=sqlprep$+"'"+sproc_path$+"OPPICKLIST_DET_LOTSER.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'OP Pick List Lot/Serial'"

    gosub create_sproc_def

	rem --- PURCHASEREQUISITION_HDR
    sproc_vw_name$="PURCHASEREQUISITION_HDR"
	sqlprep$="CREATE PROCEDURE PURCHASEREQUISITION_HDR "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, REQ_NO CHAR(7) IN, VEND_MASK CHAR(20) IN, DFLT_MSG CHAR(3) IN, BARISTA_WD VARCHAR(50) IN)"	
    sqlprep$=sqlprep$+"'"+sproc_path$+"PURCHASEREQUISITION_HDR.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'Purchase Requisition Header'"

    gosub create_sproc_def

	rem --- PURCHASEREQUISITION_DET
    sproc_vw_name$="PURCHASEREQUISITION_DET"
	sqlprep$="CREATE PROCEDURE PURCHASEREQUISITION_DET "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, REQ_NO CHAR(7) IN, VENDOR_ID CHAR(6) IN, IV_PRECISION CHAR(1) IN, PRT_VDR_ITEM CHAR(1) IN, "
	sqlprep$=sqlprep$+"HDR_MSG_CODE CHAR(3) IN, HDR_SHIP_FROM CHAR(2) IN, QTY_MASK CHAR(20) IN, COST_MASK CHAR(20) IN, EXT_MASK CHAR(20) IN, "
	sqlprep$=sqlprep$+"NOF_PROMPT CHAR(50) IN, VEND_ITEM_PROMPT CHAR(50) IN, PROMISE_PROMPT CHAR(50) IN, NOT_B4_PROMPT CHAR(50) IN, "
    sqlprep$=sqlprep$+"SHIPFROM_PROMPT CHAR(50) IN, BARISTA_WD VARCHAR(50) IN)"	
    sqlprep$=sqlprep$+"'"+sproc_path$+"PURCHASEREQUISITION_DET.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'Purchase Requisition Detail'"

    gosub create_sproc_def

	rem --- SFPICKLIST
    sproc_vw_name$="SFPICKLIST"
	sqlprep$="CREATE PROCEDURE SFPICKLIST "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, WO_LOCATION CHAR(2) IN, WO_NO CHAR(7) IN, CUST_MASK CHAR(20) IN, QTY_MASK CHAR(20) IN, "
	sqlprep$=sqlprep$+"BOM_INTERFACE CHAR(1) IN, KEY_NUM CHAR(20) IN, IV_PRECISION CHAR(1) IN, IV_LOTSER CHAR(1) IN, "
    sqlprep$=sqlprep$+"INFO_31 CHAR(20) IN, BARISTA_WD VARCHAR(50) IN)"	
    sqlprep$=sqlprep$+"'"+sproc_path$+"SFPICKLIST.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'Shop Floor Pick List'"

    gosub create_sproc_def

rem ==============================================
rem --- Dashboard SPROC definitions
rem ==============================================
    
    rem --- Dashboard: ARAGINGTOT_BAR
    sproc_vw_name$="ARAGINGTOT_BAR"
    sqlprep$="CREATE PROCEDURE ARAGINGTOT_BAR "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, "
    sqlprep$=sqlprep$+"MASKS VARCHAR(1) IN, BARISTA_WD VARCHAR(50) IN)" 
    sqlprep$=sqlprep$+"'"+sproc_path$+"ARAGINGTOT_BAR.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'Company Totals For Last AR Agings - Bar Widget'"

    gosub create_sproc_def      
    
    rem --- Dashboard: ARAGING_BAR
    sproc_vw_name$="ARAGING_BAR"
    sqlprep$="CREATE PROCEDURE ARAGING_BAR "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, AGING_PERIOD CHAR(10) IN, NUM_TO_LIST VARCHAR(1) IN, "
    sqlprep$=sqlprep$+"MASKS VARCHAR(1) IN, BARISTA_WD VARCHAR(50) IN)" 
    sqlprep$=sqlprep$+"'"+sproc_path$+"ARAGING_BAR.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'Company Totals For Last AR Agings - Bar Widget'"

    gosub create_sproc_def      

	rem --- Dashboard: GLINCTOT_GRD
    sproc_vw_name$="GLINCTOT_GRD"
	sqlprep$="CREATE PROCEDURE GLINCTOT_GRD "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, INCLUDE_TYPE CHAR(1) IN, ACCT_TYPE VARCHAR(1) IN, DO_COA_JOIN CHAR(1) IN, "
	sqlprep$=sqlprep$+"MASKS VARCHAR(1) IN, BARISTA_WD VARCHAR(50) IN, "	
    sqlprep$=sqlprep$+"PROPS_NAME VARCHAR(16) IN, PROPS_PATH VARCHAR(50) IN, USER_LOCALE VARCHAR(2) IN)" 
    sqlprep$=sqlprep$+"'"+sproc_path$+"GLINCTOT_GRD.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'Dashboard GL Year Totals'"

    gosub create_sproc_def
	
	rem --- Dashboard: GLBNKBAL_BAR
    sproc_vw_name$="GLBNKBAL_BAR"
	sqlprep$="CREATE PROCEDURE GLBNKBAL_BAR "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, INCLUDE_TYPE CHAR(1) IN, "
	sqlprep$=sqlprep$+"MASKS VARCHAR(1) IN, BARISTA_WD VARCHAR(50) IN, "	
    sqlprep$=sqlprep$+"PROPS_NAME VARCHAR(16) IN, PROPS_PATH VARCHAR(50) IN, USER_LOCALE VARCHAR(2) IN)" 
    sqlprep$=sqlprep$+"'"+sproc_path$+"GLBNKBAL_BAR.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'Dashboard GL Bank Balances - Bar Widget'"

    gosub create_sproc_def
	
	rem --- Dashboard: GLBNKBAL_RNG
    sproc_vw_name$="GLBNKBAL_RNG"
	sqlprep$="CREATE PROCEDURE GLBNKBAL_RNG "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, INCLUDE_TYPE CHAR(1) IN, MIN_AMT INT(15) IN, "
	sqlprep$=sqlprep$+"MASKS VARCHAR(1) IN, BARISTA_WD VARCHAR(50) IN, "	
    sqlprep$=sqlprep$+"PROPS_NAME VARCHAR(16) IN, PROPS_PATH VARCHAR(50) IN, USER_LOCALE VARCHAR(2) IN)" 
    sqlprep$=sqlprep$+"'"+sproc_path$+"GLBNKBAL_RNG.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'Dashboard GL Bank Balances - Ring Widget'"

    gosub create_sproc_def	
	
	rem --- Dashboard: GLCMPINC_BAR
    sproc_vw_name$="GLCMPINC_BAR"
	sqlprep$="CREATE PROCEDURE GLCMPINC_BAR "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, INCLUDE_TYPE CHAR(1) IN, ACCT_TYPE VARCHAR(1) IN, DO_COA_JOIN CHAR(1) IN, "
	sqlprep$=sqlprep$+"MASKS VARCHAR(1) IN, BARISTA_WD VARCHAR(50) IN, PROPS_NAME VARCHAR(16) IN, PROPS_PATH VARCHAR(50) IN, "
    sqlprep$=sqlprep$+"USER_LOCALE VARCHAR(2) IN, SYSINFO_TPL VARCHAR("+str(len(sysinfo_template$))+") IN, SYSINFO VARCHAR("+str(len(sysinfo$))+") IN)"	
    sqlprep$=sqlprep$+"'"+sproc_path$+"GLCMPINC_BAR.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'Dashboard GL Income Comparison - Bar Widget'"

    gosub create_sproc_def		
	
	rem --- Dashboard: GLINCACCT_BAR
    sproc_vw_name$="GLINCACCT_BAR"
	sqlprep$="CREATE PROCEDURE GLINCACCT_BAR "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, YEAR CHAR(4) IN, PERIOD CHAR(2) IN, "
	sqlprep$=sqlprep$+"MASKS VARCHAR(1) IN, BARISTA_WD VARCHAR(50) IN, "	
    sqlprep$=sqlprep$+"PROPS_NAME VARCHAR(16) IN, PROPS_PATH VARCHAR(50) IN, USER_LOCALE VARCHAR(2) IN)" 
    sqlprep$=sqlprep$+"'"+sproc_path$+"GLINCACCT_BAR.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'Dashboard GL Income Account for Period - Bar Widget'"

    gosub create_sproc_def		
	
	rem --- Dashboard: GLACCTDET_GRD
    sproc_vw_name$="GLACCTDET_GRD"
	sqlprep$="CREATE PROCEDURE GLACCTDET_GRD "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, YEAR CHAR(4) IN, PERIOD CHAR(2) IN, ACCOUNT_ID CHAR(10) IN, "
	sqlprep$=sqlprep$+"MASKS VARCHAR(1) IN, BARISTA_WD VARCHAR(50) IN)"	
    sqlprep$=sqlprep$+"'"+sproc_path$+"GLACCTDET_GRD.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'Dashboard GL Income Account Detail - Grid Widget'"

    gosub create_sproc_def		
	
	rem --- Dashboard: GLEXPTOT_PIE
    sproc_vw_name$="GLEXPTOT_PIE"
	sqlprep$="CREATE PROCEDURE GLEXPTOT_PIE "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, INCLUDE_TYPE CHAR(1) IN, ACCT_TYPE VARCHAR(1) IN, DO_COA_JOIN CHAR(1) IN, "
	sqlprep$=sqlprep$+"MASKS VARCHAR(1) IN, BARISTA_WD VARCHAR(50) IN, "	
    sqlprep$=sqlprep$+"PROPS_NAME VARCHAR(16) IN, PROPS_PATH VARCHAR(50) IN, USER_LOCALE VARCHAR(2) IN)" 
    sqlprep$=sqlprep$+"'"+sproc_path$+"GLEXPTOT_PIE.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'Dashboard GL Expense Year Totals - Pie Widget'"

    gosub create_sproc_def		
		
	rem --- Dashboard: GLINCEXP_ARE
    sproc_vw_name$="GLINCEXP_ARE"
	sqlprep$="CREATE PROCEDURE GLINCEXP_ARE "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, INCLUDE_TYPE CHAR(1) IN, "
	sqlprep$=sqlprep$+"MASKS VARCHAR(1) IN, BARISTA_WD VARCHAR(50) IN, "	
    sqlprep$=sqlprep$+"PROPS_NAME VARCHAR(16) IN, PROPS_PATH VARCHAR(50) IN, USER_LOCALE VARCHAR(2) IN)" 
    sqlprep$=sqlprep$+"'"+sproc_path$+"GLINCEXP_ARE.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'Dashboard Compare GL Income to Expense - Area Widget'"

    gosub create_sproc_def	
	
	rem --- Dashboard: SATOPCST_BAR
    sproc_vw_name$="SATOPCST_BAR"
	sqlprep$="CREATE PROCEDURE SATOPCST_BAR "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, YEAR CHAR(4) IN, NUM_TO_LIST VARCHAR(1) IN, "
	sqlprep$=sqlprep$+"MASKS VARCHAR(1) IN, BARISTA_WD VARCHAR(50) IN)"	
    sqlprep$=sqlprep$+"'"+sproc_path$+"SATOPCST_BAR.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'Dashboard SA Top Customers by Sales - Bar Widget'"

    gosub create_sproc_def		
		
	rem --- Dashboard: SATOPCST_SBR
    sproc_vw_name$="SATOPCST_SBR"
	sqlprep$="CREATE PROCEDURE SATOPCST_SBR "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, INCLUDE_TYPE CHAR(1) IN, YEAR CHAR(4) IN, NUM_TO_LIST VARCHAR(1) IN, "
	sqlprep$=sqlprep$+"MASKS VARCHAR(1) IN, BARISTA_WD VARCHAR(50) IN)"	
    sqlprep$=sqlprep$+"'"+sproc_path$+"SATOPCST_SBR.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'Dashboard SA Top Customers by Sales - Stacked Bar Widget'"

    gosub create_sproc_def		
		
	rem --- Dashboard: SAREPTOT_BAR
    sproc_vw_name$="SAREPTOT_BAR"
	sqlprep$="CREATE PROCEDURE SAREPTOT_BAR "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, YEAR CHAR(4) IN, NUM_TO_LIST VARCHAR(1) IN, "
    sqlprep$=sqlprep$+"MASKS VARCHAR(1) IN, BARISTA_WD VARCHAR(50) IN)"   
    sqlprep$=sqlprep$+"'"+sproc_path$+"SAREPTOT_BAR.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'Dashboard SA Sales by Salesrep - Stacked Bar Widget'"

    gosub create_sproc_def		
		
	rem --- Dashboard: SATOPREP_LIN
    sproc_vw_name$="SATOPREP_LIN"
	sqlprep$="CREATE PROCEDURE SATOPREP_LIN "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, INCLUDE_TYPE CHAR(1) IN, YEAR CHAR(4) IN, "
	sqlprep$=sqlprep$+"NUM_TO_LIST VARCHAR(1) IN, MASKS VARCHAR(1) IN, BARISTA_WD VARCHAR(50) IN)"	
    sqlprep$=sqlprep$+"'"+sproc_path$+"SATOPREP_LIN.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'Dashboard SA Top Salesreps - Line Widget'"

    gosub create_sproc_def	
	
	rem --- Dashboard: SATOPREP_SAR
    sproc_vw_name$="SATOPREP_SAR"
	sqlprep$="CREATE PROCEDURE SATOPREP_SAR "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, INCLUDE_TYPE CHAR(1) IN, YEAR CHAR(4) IN, "
	sqlprep$=sqlprep$+"NUM_TO_LIST VARCHAR(1) IN, MASKS VARCHAR(1) IN, BARISTA_WD VARCHAR(50) IN)"	
    sqlprep$=sqlprep$+"'"+sproc_path$+"SATOPREP_SAR.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'Dashboard SA Top Salesreps - Stacked Area Widget'"

    gosub create_sproc_def		
	
	rem --- Dashboard: SATOPREP_PIE
    sproc_vw_name$="SATOPREP_PIE"
	sqlprep$="CREATE PROCEDURE SATOPREP_PIE "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, YEAR CHAR(4) IN, NUM_TO_LIST VARCHAR(1) IN, "
	sqlprep$=sqlprep$+"MASKS VARCHAR(1) IN, BARISTA_WD VARCHAR(50) IN)"	
    sqlprep$=sqlprep$+"'"+sproc_path$+"SATOPREP_PIE.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'Dashboard SA Top Salesreps - Pie Widget'"

    gosub create_sproc_def		
		
	rem --- Dashboard: SATOPREP_SBR
    sproc_vw_name$="SATOPREP_SBR"
	sqlprep$="CREATE PROCEDURE SATOPREP_SBR "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, INCLUDE_TYPE CHAR(1) IN, YEAR CHAR(4) IN, NUM_TO_LIST VARCHAR(1) IN, "
	sqlprep$=sqlprep$+"MASKS VARCHAR(1) IN, BARISTA_WD VARCHAR(50) IN)"	
    sqlprep$=sqlprep$+"'"+sproc_path$+"SATOPREP_SBR.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'Dashboard SA Top Salesreps - Stacked Bar Widget'"

    gosub create_sproc_def		

    rem --- Dashboard: SATOPREPPROD_GRD
    sproc_vw_name$="SATOPREPPROD_GRD"
    sqlprep$="CREATE PROCEDURE SATOPREPPROD_GRD "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, YEAR CHAR(4) IN, SLSPSN_DESC CHAR(20) IN, "
    sqlprep$=sqlprep$+"MASKS VARCHAR(1) IN, BARISTA_WD VARCHAR(50) IN, UNSPECIFIED_PROD_TYPE VARCHAR(50) IN)"   
    sqlprep$=sqlprep$+"'"+sproc_path$+"SATOPREPPROD_GRD.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'Dashboard SA Salesrep Sales by Product Type - Grid Widget'"

    gosub create_sproc_def      
		
	rem --- Dashboard: SFWOSSOS_GRD
    sproc_vw_name$="SFWOSSOS_GRD"
	sqlprep$="CREATE PROCEDURE SFWOSSOS_GRD "
    sqlprep$=sqlprep$+"(FIRM_ID CHAR(2) IN, WO_INCLUDE_TYPE CHAR(1) IN, SO_INCLUDE_TYPE CHAR(1) IN, "
	sqlprep$=sqlprep$+"MASKS VARCHAR(1) IN, BARISTA_WD VARCHAR(50) IN)"	
    sqlprep$=sqlprep$+"'"+sproc_path$+"SFWOSSOS_GRD.prc' '"+barista_cfg_path$+"barista.cfg' "
    sqlprep$=sqlprep$+"RESULT_SET "
    sqlprep$=sqlprep$+"{_begin_}{_end_} 'WOs linked to SOs - Grid Widget'"

    gosub create_sproc_def		
	
	
rem --- Done with SPROCs. Now do VIEWs
rem --- As of 10/2013, no VIEWs are needed


done:

sqlclose(chan)

update_status:rem --- Update AutoLaunch Status

    extractrecord(ads_autolaunch,key="BUILDSPROC")ads_autolaunch$; rem Advisory Locking
    ads_autolaunch.process_status$="C"
    ads_autolaunch.trans_date$=date(0:"%Yl%Mz%Dz")
    ads_autolaunch.trans_time$=date(0:"%Hz%mz%sz")
    ads_autolaunch$=field(ads_autolaunch$)

    rem --- Use bax_mount_sel to get rdMountVect! containing hashes of mounted system and backup directory info for use in bax_xmlrec_exp.bbj
    dev_mode$=""
    call stbl("+DIR_SYP")+"bax_mount_sel.bbj",rdMountVect!,table_chans$[all],dev_mode$

    rem --- Update admin xml file
    if rdMountVect!<>null() and rdMountVect!.size()>0
        exp_action$="C"
        exp_add_only$=""
        call stbl("+DIR_SYP")+"bax_xmlrec_exp.bbj","ADS_AUTOLAUNCH",ads_autolaunch$,exp_action$,exp_add_only$,dev_mode$,rdMountVect!,table_chans$[all]
    endif

    writerecord(ads_autolaunch)ads_autolaunch$

goto std_exit

create_sproc_def:rem --- Create SPROC definitions

	errored_sqlverb$=""
	prep_err=0
	exec_err=0
	
    SQLPREP(chan,err=err_sqlprep) sqlprep$
    SQLEXEC(chan,err=err_sqlexec)
    curr_rec=curr_rec+1
    if mod(curr_rec,milestone)=0
		progress!.setValue("+process_task",task_val$+"^U^"+str(curr_rec)+"^")
    endif
	
	rem Conditionally end processing if PREP or EXEC have errors
	if errored_sqlverb$<>""	
		err_sqlprep:	
			prep_err=1
			errored_sqlverb$="SQLPREP()"

		err_sqlexec:
			if errored_sqlverb$=""
				exec_err=1
				if abort_on_exec_err then errored_sqlverb$="SQLEXEC()"
			endif
			
		if prep_err OR (exec_err AND abort_on_exec_err)		   
			error_text$="Unknown error message"
			error_text$=SQLERR(chan,err=*next)
			
			msg_id$="AD_SQL_CREATE_ERROR"
			dim msg_tokens$[4]
				msg_tokens$[1]=errored_sqlverb$
				msg_tokens$[2]=sql_action$
				msg_tokens$[3]=sproc_vw_name$
				msg_tokens$[4]=error_text$			
			gosub disp_message
			goto std_exit
		endif
	endif

return

open_tables:rem -----<Open Tables

    call stbl("+DIR_SYP")+"bac_open_tables.bbj",
:       open_beg,
:       open_end,
:       open_tables$[all],
:       open_opts$[all],
:       open_chans$[all],
:       open_tpls$[all],
:       table_chans$[all],
:       open_batch,
:       open_status$

    if open_status$<>""
        msg_id$="ENTRY_OPEN_ERROR"
        dim msg_tokens$[1]
            msg_tokens$[1]=open_status$
        gosub disp_message
        goto std_exit
    endif

    return

disp_message:rem --- Display Message Dialog

    call stbl("+DIR_SYP")+"bac_message.bbj",msg_id$,msg_tokens$[all],msg_opt$,table_chans$[all]

    return

rem #include std_error.src

std_error: rem --- Standard error handler (11Oct2017)

    if tcb(19)>0
        rem --- Escape handler
        if and(chr(tcb(19)),$08$)=$08$
            release
        else
            setesc std_error
            return
        endif
    endif

    if err=0   
        rem --- Get tcb(12) and tcb(10) to send into bac_error
        lock_byte=tcb(10)
        lock_chan=tcb(12)  
    endif

    rd_err_text$="",err_num=err
    if tcb(2)=0 and tcb(5) then rd_err_text$=pgm(tcb(5),tcb(13),err=*next)
    if err_num=252 then
        E!=BBjAPI().getLastBBjException()
        rd_err_text$=rd_err_text$+$0A$+E!.getClass().getName()
        if E!.getMessage()<>null() then rd_err_text$=rd_err_text$+": "+E!.getMessage()
    endif
    call stbl("+DIR_SYP")+"bac_error.bbj",pgm(-2),str(tcb(5)),str(err_num),rd_err_text$,rd_err_act$,lock_byte,lock_chan
    if pos("ESCAPE"=rd_err_act$) seterr 0; setesc 0
    if pos("RETRY"=rd_err_act$) retry
    if pgm(-1)<>pgm(-2) status=999; exit 
    release


rem #endinclude std_error.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    if errored_sqlverb$="" 
		if pos("SPROC_UPDT"=sysinfo.menu_option_id$)<>0
			msg_id$="AD_SPROC_UPDT"
			gosub disp_message;rem only display message if running stand-alone
		endif
    endif
    
    progress!.setValue("+process_task",task_val$+"^D^")
    run stbl("+DIR_SYP",err=*next)+"bas_process_end.bbj",err=*next
	release

rem #endinclude std_end.src

    end

