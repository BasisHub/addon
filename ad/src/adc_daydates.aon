rem adc - Days Between Dates/New Date From Date And # Of Days
rem Program adc_daydates v8.0.0 21Mar2006 (syc_ca)
rem Created by adx_progconv.bbx v1.0.0 (03/21/2006 03:20:01)

rem  +-----------------------------------------+
rem  | AddonSoftware Version 8.0.0 - 01Oct2006 |
rem  |  Copyright BASIS International Ltd.  All Rights Reserved.
rem  |          All Rights Reserved            |
rem  +-----------------------------------------+

rem --- Returns number of days between BEGDATE$ and ENDDATE$ if
rem --- both are passed -OR- returns ENDDATE$ equal to BEGDATE$
rem --- plus DIFFERENCE if both are passed

rem --- BEGDATE$  : Starting date YYYYMMDD (Input)
rem --- ENDDATE$  : Ending date YYYYMMDD (Input)
rem ---             or BEGDATE$ + DIFFERENCE (Returned)
rem --- DIFFERENCE: Number of days to add to BEGDATE$ (Input)
rem ---             or number of days between BEGDATE$/ENDDATE$ (Returned)

    seterr std_error
    setesc std_error
    enter begdate$,enddate$,difference

rem --- Initializations

    days=difference
    days=int(days)
    begy=num(begdate$(1,4),err=done)
    begm=num(begdate$(5,2),err=done)
    begd=num(begdate$(7,2),err=done)
    begdate=jul(begy,begm,begd,err=done)

rem --- Calculating difference or end date?

    if days<>0 goto enddate
    if cvs(enddate$,2)="" goto enddate

rem --- Calculate difference between passed dates

    endy=num(enddate$(1,4),err=done)
    endm=num(enddate$(5,2),err=done)
    endd=num(enddate$(7,2),err=done)
    enddate=jul(endy,endm,endd,err=done)
    difference=enddate-begdate
    goto done

enddate: rem --- Calculate new ending date

    enddate=begdate+difference
    enddate$=date(enddate:"%Y%Mz%Dz")

done: rem --- All done

    goto std_exit

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_SYP",err=std_error_exit)
    call pgmdir$+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5)),
:                                str(err),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry

std_error_exit:
    
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
    
std_error_release:

    status=999
    if pgm(-1)<>pgm(-2) exit 
    release

rem #endinclude std_error.src

rem #include std_exit.src

std_exit: rem --- Standard called program exit (01Mar2006)

    exit
rem #endinclude std_exit.src

    end
