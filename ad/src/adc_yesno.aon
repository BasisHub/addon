rem adc - Yes/No Update Prompt
rem Program adc_yesno v8.0.0 20Mar2006 (syc_yn)
rem Created by adx_progconv.bbx v1.0.0 (03/20/2006 03:58:55)

rem  +-----------------------------------------+
rem  | AddonSoftware Version 8.0.0 - 01Oct2006 |
rem  |  Copyright BASIS International Ltd.  All Rights Reserved.
rem  |          All Rights Reserved            |
rem  +-----------------------------------------+

rem --- RESERVED : Reserved for future use
rem --- PROMPT$  : Prompt to be displayed (Input)
rem --- PROMPT   : Type of Prompt (Input)
rem ---          : 0   = Prompt for YES/NO - default NO
rem ---          : 1/3 = Prompt for Y/N - default N
rem ---          : 2/4 = Prompt for Y/N - default Y
rem --- RESPONSE$: User input (Returned)
rem ---          : YES/NO for when PROMPT=0
rem ---          : Y/N for all other prompts
rem --- FKEY     : Function key value (Returned)
rem ---          : 0=Y/N (or YES/NO)
rem ---          : 4=CANCEL


    seterr std_error
    setesc std_error
    enter reserved,prompt$,prompt,response$,fkey

rem --- Retrieve the program path

    pgmdir$=stbl("+DIR_PGM",err=*next)

rem --- Retrieve sysinfo data

    sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=*next)
    title$=cvs(sysinfo.task_desc$,2)

rem --- Initializations

    yes=6
    no=7
    cancel=2
    answer=cancel
    buttons=3
    icon=32
    default=0
    if prompt=0 or prompt=1 or prompt=3 default=256
    message$=prompt$
    if message$(len(message$),1)<>"?" message$=message$+"?"
    response$="NO"
    if prompt response$="N"
    fkey=4

rem --- Use MSGBOX to query the user

    answer=msgbox(message$,buttons+icon+default,title$,err=*next)

rem --- Set return values based on answer received 

    switch answer
           case yes
                response$="YES"
                fkey=0
                if prompt response$="Y"
           break
           case no
                response$="NO"
                fkey=0
                if prompt response$="N"
           break
           case cancel
                response$="NO"
                fkey=4
                if prompt response$="N"
           break
    swend

rem --- All done

    goto std_exit

rem #include std_error.src

std_error: rem --- Standard error handler (18Nov2014)

    if tcb(19)>0
        rem --- Escape handler
        if and(chr(tcb(19)),$08$)=$08$
            release
        else
            setesc std_error
            return
        endif
    endif

    if err=0   
        rem --- Get tcb(12) and tcb(10) to send into bac_error
        lock_byte=tcb(10)
        lock_chan=tcb(12)  
    endif

    rd_err_text$=""
    if tcb(2)=0 and tcb(5) then rd_err_text$=pgm(tcb(5),tcb(13),err=*next)
    call stbl("+DIR_SYP")+"bac_error.bbj",pgm(-2),str(tcb(5)),str(err),rd_err_text$,rd_err_act$,lock_byte,lock_chan
    if pos("ESCAPE"=rd_err_act$) seterr 0; setesc 0
    if pos("RETRY"=rd_err_act$) retry
    if pgm(-1)<>pgm(-2) status=999; exit 
    release

rem #endinclude std_error.src


rem #include std_exit.src

std_exit: rem --- Standard called program exit (01Mar2006)

    exit

rem #endinclude std_exit.src

    end
