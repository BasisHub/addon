rem --- Upgrade Conversion Utility For Version 18.00
rem --- Program adc_v1800conversion.aon

rem --- AddonSoftware Version 18.00 - Jul2017
rem --- Copyright BASIS International Ltd.  All Rights Reserved.


rem --- CONVCTRLFILECHAN : Channel number conversion control file data/adx_conversionCtrl is open on (Input)
rem --- CONVCTRL!        : Property object of the conversion control file data/adx_conversionCtrl (Input)
rem --- INSTALLMAP!      : HashMap object of installed modules, keyed by module ID (Input)
rem --- rdForm!          : Window object to hold progress meter
rem --- Translate!       : Translator object translations
rem --- CONV_STATUS      : Status code/0=No error (Returned)

    use java.io.File
    use java.util.HashMap
    use java.util.GregorianCalendar

    use ::ado_file.src::FileObject
    use ::ado_SyncRecords.aon::SyncRecords
   
    setesc std_error
    seterr std_error
    
    enter convCtrlFileChan,convCtrl!,installMap!,rdForm!,Translate!,conv_status

rem --- Initializations

    conv_status=1
    dir_syp$=stbl("+DIR_SYP")
    pgmdir$=stbl("+DIR_PGM",err=*next)
    dataDir$=FileObject.fixPath(stbl("+DIR_DAT",err=*next), "/")

    Calendar! = new GregorianCalendar()
    
rem --- Open log file in aon/logs directory

    num_files=1
    dim open_tables$[1:num_files],open_opts$[1:num_files],open_chans$[1:num_files],open_tpls$[1:num_files]
    open_tables$[1]="DDM_SYSTEMS",open_opts$[1]="OTA"
    gosub open_tables
    ddm_systems=num(open_chans$[1]);dim ddm_systems$:open_tpls$[1]
    
    aonDir$=""
    readrecord(ddm_systems,key=pad("ADDON",16," "),knum="SYSTEM_ID",err=*next)ddm_systems$
    if cvs(ddm_systems.mount_dir$,2)<>"" then
        aonDir$=ddm_systems.mount_dir$
    endif

    location$ = aonDir$
    gosub open_log
    
rem --- Start progress meter

    meter_title$="adc_v1800conversion.aon"
    meter_proc_recs=0
    meter_text$=""
    meter_action$="WIN-LST"
    gosub disp_meter

rem --- Prior to v17.12 the MSG_ID key field size in aon/data/sync/ads_messages~iv_lf_adjust_warn.xml was 22 instead of 20 (Bug 9261).
rem --- This can result in two bogus records for that bad key in aon/data/admin_backup/ads_messages~[01007517IV].xml following an upgrade
rem --- to v18, and the actual IV_LF_ADJUST_WARN being removed from ads_messages.
rem --- The following code removes those bogus "IV_LF_ADJUST_WARN     " sync xml records (22-char instead of 20-char),
rem --- and restores the IV_LF_ADJUST_WARN message record to the ads_messages table.

    task$="1800_AD_update_sync_files"
    if convCtrl!.getProperty(task$)<>"Completed" then
        rem --- Increment progress meter
        meter_text$=Translate!.getTranslation("AON_UPDATING","Updating")+" "+Translate!.getTranslation("AON_MODIFIED_SYNC_FILES")
        meter_proc_recs=meter_proc_recs+1
        meter_action$="MTR-LST"
        gosub disp_meter
        print(log_dev)meter_text$
    
        rem --- Remove bogus 22-char IV_LF_ADJUST_WARN records in admin_backup/ads_messages~[01007517IV].xml
        rem --- Remove no-longer-used SETPRINTER record in admin_backup/ads_autolaunch~[01007514AD].xml
        xml_file$=aonDir$+"data/admin_backup/ads_messages~[01007514IV].xml"
        xml_key$=$09$+"<barista_record>"+$0a$+$09$+$09$+"<MSG_ID>IV_LF_ADJUST_WARN     </MSG_ID>"+$0a$
        gosub remove_from_xml
        xml_file$=aonDir$+"data/admin_backup/ads_autolaunch~[01007514AD].xml"
        xml_key$=$09$+"<barista_record>"+$0a$+$09$+$09$+"<PROCESS_ID>SETPRINTER</PROCESS_ID>"+$0a$
        gosub remove_from_xml
    
        rem --- Add temporary "delete" sync files for obsolete records being eliminated
        tmpSync_dev=unt
        open(tmpSync_dev,isz=-1,mode="O_CREATE,O_TRUNC")aonDir$+"/data/sync/ads_autolaunch~{setprinter}.xml"
        write(tmpSync_dev)"<?xml version='1.0' encoding='UTF-8' ?>"
        write(tmpSync_dev)"<barista_admin_record>"
        write(tmpSync_dev)"    <barista_record_table>ADS_AUTOLAUNCH</barista_record_table>"
        write(tmpSync_dev)"    <PROCESS_ID>SETPRINTER</PROCESS_ID>"
        write(tmpSync_dev)"</barista_admin_record>"
        close(tmpSync_dev)
    
        rem --- restore the IV_LF_ADJUST_WARN message to the data table, and delete the SETPRINTER autolaunch record from the table
        syncFiles!=BBjAPI().makeVector()
        syncFiles!.addItem("ads_messages~iv_lf_adjust_warn.xml")
        syncFiles!.addItem("ads_autolaunch~{setprinter}.xml"); rem --- also deleting this one (is no longer in data/sync/, but can come across in v17 to v18 upgrade)
        syncRecs!=new SyncRecords(aonDir$)
        syncRecs!.updateRecords(syncFiles!)
    
        rem --- Erase temporary "delete" sync file
        erase aonDir$+"/data/sync/ads_autolaunch~{setprinter}.xml",err=*next

        write(convCtrlFileChan)task$+"=Completed"
    else
        rem --- Increment progress meter
        meter_text$=Translate!.getTranslation("AON_CONV_PREVIOUSLY","Conversion previously completed for")+" "+task$
        meter_proc_recs=meter_proc_recs+1
        meter_action$="MTR-LST"
        gosub disp_meter
        print(log_dev)meter_text$
    endif

rem --- For version 18.00, initialize MEMO_1024 in ARE_INVDET
rem --- Initialize AR data file changes implemented during minor releases of v18

    this_module$="AR"
    if installMap!.get(this_module$)="Y" then
        task$="1800_AR_arc_shipviacode"
        if convCtrl!.getProperty(task$)<>"Completed" then
            rem --- Increment progress meter
            meter_text$=this_module$+" "+Translate!.getTranslation("AON_INSTALLED","Installed")+", "+
:               Translate!.getTranslation("AON_DO_DATA_CONV","Doing data conversion for")+" "+this_module$
            meter_proc_recs=meter_proc_recs+1
            meter_action$="MTR-LST"
            gosub disp_meter
            print(log_dev)meter_text$
    
            rem --- Open File(s)
            num_files=1
            dim open_tables$[1:num_files],open_opts$[1:num_files],open_chans$[1:num_files],open_tpls$[1:num_files]
            open_tables$[1]="ARE_INVDET",   open_opts$[1]="OTA"
    
            gosub open_tables
    
            areInvDet_dev=num(open_chans$[1])
            dim areInvDet$:open_tpls$[1]
    
            rem --- Identify files to initialize MEMO_1024 in
            selectedFiles!=new java.util.TreeMap()
            
            fileVec!=BBjAPI().makeVector()
            fileVec!.addItem(areInvDet_dev)
            fileVec!.addItem(fattr(areInvDet$))
            fileVec!.addItem("DESCRIPTION")
            selectedFiles!.put("ARE_INVDET",fileVec!)
    
            rem --- Initialize new MEMO_1024 field with old comment field
            gosub initMemo1024
    
            rem --- As of v18.03, DataPort does NOT handle initializing new ARC_SHIPVIACODE table
        
            rem --- Increment progress meter
            meter_text$=Translate!.getTranslation("AON_INITIALIZING","Initializing")+": ARC_SHIPVIACODE"
            meter_proc_recs=meter_proc_recs+1
            meter_action$="MTR-LST"
            gosub disp_meter
            print(log_dev)meter_text$
    
            rem --- Execute AR upgrade conversion utility for minor releases of v18
            theFirm$=""
            call pgmdir$+"arc_v18initMinorRev.aon",theFirm$,rdForm!,status
            if status=0 then
                rem --- Conversion completed successfully
                rem --- Increment progress meter
                meter_text$=Translate!.getTranslation("AON_DATA_CONV","Data conversion")+" "+
:                       Translate!.getTranslation("AON_COMPLETED_FOR","completed for")+": ARC_SHIPVIACODE"
                meter_proc_recs=meter_proc_recs+1
                meter_action$="MTR-LST"
                gosub disp_meter
                print(log_dev)meter_text$
                write(convCtrlFileChan)task$+"=Completed"
            else
                rem --- Conversion did NOT complete successfully, exit with error message
                err_msg$="***** "+Translate!.getTranslation("AON_ERROR","Error")+": "+
:                       Translate!.getTranslation("AON_DATA_CONV","Data conversion")+" "+Translate!.getTranslation("AON_NOT","Not")+" "+
:                       Translate!.getTranslation("AON_COMPLETED_FOR","completed for")+": ARC_SHIPVIACODE"+" *****"
                goto done
            endif
        else
            rem --- Increment progress meter
            meter_text$=Translate!.getTranslation("AON_CONV_PREVIOUSLY","Conversion previously completed for")+" "+task$
            meter_proc_recs=meter_proc_recs+1
            meter_action$="MTR-LST"
            gosub disp_meter
            print(log_dev)meter_text$
        endif
    else
        rem --- Increment progress meter
        meter_text$=this_module$+" "+Translate!.getTranslation("AON_NOT","Not")+" "+Translate!.getTranslation("AON_INSTALLED","Installed")+", "+
:           Translate!.getTranslation("AON_SKIP","SKIP")+" "+Translate!.getTranslation("AON_DO_DATA_CONV","Doing data conversion for")+" "+this_module$
        meter_proc_recs=meter_proc_recs+1
        meter_action$="MTR-LST"
        gosub disp_meter
        print(log_dev)meter_text$
    endif

rem --- For version 18.00, initialize MEMO_1024 in GLE_JRNLDET, GLE_DAILYDETAIL and GLT_TRANSDETAIL

    this_module$="GL"
    if installMap!.get(this_module$)="Y" then
        rem --- Increment progress meter
        meter_text$=this_module$+" "+Translate!.getTranslation("AON_INSTALLED","Installed")+", "+
:       Translate!.getTranslation("AON_DO_DATA_CONV","Doing data conversion for")+" "+this_module$
        meter_proc_recs=meter_proc_recs+1
        meter_action$="MTR-LST"
        gosub disp_meter
        print(log_dev)meter_text$

        task$="1800_GL_memo_1024"
        if convCtrl!.getProperty(task$)<>"Completed" then
            rem --- Open File(s)
            num_files=3
            dim open_tables$[1:num_files],open_opts$[1:num_files],open_chans$[1:num_files],open_tpls$[1:num_files]
            open_tables$[1]="GLE_JRNLDET",   open_opts$[1]="OTA"
            open_tables$[2]="GLE_DAILYDETAIL",  open_opts$[2]="OTA"
            open_tables$[3]="GLT_TRANSDETAIL",  open_opts$[3]="OTA"
    
            gosub open_tables
    
            gleJrnlDet_dev=num(open_chans$[1])
            gleDailyDetail_dev=num(open_chans$[2])
            gltTransDetail_dev=num(open_chans$[3])
            dim gleJrnlDet$:open_tpls$[1]
            dim gleDailyDetail$:open_tpls$[2]
            dim gltTransDetail$:open_tpls$[3]
    
            rem --- Identify files to initialize MEMO_1024 in
            selectedFiles!=new java.util.TreeMap()
            
            fileVec!=BBjAPI().makeVector()
            fileVec!.addItem(gleJrnlDet_dev)
            fileVec!.addItem(fattr(gleJrnlDet$))
            fileVec!.addItem("GL_POST_MEMO")
            selectedFiles!.put("GLE_JRNLDET",fileVec!)
            
            fileVec!=BBjAPI().makeVector()
            fileVec!.addItem(gleDailyDetail_dev)
            fileVec!.addItem(fattr(gleDailyDetail$))
            fileVec!.addItem("DESCRIPTION")
            selectedFiles!.put("GLE_DAILYDETAIL",fileVec!)
            
            fileVec!=BBjAPI().makeVector()
            fileVec!.addItem(gltTransDetail_dev)
            fileVec!.addItem(fattr(gltTransDetail$))
            fileVec!.addItem("DESCRIPTION")
            selectedFiles!.put("GLT_TRANSDETAIL",fileVec!)
    
            rem --- Initialize new MEMO_1024 field with old comment field
            gosub initMemo1024

            write(convCtrlFileChan)task$+"=Completed"
        else
            rem --- Increment progress meter
            meter_text$=Translate!.getTranslation("AON_CONV_PREVIOUSLY","Conversion previously completed for")+" "+task$
            meter_proc_recs=meter_proc_recs+1
            meter_action$="MTR-LST"
            gosub disp_meter
            print(log_dev)meter_text$
        endif
    else
        rem --- Increment progress meter
        meter_text$=this_module$+" "+Translate!.getTranslation("AON_NOT","Not")+" "+Translate!.getTranslation("AON_INSTALLED","Installed")+", "+
:           Translate!.getTranslation("AON_SKIP","SKIP")+" "+Translate!.getTranslation("AON_DO_DATA_CONV","Doing data conversion for")+" "+this_module$
        meter_proc_recs=meter_proc_recs+1
        meter_action$="MTR-LST"
        gosub disp_meter
        print(log_dev)meter_text$
    endif

rem --- For version 18.00, initialize um_sold and conv_factor in opt_invdet

    this_module$="OP"
    if installMap!.get(this_module$)="Y" then 
        rem --- Increment progress meter
        meter_text$=this_module$+" "+Translate!.getTranslation("AON_INSTALLED","Installed")+", "+
:       Translate!.getTranslation("AON_DO_DATA_CONV","Doing data conversion for")+" "+this_module$
        meter_proc_recs=meter_proc_recs+1
        meter_action$="MTR-LST"
        gosub disp_meter
        print(log_dev)meter_text$
        
        task$="1800_OP_opt_invdet"
        if convCtrl!.getProperty(task$)<>"Completed" then
            rem --- Execute initialization utility for um_sold and conv_factor in opt_invdet
            theFirm$=""
            call pgmdir$+"opc_initUmSold.aon",theFirm$,rdForm!,status
            if status=0 then
                rem --- Conversion completed successfully
                rem --- Increment progress meter
                meter_text$=Translate!.getTranslation("AON_DATA_INIT","Data initialization")+" "+
:                   Translate!.getTranslation("AON_COMPLETED_FOR","completed for")+": OPT_INVDET"
                meter_proc_recs=meter_proc_recs+1
                meter_action$="MTR-LST"
                gosub disp_meter
                print(log_dev)meter_text$
            else
                rem --- Conversion did NOT complete successfully, exit with error message
                err_msg$="***** "+Translate!.getTranslation("AON_ERROR","Error")+": "+
:                   Translate!.getTranslation("AON_DATA_INIT","Data initialization")+" "+Translate!.getTranslation("AON_NOT","Not")+" "+
:                   Translate!.getTranslation("AON_COMPLETED_FOR","completed for")+": OPT_INVDET"+" *****"
                goto done
            endif

            write(convCtrlFileChan)task$+"=Completed"
        else
            rem --- Increment progress meter
            meter_text$=Translate!.getTranslation("AON_CONV_PREVIOUSLY","Conversion previously completed for")+" "+task$
            meter_proc_recs=meter_proc_recs+1
            meter_action$="MTR-LST"
            gosub disp_meter
            print(log_dev)meter_text$
        endif
    else
        rem --- Increment progress meter
        meter_text$=this_module$+" "+Translate!.getTranslation("AON_NOT","Not")+" "+Translate!.getTranslation("AON_INSTALLED","Installed")+", "+
:           Translate!.getTranslation("AON_SKIP","SKIP")+" "+Translate!.getTranslation("AON_DO_DATA_CONV","Doing data conversion for")+" "+this_module$
        meter_proc_recs=meter_proc_recs+1
        meter_action$="MTR-LST"
        gosub disp_meter
        print(log_dev)meter_text$
    endif

rem --- For version 18.00, initialize MEMO_1024 in SFE_WOMATL and SFE_WOOPRTN

    this_module$="SF"
    if installMap!.get(this_module$)="Y" then
        task$="1800_SF_memo_1024"
        if convCtrl!.getProperty(task$)<>"Completed" then
            rem --- Increment progress meter
            meter_text$=this_module$+" "+Translate!.getTranslation("AON_INSTALLED","Installed")+", "+
:               Translate!.getTranslation("AON_DO_DATA_CONV","Doing data conversion for")+" "+this_module$
            meter_proc_recs=meter_proc_recs+1
            meter_action$="MTR-LST"
            gosub disp_meter
            print(log_dev)meter_text$
    
            rem --- Open File(s)
            num_files=2
            dim open_tables$[1:num_files],open_opts$[1:num_files],open_chans$[1:num_files],open_tpls$[1:num_files]
            open_tables$[1]="SFE_WOMATL",   open_opts$[1]="OTA"
            open_tables$[2]="SFE_WOOPRTN",  open_opts$[2]="OTA"
    
            gosub open_tables
    
            sfeWOMatl_dev=num(open_chans$[1])
            sfeWOOprtn_dev=num(open_chans$[2])
            dim sfeWomatl$:open_tpls$[1]
            dim sfeWooprtn$:open_tpls$[2]
    
            rem --- Identify files to initialize MEMO_1024 in
            selectedFiles!=new java.util.TreeMap()
            
            fileVec!=BBjAPI().makeVector()
            fileVec!.addItem(sfeWOMatl_dev)
            fileVec!.addItem(fattr(sfeWOMatl$))
            fileVec!.addItem("EXT_COMMENTS")
            selectedFiles!.put("SFE_WOMATL",fileVec!)
            
            fileVec!=BBjAPI().makeVector()
            fileVec!.addItem(sfeWOOprtn_dev)
            fileVec!.addItem(fattr(sfeWOOprtn$))
            fileVec!.addItem("EXT_COMMENTS")
            selectedFiles!.put("SFE_WOOPRTN",fileVec!)
    
            rem --- Initialize new MEMO_1024 field with old comment field
            gosub initMemo1024

            write(convCtrlFileChan)task$+"=Completed"
        else
            rem --- Increment progress meter
            meter_text$=Translate!.getTranslation("AON_CONV_PREVIOUSLY","Conversion previously completed for")+" "+task$
            meter_proc_recs=meter_proc_recs+1
            meter_action$="MTR-LST"
            gosub disp_meter
            print(log_dev)meter_text$
        endif
    else
        rem --- Increment progress meter
        meter_text$=this_module$+" "+Translate!.getTranslation("AON_NOT","Not")+" "+Translate!.getTranslation("AON_INSTALLED","Installed")+", "+
:           Translate!.getTranslation("AON_SKIP","SKIP")+" "+Translate!.getTranslation("AON_DO_DATA_CONV","Doing data conversion for")+" "+this_module$
        meter_proc_recs=meter_proc_recs+1
        meter_action$="MTR-LST"
        gosub disp_meter
        print(log_dev)meter_text$
    endif
    
rem --- Initialize data file changes implemented during minor releases of v17

    if num(convCtrl!.getProperty("start_version"))>=17 then
        rem --- If starting version is before v17, then the following conversions are handled in adc_v1700conversion.aon

        rem --- Initialize AP data file changes implemented during minor releases of v17
        this_module$="AP"
        if installMap!.get(this_module$)="Y" then 
            rem --- Increment progress meter
            meter_text$=this_module$+" "+Translate!.getTranslation("AON_INSTALLED","Installed")+", "+
:               Translate!.getTranslation("AON_DO_DATA_CONV","Doing data conversion for")+" "+this_module$
            meter_proc_recs=meter_proc_recs+1
            meter_action$="MTR-LST"
            gosub disp_meter
            print(log_dev)meter_text$
        
            task$="1800_AP_apm-09"
            if convCtrl!.getProperty(task$)<>"Completed" then
                rem --- As of v17.10, DataPort handles initializing APM_VENDMAST.MEMO_1024 from APM_VENDCMTS (apm-09)
                if convCtrl!.getProperty("data_source")="OCJ" then
                    rem --- Does APM_VENDCMTS (apm-09) exists. It was deleted in v19.
                    open_success=0
                    apm09_dev=unt
                    open(apm09_dev,err=*next)dataDir$+"/apm-09"; open_success=1
                    close(apm09_dev,err=*next)
                    if !open_success then
                        rem --- Increment progress meter
                        meter_text$=Translate!.getTranslation("AON_UPDATING","Updating")+": APM_VENDMAST.MEMO_1024 "+
:                           Translate!.getTranslation("AON_FROM_","From ")+"APM_VENDCMTS"
                        meter_proc_recs=meter_proc_recs+1
                        meter_action$="MTR-LST"
                        gosub disp_meter
                        print(log_dev)meter_text$
        
                        rem --- Verify can read DDM_TABLE_TPLS for barista_source
                        ddm_table_tpls$=convCtrl!.getProperty("barista_source")+"/barista/sys/data/ddm_table_tpls.dat"
                        open_success=0
                        ddm_table_tpls=unt
                        open(ddm_table_tpls,err=*next)ddm_table_tpls$; open_success=1
                        if open_success then
                            dim ddm_table_tpls$:"table_name:c(16*),file_name:c(30*),template:c(10230*)"
                        else
                            rem --- Required file missing
                            msg_id$="AD_FILE_MISSING"
                            dim msg_tokens$[1]
                            msg_tokens$[1]=ddm_table_tpls$
                            gosub disp_message
                            err_msg$="***** "+Translate!.getTranslation("AON_ERROR","Error")+": "+
:                               Translate!.getTranslation("AON_FILE_NOT_FOUND","Required file not found")+": "+ddm_table_tpls$+" *****"
                            goto done
                        endif
    
                        rem --- Initialize APM_VENDMAST.MEMO_1024 from old source APM_VENDCMTS (apm-09)
                        sourceFileVec!=BBjAPI().makeVector()
                        tableAliasVec!=BBjAPI().makeVector()
                        sourceFileVec!.addItem("apm-09");tableAliasVec!.addItem("APM_VENDCMTS")
                        for source=0 to sourcefileVec!.size()-1
                            rem --- Does source file exist?
                            oldStbl$="+APDATA"
                            oldFile$=sourceFileVec!.get(source)
                            tableAlias$=tableAliasVec!.get(source)
                            gosub get_path_to_old_file
                            source_file$=oldPathToFile$
                            open_success=0
                            source_dev=unt
                            open(source_dev,err=*next)source_file$; open_success=1
                            if open_success then
                                rem --- Get record template for source file
                                tpl_found=0
                                findrecord(ddm_table_tpls,key=pad(tableAlias$,16),dom=*next)ddm_table_tpls$;tpl_found=1
                                if tpl_found then
                                    dim source_tpl$:ddm_table_tpls.template$
                                else
                                    rem --- Required template missing
                                    err_msg$="***** "+Translate!.getTranslation("AON_ERROR","Error")+": "+Translate!.getTranslation("AON_VERSION","Verion")+" "+convCtrl!.getProperty("start_version")+
:                                       " "+Translate!.getTranslation("AON_TEMPLATE_NOT_FOUND","Template not found")+": "+tableAlias$+" *****"
                                    goto done
                                endif
            
                                rem --- Open file in new data dictionary
                                num_files=1
                                dim open_tables$[1:num_files],open_opts$[1:num_files],open_chans$[1:num_files],open_tpls$[1:num_files]
                                open_tables$[1]="APM_VENDMAST", open_opts$[1]="OTA"
                                gosub open_tables
                                target_dev=num(open_chans$[1])
                                dim target_tpl$:open_tpls$[1]
    
                                rem --- Build new APM_VENDMAST.MEMO_1024 field from APM_VENDCMTS (apm-09) table
                                theFirm$=""
                                currentFirm$=""
                                currentVendor$=""
                                memo$=""
                                apmVendCmts_dev=source_dev
                                dim apmVendCmts$:fattr(source_tpl$)
                                apmVendMast_dev=target_dev
                                dim apmVendMast$:fattr(target_tpl$)
                                read(apmVendCmts_dev,key=theFirm$,dom=*next)
                                while 1
                                    apmVendCmts_key$=key(apmVendCmts_dev,end=*break)
                                    if cvs(theFirm$,2)<>"" and pos(theFirm$=apmVendCmts_key$)<>1 then break
                                    readrecord(apmVendCmts_dev)apmVendCmts$
                                    if apmVendCmts.firm_id$+apmVendCmts.vendor_id$<>currentFirm$+currentVendor$ then
                                        gosub writeApmVendMastMemo1024
                                        memo$=""
                                        currentVendor$=apmVendCmts.vendor_id$
                                        if apmVendCmts.firm_id$<>currentFirm$ then
                                            rem --- Log next firm processed
                                            print(log_dev)"    APM_VENDCMTS.FIRM_ID = "+apmVendCmts.firm_id$
                                            currentFirm$=apmVendCmts.firm_id$
                                        endif
                                    endif
                                    memo$=memo$+cvs(apmVendCmts.std_comments$,2)+$0A$
                                wend
                                gosub writeApmVendMastMemo1024
                                
                                close(source_dev,err=*next)
                            endif
                        next source
                    endif
                endif

                rem --- Execute AP upgrade conversion utility for minor releases of v17
                theFirm$=""
                call pgmdir$+"apc_v17initMinorRev.aon",theFirm$,rdForm!,status
                if status=0 then
                    rem --- Conversion completed successfully
                    rem --- Increment progress meter
                    meter_text$=Translate!.getTranslation("AON_DATA_CONV","Data conversion")+" "+
:                       Translate!.getTranslation("AON_COMPLETED_FOR","completed for")+": APM_VENDCMTS"
                    meter_proc_recs=meter_proc_recs+1
                    meter_action$="MTR-LST"
                    gosub disp_meter
                    print(log_dev)meter_text$
                    write(convCtrlFileChan)task$+"=Completed"
            
                    rem --- Delete conversion marker files associated with this conversion
                    conv_marker_name$="v1800_apm-01"
                    conv_marker_file$=dataDir$+conv_marker_name$
                    convmarkerFile!=new File(conv_marker_file$)
                    if convmarkerFile!.exists() then
                        rem --- Delete conversion marker file
                        if convmarkerFile!.delete() then
                            rem --- Increment progress meter
                            meter_text$=Translate!.getTranslation("AON_CONV_MARKER_DELETED","Conversion marker file deleted")+": "+conv_marker_file$
                            meter_proc_recs=meter_proc_recs+1
                            meter_action$="MTR-LST"
                            gosub disp_meter
                            print(log_dev)meter_text$
                        endif
                    endif
                else
                    rem --- Conversion did NOT complete successfully, exit with error message
                    err_msg$="***** "+Translate!.getTranslation("AON_ERROR","Error")+": "+
:                       Translate!.getTranslation("AON_DATA_CONV","Data conversion")+" "+Translate!.getTranslation("AON_NOT","Not")+" "+
:                       Translate!.getTranslation("AON_COMPLETED_FOR","completed for")+": APM_VENDCMTS"+" *****"
                    goto done
                endif
            else
                rem --- Increment progress meter
                meter_text$=Translate!.getTranslation("AON_CONV_PREVIOUSLY","Conversion previously completed for")+" "+task$
                meter_proc_recs=meter_proc_recs+1
                meter_action$="MTR-LST"
                gosub disp_meter
                print(log_dev)meter_text$
            endif
        else
            rem --- Increment progress meter
            meter_text$=this_module$+" "+Translate!.getTranslation("AON_NOT","Not")+" "+Translate!.getTranslation("AON_INSTALLED","Installed")+", "+
:               Translate!.getTranslation("AON_SKIP","SKIP")+" "+Translate!.getTranslation("AON_DO_DATA_CONV","Doing data conversion for")+" "+this_module$
            meter_proc_recs=meter_proc_recs+1
            meter_action$="MTR-LST"
            gosub disp_meter
            print(log_dev)meter_text$
        endif

        rem --- Initialize AR data file changes implemented during minor releases of v17
        this_module$="AR"
        if installMap!.get(this_module$)="Y" then 
            rem --- Increment progress meter
            meter_text$=this_module$+" "+Translate!.getTranslation("AON_INSTALLED","Installed")+", "+
:              Translate!.getTranslation("AON_DO_DATA_CONV","Doing data conversion for")+" "+this_module$
            meter_proc_recs=meter_proc_recs+1
            meter_action$="MTR-LST"
            gosub disp_meter
            print(log_dev)meter_text$
        
            task$="1800_AR_arm-05"
            if convCtrl!.getProperty(task$)<>"Completed" then
                rem --- As of v17.10, DataPort handles initializing ARM_CUSTMAST.MEMO_1024 from ARM_CUSTCMTS (arm-05)
                if convCtrl!.getProperty("data_source")="OCJ" then
                    rem --- Does ARM_CUSTCMTS (arm-05) exists. It was deleted in v19.
                    open_success=0
                    arm05_dev=unt
                    open(arm05_dev,err=*next)dataDir$+"/arm-05"; open_success=1
                    close(arm05_dev,err=*next)
                    if !open_success then
                        rem --- Increment progress meter
                        meter_text$=Translate!.getTranslation("AON_UPDATING","Updating")+": ARM_CUSTMAST.MEMO_1024 "+
:                           Translate!.getTranslation("AON_FROM_","From ")+"ARM_CUSTCMTS"
                        meter_proc_recs=meter_proc_recs+1
                        meter_action$="MTR-LST"
                        gosub disp_meter
                        print(log_dev)meter_text$
        
                        rem --- Verify can read DDM_TABLE_TPLS for barista_source
                        ddm_table_tpls$=convCtrl!.getProperty("barista_source")+"/barista/sys/data/ddm_table_tpls.dat"
                        open_success=0
                        ddm_table_tpls=unt
                        open(ddm_table_tpls,err=*next)ddm_table_tpls$; open_success=1
                        if open_success then
                            dim ddm_table_tpls$:"table_name:c(16*),file_name:c(30*),template:c(10230*)"
                        else
                            rem --- Required file missing
                            msg_id$="AD_FILE_MISSING"
                            dim msg_tokens$[1]
                            msg_tokens$[1]=ddm_table_tpls$
                            gosub disp_message
                            err_msg$="***** "+Translate!.getTranslation("AON_ERROR","Error")+": "+
:                               Translate!.getTranslation("AON_FILE_NOT_FOUND","Required file not found")+": "+ddm_table_tpls$+" *****"
                            goto done
                        endif
    
                        rem --- Initialize ARM_CUSTMAST.MEMO_1024 from old source ARM_CUSTCMTS (arm-05)
                        sourceFileVec!=BBjAPI().makeVector()
                        tableAliasVec!=BBjAPI().makeVector()
                        sourceFileVec!.addItem("arm-05");tableAliasVec!.addItem("ARM_CUSTCMTS")
                        for source=0 to sourcefileVec!.size()-1
                            rem --- Does source file exist?
                            oldStbl$="+ARDATA"
                            oldFile$=sourceFileVec!.get(source)
                            tableAlias$=tableAliasVec!.get(source)
                            gosub get_path_to_old_file
                            source_file$=oldPathToFile$
                            open_success=0
                            source_dev=unt
                            open(source_dev,err=*next)source_file$; open_success=1
                            if open_success then
                                rem --- Get record template for source file
                                tpl_found=0
                                findrecord(ddm_table_tpls,key=pad(tableAlias$,16),dom=*next)ddm_table_tpls$;tpl_found=1
                                if tpl_found then
                                    dim source_tpl$:ddm_table_tpls.template$
                                else
                                    rem --- Required template missing
                                    err_msg$="***** "+Translate!.getTranslation("AON_ERROR","Error")+": "+Translate!.getTranslation("AON_VERSION","Verion")+" "+convCtrl!.getProperty("start_version")+
:                                       " "+Translate!.getTranslation("AON_TEMPLATE_NOT_FOUND","Template not found")+": "+tableAlias$+" *****"
                                    goto done
                                endif
            
                                rem --- Open file in new data dictionary
                                num_files=1
                                dim open_tables$[1:num_files],open_opts$[1:num_files],open_chans$[1:num_files],open_tpls$[1:num_files]
                                open_tables$[1]="ARM_CUSTMAST", open_opts$[1]="OTA"
                                gosub open_tables
                                target_dev=num(open_chans$[1])
                                dim target_tpl$:open_tpls$[1]
    
                                rem --- Build new ARM_CUSTMAST.MEMO_1024 field from ARM_CUSTCMTS (arm-05) table
                                theFirm$=""
                                currentFirm$=""
                                currentCustomer$=""
                                memo$=""
                                armCustCmts_dev=source_dev
                                dim armCustCmts$:fattr(source_tpl$)
                                armCustMast_dev=target_dev
                                dim armCustMast$:fattr(target_tpl$)
                                read(armCustCmts_dev,key=theFirm$,dom=*next)
                                while 1
                                    armCustCmts_key$=key(armCustCmts_dev,end=*break)
                                    if cvs(theFirm$,2)<>"" and pos(theFirm$=armCustCmts_key$)<>1 then break
                                    readrecord(armCustCmts_dev)armCustCmts$
                                    if armCustCmts.firm_id$+armCustCmts.customer_id$<>currentFirm$+currentCustomer$ then
                                        gosub writeArmCustMastMemo1024
                                        memo$=""
                                        currentCustomer$=armCustCmts.customer_id$
                                        if armCustCmts.firm_id$<>currentFirm$ then
                                            rem --- Log next firm processed
                                            print(log_dev)"    ARM_CUSTCMTS.FIRM_ID = "+armCustCmts.firm_id$
                                            currentFirm$=armCustCmts.firm_id$
                                        endif
                                    endif
                                    memo$=memo$+cvs(armCustCmts.std_comments$,2)+$0A$
                                wend
                                gosub writeArmCustMastMemo1024
                                
                                close(source_dev,err=*next)
                            endif
                        next source
                    endif
                endif

                rem --- Execute AR upgrade conversion utility for minor releases of v17
                theFirm$=""
                call pgmdir$+"arc_v17initMinorRev.aon",theFirm$,rdForm!,status
                if status=0 then
                    rem --- Conversion completed successfully
                    rem --- Increment progress meter
                    meter_text$=Translate!.getTranslation("AON_DATA_CONV","Data conversion")+" "+
:                       Translate!.getTranslation("AON_COMPLETED_FOR","completed for")+": ARM_CUSTCMTS"
                    meter_proc_recs=meter_proc_recs+1
                    meter_action$="MTR-LST"
                    gosub disp_meter
                    print(log_dev)meter_text$
                    write(convCtrlFileChan)task$+"=Completed"
            
                    rem --- Delete conversion marker files associated with this conversion
                    conv_marker_name$="v1800_arm-01"
                    conv_marker_file$=dataDir$+conv_marker_name$
                    convmarkerFile!=new File(conv_marker_file$)
                    if convmarkerFile!.exists() then
                        rem --- Delete conversion marker file
                        if convmarkerFile!.delete() then
                            rem --- Increment progress meter
                            meter_text$=Translate!.getTranslation("AON_CONV_MARKER_DELETED","Conversion marker file deleted")+": "+conv_marker_file$
                            meter_proc_recs=meter_proc_recs+1
                            meter_action$="MTR-LST"
                            gosub disp_meter
                            print(log_dev)meter_text$
                        endif
                    endif
                else
                    rem --- Conversion did NOT complete successfully, exit with error message
                    err_msg$="***** "+Translate!.getTranslation("AON_ERROR","Error")+": "+
:                       Translate!.getTranslation("AON_DATA_CONV","Data conversion")+" "+Translate!.getTranslation("AON_NOT","Not")+" "+
:                       Translate!.getTranslation("AON_COMPLETED_FOR","completed for")+": ARM_CUSTCMTS"+" *****"
                    goto done
                endif
            else
                rem --- Increment progress meter
                meter_text$=Translate!.getTranslation("AON_CONV_PREVIOUSLY","Conversion previously completed for")+" "+task$
                meter_proc_recs=meter_proc_recs+1
                meter_action$="MTR-LST"
                gosub disp_meter
                print(log_dev)meter_text$
            endif
        else
            rem --- Increment progress meter
            meter_text$=this_module$+" "+Translate!.getTranslation("AON_NOT","Not")+" "+Translate!.getTranslation("AON_INSTALLED","Installed")+", "+
:               Translate!.getTranslation("AON_SKIP","SKIP")+" "+Translate!.getTranslation("AON_DO_DATA_CONV","Doing data conversion for")+" "+this_module$
            meter_proc_recs=meter_proc_recs+1
            meter_action$="MTR-LST"
            gosub disp_meter
            print(log_dev)meter_text$
        endif

        rem --- Initialize BM data file changes implemented during minor releases of v17
        this_module$="BM"
        if installMap!.get(this_module$)="Y" then
            rem --- Increment progress meter
            meter_text$=this_module$+" "+Translate!.getTranslation("AON_INSTALLED","Installed")+", "+
:              Translate!.getTranslation("AON_DO_DATA_CONV","Doing data conversion for")+" "+this_module$
            meter_proc_recs=meter_proc_recs+1
            meter_action$="MTR-LST"
            gosub disp_meter
            print(log_dev)meter_text$
        
            task$="1800_BM_bmm-09"
            if convCtrl!.getProperty(task$)<>"Completed" then
                rem --- As of v17.10, DataPort handles initializing BMM_BILLMAST.MEMO_1024 from BMM_BILLCMTS (bmm-09)
                if convCtrl!.getProperty("data_source")="OCJ" then
                    rem --- Does BMM_BILLCMTS (bmm-09) exists. It was deleted in v19.
                    open_success=0
                    bmm09_dev=unt
                    open(bmm09_dev,err=*next)dataDir$+"/bmm-09"; open_success=1
                    close(bmm09_dev,err=*next)
                    if !open_success then
                        rem --- Increment progress meter
                        meter_text$=Translate!.getTranslation("AON_UPDATING","Updating")+": BMM_BILLMAST.MEMO_1024 "+
:                           Translate!.getTranslation("AON_FROM_","From ")+"BMM_BILLCMTS"
                        meter_proc_recs=meter_proc_recs+1
                        meter_action$="MTR-LST"
                        gosub disp_meter
                        print(log_dev)meter_text$
        
                        rem --- Verify can read DDM_TABLE_TPLS for barista_source
                        ddm_table_tpls$=convCtrl!.getProperty("barista_source")+"/barista/sys/data/ddm_table_tpls.dat"
                        open_success=0
                        ddm_table_tpls=unt
                        open(ddm_table_tpls,err=*next)ddm_table_tpls$; open_success=1
                        if open_success then
                            dim ddm_table_tpls$:"table_name:c(16*),file_name:c(30*),template:c(10230*)"
                        else
                            rem --- Required file missing
                            msg_id$="AD_FILE_MISSING"
                            dim msg_tokens$[1]
                            msg_tokens$[1]=ddm_table_tpls$
                            gosub disp_message
                            err_msg$="***** "+Translate!.getTranslation("AON_ERROR","Error")+": "+
:                               Translate!.getTranslation("AON_FILE_NOT_FOUND","Required file not found")+": "+ddm_table_tpls$+" *****"
                            goto done
                        endif
    
                        rem --- Initialize BMM_BILLMAST.MEMO_1024 from old source BMM_BILLCMTS (bmm-09)
                        sourceFileVec!=BBjAPI().makeVector()
                        tableAliasVec!=BBjAPI().makeVector()
                        sourceFileVec!.addItem("bmm-09");tableAliasVec!.addItem("BMM_BILLCMTS")
                        for source=0 to sourcefileVec!.size()-1
                            rem --- Does source file exist?
                            oldStbl$="+BMDATA"
                            oldFile$=sourceFileVec!.get(source)
                            tableAlias$=tableAliasVec!.get(source)
                            gosub get_path_to_old_file
                            source_file$=oldPathToFile$
                            open_success=0
                            source_dev=unt
                            open(source_dev,err=*next)source_file$; open_success=1
                            if open_success then
                                rem --- Get record template for source file
                                tpl_found=0
                                findrecord(ddm_table_tpls,key=pad(tableAlias$,16),dom=*next)ddm_table_tpls$;tpl_found=1
                                if tpl_found then
                                    dim source_tpl$:ddm_table_tpls.template$
                                else
                                    rem --- Required template missing
                                    err_msg$="***** "+Translate!.getTranslation("AON_ERROR","Error")+": "+Translate!.getTranslation("AON_VERSION","Verion")+" "+convCtrl!.getProperty("start_version")+
:                                       " "+Translate!.getTranslation("AON_TEMPLATE_NOT_FOUND","Template not found")+": "+tableAlias$+" *****"
                                    goto done
                                endif
            
                                rem --- Open file in new data dictionary
                                num_files=1
                                dim open_tables$[1:num_files],open_opts$[1:num_files],open_chans$[1:num_files],open_tpls$[1:num_files]
                                open_tables$[1]="BMM_BILLMAST", open_opts$[1]="OTA"
                                gosub open_tables
                                target_dev=num(open_chans$[1])
                                dim target_tpl$:open_tpls$[1]
    
                                rem --- Build new BMM_BILLMAST.MEMO_1024 field from BMM_BILLCMTS (bmm-09) table
                                theFirm$=""
                                currentFirm$=""
                                currentBill$=""
                                memo$=""
                                bmmBillCmts_dev=source_dev
                                dim bmmBillCmts$:fattr(source_tpl$)
                                bmmBillMast_dev=target_dev
                                dim bmmBillMast$:fattr(target_tpl$)
                                read(bmmBillCmts_dev,key=theFirm$,dom=*next)
                                while 1
                                    bmmBillCmts_key$=key(bmmBillCmts_dev,end=*break)
                                    if cvs(theFirm$,2)<>"" and pos(theFirm$=bmmBillCmts_key$)<>1 then break
                                    readrecord(bmmBillCmts_dev)bmmBillCmts$
                                    if bmmBillCmts.firm_id$+bmmBillCmts.bill_no$<>currentFirm$+currentBill$ then
                                        gosub writeBmmBillMastMemo1024
                                        memo$=""
                                        currentBill$=bmmBillCmts.bill_no$
                                        if bmmBillCmts.firm_id$<>currentFirm$ then
                                            rem --- Log next firm processed
                                            print(log_dev)"    BMM_BILLCMTS.FIRM_ID = "+bmmBillCmts.firm_id$
                                            currentFirm$=bmmBillCmts.firm_id$
                                        endif
                                    endif
                                    memo$=memo$+cvs(bmmBillCmts.std_comments$,2)+$0A$
                                wend
                                gosub writeBmmBillMastMemo1024

                                close(source_dev,err=*next)
                            endif
                        next source
                    endif
                endif

                rem --- Execute BM upgrade conversion utility for minor releases of v17
                theFirm$=""
                call pgmdir$+"bmc_v17initMinorRev.aon",theFirm$,rdForm!,status
                if status=0 then
                    rem --- Conversion completed successfully
                    rem --- Increment progress meter
                    meter_text$=Translate!.getTranslation("AON_DATA_CONV","Data conversion")+" "+
:                       Translate!.getTranslation("AON_COMPLETED_FOR","completed for")+": BMM_BILLCMTS"
                    meter_proc_recs=meter_proc_recs+1
                    meter_action$="MTR-LST"
                    gosub disp_meter
                    print(log_dev)meter_text$
                    write(convCtrlFileChan)task$+"=Completed"
            
                    rem --- Delete conversion marker files associated with this conversion
                    conv_marker_name$="v1800_bmm-01"
                    conv_marker_file$=dataDir$+conv_marker_name$
                    convmarkerFile!=new File(conv_marker_file$)
                    if convmarkerFile!.exists() then
                        rem --- Delete conversion marker file
                        if convmarkerFile!.delete() then
                            rem --- Increment progress meter
                            meter_text$=Translate!.getTranslation("AON_CONV_MARKER_DELETED","Conversion marker file deleted")+": "+conv_marker_file$
                            meter_proc_recs=meter_proc_recs+1
                            meter_action$="MTR-LST"
                            gosub disp_meter
                            print(log_dev)meter_text$
                        endif
                    endif
                else
                    rem --- Conversion did NOT complete successfully, exit with error message
                    err_msg$="***** "+Translate!.getTranslation("AON_ERROR","Error")+": "+
:                       Translate!.getTranslation("AON_DATA_CONV","Data conversion")+" "+Translate!.getTranslation("AON_NOT","Not")+" "+
:                       Translate!.getTranslation("AON_COMPLETED_FOR","completed for")+": BMM_BILLCMTS"+" *****"
                    goto done
                endif
            else
                rem --- Increment progress meter
                meter_text$=Translate!.getTranslation("AON_CONV_PREVIOUSLY","Conversion previously completed for")+" "+task$
                meter_proc_recs=meter_proc_recs+1
                meter_action$="MTR-LST"
                gosub disp_meter
                print(log_dev)meter_text$
            endif
        else
            rem --- Increment progress meter
            meter_text$=this_module$+" "+Translate!.getTranslation("AON_NOT","Not")+" "+Translate!.getTranslation("AON_INSTALLED","Installed")+", "+
:               Translate!.getTranslation("AON_SKIP","SKIP")+" "+Translate!.getTranslation("AON_DO_DATA_CONV","Doing data conversion for")+" "+this_module$
            meter_proc_recs=meter_proc_recs+1
            meter_action$="MTR-LST"
            gosub disp_meter
            print(log_dev)meter_text$
        endif

        rem --- Initialize GL data file changes implemented during minor releases of v17
        this_module$="GL"
        if installMap!.get(this_module$)="Y" then 
            rem --- Increment progress meter
            meter_text$=this_module$+" "+Translate!.getTranslation("AON_INSTALLED","Installed")+", "+
:              Translate!.getTranslation("AON_DO_DATA_CONV","Doing data conversion for")+" "+this_module$
            meter_proc_recs=meter_proc_recs+1
            meter_action$="MTR-LST"
            gosub disp_meter
            print(log_dev)meter_text$
        
            task$="1800_GL_glm-09"
            if convCtrl!.getProperty(task$)<>"Completed" then
                rem --- As of v17.10, DataPort handles initializing GLM_ACCT.MEMO_1024 from GLM_ACCTCOMMENTS (glm-09)
                if convCtrl!.getProperty("data_source")="OCJ" then
                    rem --- Does GLM_ACCTCOMMENTS (glm-09) exists. It was deleted in v19.
                    open_success=0
                    glm09_dev=unt
                    open(glm09_dev,err=*next)dataDir$+"/glm-09"; open_success=1
                    close(glm09_dev,err=*next)
                    if !open_success then
                        rem --- Increment progress meter
                        meter_text$=Translate!.getTranslation("AON_UPDATING","Updating")+": GLM_ACCT.MEMO_1024 "+
:                           Translate!.getTranslation("AON_FROM_","From ")+"GLM_ACCTCOMMENTS"
                        meter_proc_recs=meter_proc_recs+1
                        meter_action$="MTR-LST"
                        gosub disp_meter
                        print(log_dev)meter_text$
        
                        rem --- Verify can read DDM_TABLE_TPLS for barista_source
                        ddm_table_tpls$=convCtrl!.getProperty("barista_source")+"/barista/sys/data/ddm_table_tpls.dat"
                        open_success=0
                        ddm_table_tpls=unt
                        open(ddm_table_tpls,err=*next)ddm_table_tpls$; open_success=1
                        if open_success then
                            dim ddm_table_tpls$:"table_name:c(16*),file_name:c(30*),template:c(10230*)"
                        else
                            rem --- Required file missing
                            msg_id$="AD_FILE_MISSING"
                            dim msg_tokens$[1]
                            msg_tokens$[1]=ddm_table_tpls$
                            gosub disp_message
                            err_msg$="***** "+Translate!.getTranslation("AON_ERROR","Error")+": "+
:                               Translate!.getTranslation("AON_FILE_NOT_FOUND","Required file not found")+": "+ddm_table_tpls$+" *****"
                            goto done
                        endif
    
                        rem --- Initialize GLM_ACCT.MEMO_1024 from old source GLM_ACCTCOMMENTS (glm-09)
                        sourceFileVec!=BBjAPI().makeVector()
                        tableAliasVec!=BBjAPI().makeVector()
                        sourceFileVec!.addItem("glm-09");tableAliasVec!.addItem("GLM_ACCTCOMMENTS")
                        for source=0 to sourcefileVec!.size()-1
                            rem --- Does source file exist?
                            oldStbl$="+GLDATA"
                            oldFile$=sourceFileVec!.get(source)
                            tableAlias$=tableAliasVec!.get(source)
                            gosub get_path_to_old_file
                            source_file$=oldPathToFile$
                            open_success=0
                            source_dev=unt
                            open(source_dev,err=*next)source_file$; open_success=1
                            if open_success then
                                rem --- Get record template for source file
                                tpl_found=0
                                findrecord(ddm_table_tpls,key=pad(tableAlias$,16),dom=*next)ddm_table_tpls$;tpl_found=1
                                if tpl_found then
                                    dim source_tpl$:ddm_table_tpls.template$
                                else
                                    rem --- Required template missing
                                    err_msg$="***** "+Translate!.getTranslation("AON_ERROR","Error")+": "+Translate!.getTranslation("AON_VERSION","Verion")+" "+convCtrl!.getProperty("start_version")+
:                                       " "+Translate!.getTranslation("AON_TEMPLATE_NOT_FOUND","Template not found")+": "+tableAlias$+" *****"
                                    goto done
                                endif
            
                                rem --- Open file in new data dictionary
                                num_files=1
                                dim open_tables$[1:num_files],open_opts$[1:num_files],open_chans$[1:num_files],open_tpls$[1:num_files]
                                open_tables$[1]="GLM_ACCT", open_opts$[1]="OTA"
                                gosub open_tables
                                target_dev=num(open_chans$[1])
                                dim target_tpl$:open_tpls$[1]
    
                                rem --- Build new GLM_ACCT.MEMO_1024 field from GLM_ACCTCOMMENTS (glm-09) table
                                currentFirm$=""
                                currentAccount$=""
                                memo$=""
                                glmAcctComments_dev=source_dev
                                dim glmAcctComments$:fattr(source_tpl$)
                                glmAcct_dev=target_dev
                                dim glmAcct$:fattr(target_tpl$)
                                read(glmAcctComments_dev,key=theFirm$,dom=*next)
                                while 1
                                    glmAcctComments_key$=key(glmAcctComments_dev,end=*break)
                                    if cvs(theFirm$,2)<>"" and pos(theFirm$=glmAcctComments_key$)<>1 then break
                                    readrecord(glmAcctComments_dev)glmAcctComments$
                                    if glmAcctComments.firm_id$+glmAcctComments.gl_account$<>currentFirm$+currentAccount$ then
                                        gosub writeGlmAcctMemo1024
                                        memo$=""
                                        currentAccount$=glmAcctComments.gl_account$
                                        if glmAcctComments.firm_id$<>currentFirm$ then
                                            rem --- Log next firm processed
                                            print(log_dev)"    GLM_ACCTCOMMENTS.FIRM_ID = "+glmAcctComments.firm_id$
                                            currentFirm$=glmAcctComments.firm_id$
                                        endif
                                    endif
                                    memo$=memo$+cvs(glmAcctComments.std_comments$,2)+$0A$
                                wend
                                gosub writeGlmAcctMemo1024
                                
                                close(source_dev,err=*next)
                            endif
                        next source
                    endif
                endif

                rem --- Execute GL upgrade conversion utility for minor releases of v17
                theFirm$=""
                call pgmdir$+"glc_v17initMinorRev.aon",theFirm$,rdForm!,status
                if status=0 then
                    rem --- Conversion completed successfully
                    rem --- Increment progress meter
                    meter_text$=Translate!.getTranslation("AON_DATA_CONV","Data conversion")+" "+
:                       Translate!.getTranslation("AON_COMPLETED_FOR","completed for")+": GLM_ACCTCOMMENTS"
                    meter_proc_recs=meter_proc_recs+1
                    meter_action$="MTR-LST"
                    gosub disp_meter
                    print(log_dev)meter_text$
                    write(convCtrlFileChan)task$+"=Completed"
            
                    rem --- Delete conversion marker files associated with this conversion
                    conv_marker_name$="v1800_glm-01"
                    conv_marker_file$=dataDir$+conv_marker_name$
                    convmarkerFile!=new File(conv_marker_file$)
                    if convmarkerFile!.exists() then
                        rem --- Delete conversion marker file
                        if convmarkerFile!.delete() then
                            rem --- Increment progress meter
                            meter_text$=Translate!.getTranslation("AON_CONV_MARKER_DELETED","Conversion marker file deleted")+": "+conv_marker_file$
                            meter_proc_recs=meter_proc_recs+1
                            meter_action$="MTR-LST"
                            gosub disp_meter
                            print(log_dev)meter_text$
                        endif
                    endif
                else
                    rem --- Conversion did NOT complete successfully, exit with error message
                    err_msg$="***** "+Translate!.getTranslation("AON_ERROR","Error")+": "+
:                       Translate!.getTranslation("AON_DATA_CONV","Data conversion")+" "+Translate!.getTranslation("AON_NOT","Not")+" "+
:                       Translate!.getTranslation("AON_COMPLETED_FOR","completed for")+": GLM_ACCTCOMMENTS"+" *****"
                    goto done
                endif
            else
                rem --- Increment progress meter
                meter_text$=Translate!.getTranslation("AON_CONV_PREVIOUSLY","Conversion previously completed for")+" "+task$
                meter_proc_recs=meter_proc_recs+1
                meter_action$="MTR-LST"
                gosub disp_meter
                print(log_dev)meter_text$
            endif
        else
            rem --- Increment progress meter
            meter_text$=this_module$+" "+Translate!.getTranslation("AON_NOT","Not")+" "+Translate!.getTranslation("AON_INSTALLED","Installed")+", "+
:               Translate!.getTranslation("AON_SKIP","SKIP")+" "+Translate!.getTranslation("AON_DO_DATA_CONV","Doing data conversion for")+" "+this_module$
            meter_proc_recs=meter_proc_recs+1
            meter_action$="MTR-LST"
            gosub disp_meter
            print(log_dev)meter_text$
        endif

        rem --- Initialize IV data file changes implemented during minor releases of v17
        this_module$="IV"
        if installMap!.get(this_module$)="Y" then 
            rem --- Increment progress meter
            meter_text$=this_module$+" "+Translate!.getTranslation("AON_INSTALLED","Installed")+", "+
:              Translate!.getTranslation("AON_DO_DATA_CONV","Doing data conversion for")+" "+this_module$
            meter_proc_recs=meter_proc_recs+1
            meter_action$="MTR-LST"
            gosub disp_meter
            print(log_dev)meter_text$
        
            task$="1800_IV_ivm-09"
            if convCtrl!.getProperty(task$)<>"Completed" then
                rem --- As of v17.10, DataPort handles initializing IVM_ITEMMAST.MEMO_1024 from IVM_ITEMCMTS (ivm-09)
                if convCtrl!.getProperty("data_source")="OCJ" then
                    rem --- Does IVM_ITEMCMTS (ivm-09) exists. It was deleted in v19.
                    open_success=0
                    ivm09_dev=unt
                    open(ivm09_dev,err=*next)dataDir$+"/ivm-09"; open_success=1
                    close(ivm09_dev,err=*next)
                    if !open_success then
                        rem --- Increment progress meter
                        meter_text$=Translate!.getTranslation("AON_UPDATING","Updating")+": IVM_ITEMMAST.MEMO_1024 "+
:                           Translate!.getTranslation("AON_FROM_","From ")+"IVM_ITEMCMTS"
                        meter_proc_recs=meter_proc_recs+1
                        meter_action$="MTR-LST"
                        gosub disp_meter
                        print(log_dev)meter_text$
        
                        rem --- Verify can read DDM_TABLE_TPLS for barista_source
                        ddm_table_tpls$=convCtrl!.getProperty("barista_source")+"/barista/sys/data/ddm_table_tpls.dat"
                        open_success=0
                        ddm_table_tpls=unt
                        open(ddm_table_tpls,err=*next)ddm_table_tpls$; open_success=1
                        if open_success then
                            dim ddm_table_tpls$:"table_name:c(16*),file_name:c(30*),template:c(10230*)"
                        else
                            rem --- Required file missing
                            msg_id$="AD_FILE_MISSING"
                            dim msg_tokens$[1]
                            msg_tokens$[1]=ddm_table_tpls$
                            gosub disp_message
                            err_msg$="***** "+Translate!.getTranslation("AON_ERROR","Error")+": "+
:                               Translate!.getTranslation("AON_FILE_NOT_FOUND","Required file not found")+": "+ddm_table_tpls$+" *****"
                            goto done
                        endif
    
                        rem --- Initialize IVM_ITEMMAST.MEMO_1024 from old source IVM_ITEMCMTS (ivm-09)
                        sourceFileVec!=BBjAPI().makeVector()
                        tableAliasVec!=BBjAPI().makeVector()
                        sourceFileVec!.addItem("ivm-09");tableAliasVec!.addItem("IVM_ITEMCMTS")
                        for source=0 to sourcefileVec!.size()-1
                            rem --- Does source file exist?
                            oldStbl$="+IVDATA"
                            oldFile$=sourceFileVec!.get(source)
                            tableAlias$=tableAliasVec!.get(source)
                            gosub get_path_to_old_file
                            source_file$=oldPathToFile$
                            open_success=0
                            source_dev=unt
                            open(source_dev,err=*next)source_file$; open_success=1
                            if open_success then
                                rem --- Get record template for source file
                                tpl_found=0
                                findrecord(ddm_table_tpls,key=pad(tableAlias$,16),dom=*next)ddm_table_tpls$;tpl_found=1
                                if tpl_found then
                                    dim source_tpl$:ddm_table_tpls.template$
                                else
                                    rem --- Required template missing
                                    err_msg$="***** "+Translate!.getTranslation("AON_ERROR","Error")+": "+Translate!.getTranslation("AON_VERSION","Verion")+" "+convCtrl!.getProperty("start_version")+
:                                       " "+Translate!.getTranslation("AON_TEMPLATE_NOT_FOUND","Template not found")+": "+tableAlias$+" *****"
                                    goto done
                                endif
            
                                rem --- Open file in new data dictionary
                                num_files=1
                                dim open_tables$[1:num_files],open_opts$[1:num_files],open_chans$[1:num_files],open_tpls$[1:num_files]
                                open_tables$[1]="IVM_ITEMMAST", open_opts$[1]="OTA"
                                gosub open_tables
                                target_dev=num(open_chans$[1])
                                dim target_tpl$:open_tpls$[1]
    
                                rem --- Build new IVM_ITEMMAST.MEMO_1024 field from IVM_ITEMCMTS (ivm-09) table
                                currentFirm$=""
                                currentItem$=""
                                memo$=""
                                ivmItemCmts_dev=source_dev
                                dim ivmItemCmts$:fattr(source_tpl$)
                                ivmItemMast_dev=target_dev
                                dim ivmItemMast$:fattr(target_tpl$)
                                read(ivmItemCmts_dev,key=theFirm$,dom=*next)
                                while 1
                                    ivmItemCmts_key$=key(ivmItemCmts_dev,end=*break)
                                    if cvs(theFirm$,2)<>"" and pos(theFirm$=ivmItemCmts_key$)<>1 then break
                                    readrecord(ivmItemCmts_dev)ivmItemCmts$
                                    if ivmItemCmts.firm_id$+ivmItemCmts.item_id$<>currentFirm$+currentItem$ then
                                        gosub writeIvmItemMastMemo1024
                                        memo$=""
                                        currentItem$=ivmItemCmts.item_id$
                                        if ivmItemCmts.firm_id$<>currentFirm$ then
                                            rem --- Log next firm processed
                                            print(log_dev)"    IVM_ITEMCMTS.FIRM_ID = "+ivmItemCmts.firm_id$
                                            currentFirm$=ivmItemCmts.firm_id$
                                        endif
                                    endif
                                    memo$=memo$+cvs(ivmItemCmts.std_comments$,2)+$0A$
                                wend
                                gosub writeIvmItemMastMemo1024
                                
                                close(source_dev,err=*next)
                            endif
                        next source
                    endif
                endif

                rem --- Execute IV upgrade conversion utility for minor releases of v17
                theFirm$=""
                call pgmdir$+"ivc_v17initMinorRev.aon",theFirm$,rdForm!,status
                if status=0 then
                    rem --- Conversion completed successfully
                    rem --- Increment progress meter
                    meter_text$=Translate!.getTranslation("AON_DATA_CONV","Data conversion")+" "+
:                       Translate!.getTranslation("AON_COMPLETED_FOR","completed for")+": IVM_ITEMCMTS"
                    meter_proc_recs=meter_proc_recs+1
                    meter_action$="MTR-LST"
                    gosub disp_meter
                    print(log_dev)meter_text$
                    write(convCtrlFileChan)task$+"=Completed"
            
                    rem --- Delete conversion marker files associated with this conversion
                    conv_marker_name$="v1800_ivm-01"
                    conv_marker_file$=dataDir$+conv_marker_name$
                    convmarkerFile!=new File(conv_marker_file$)
                    if convmarkerFile!.exists() then
                        rem --- Delete conversion marker file
                        if convmarkerFile!.delete() then
                            rem --- Increment progress meter
                            meter_text$=Translate!.getTranslation("AON_CONV_MARKER_DELETED","Conversion marker file deleted")+": "+conv_marker_file$
                            meter_proc_recs=meter_proc_recs+1
                            meter_action$="MTR-LST"
                            gosub disp_meter
                            print(log_dev)meter_text$
                        endif
                    endif
                else
                    rem --- Conversion did NOT complete successfully, exit with error message
                    err_msg$="***** "+Translate!.getTranslation("AON_ERROR","Error")+": "+
:                       Translate!.getTranslation("AON_DATA_CONV","Data conversion")+" "+Translate!.getTranslation("AON_NOT","Not")+" "+
:                       Translate!.getTranslation("AON_COMPLETED_FOR","completed for")+": IVM_ITEMCMTS"+" *****"
                    goto done
                endif
            else
                rem --- Increment progress meter
                meter_text$=Translate!.getTranslation("AON_CONV_PREVIOUSLY","Conversion previously completed for")+" "+task$
                meter_proc_recs=meter_proc_recs+1
                meter_action$="MTR-LST"
                gosub disp_meter
                print(log_dev)meter_text$
            endif
        else
            rem --- Increment progress meter
            meter_text$=this_module$+" "+Translate!.getTranslation("AON_NOT","Not")+" "+Translate!.getTranslation("AON_INSTALLED","Installed")+", "+
:               Translate!.getTranslation("AON_SKIP","SKIP")+" "+Translate!.getTranslation("AON_DO_DATA_CONV","Doing data conversion for")+" "+this_module$
            meter_proc_recs=meter_proc_recs+1
            meter_action$="MTR-LST"
            gosub disp_meter
            print(log_dev)meter_text$
        endif
     
        rem --- Initialize OP data file changes implemented during minor releases of v17
        this_module$="OP"
        if installMap!.get(this_module$)="Y" then 
            task$="1800_OP_opm-04"
            if convCtrl!.getProperty(task$)<>"Completed" then
                rem --- Increment progress meter
                meter_text$=this_module$+" "+Translate!.getTranslation("AON_INSTALLED","Installed")+", "+
:                   Translate!.getTranslation("AON_DO_DATA_CONV","Doing data conversion for")+" "+this_module$
                meter_proc_recs=meter_proc_recs+1
                meter_action$="MTR-LST"
                gosub disp_meter
                print(log_dev)meter_text$
    
                rem --- As of v17.10, DataPort handles initializing OPC_MESSAGE from OPC_MSG_HDR (opm-04) and OPC_MSG_DET (opm-14)
                if convCtrl!.getProperty("data_source")="OCJ" then
                    rem --- Do OPC_MSG_HDR (opm-04) and OPC_MSG_DET (opm-14) exists. They were deleted in v19.
                    open_success=0
                    opm04_dev=unt
                    open(opm04_dev,err=*next)dataDir$+"/opm-04"; open_success=1
                    if !open_success then
                        rem --- Increment progress meter
                        meter_text$=Translate!.getTranslation("AON_UPDATING","Updating")+": OPC_MESSAGE "+
:                           Translate!.getTranslation("AON_FROM_","From ")+"OPC_MSG_HDR "+
:                           Translate!.getTranslation("AON_AND","and")+" OPC_MSG_DET"
                        meter_proc_recs=meter_proc_recs+1
                        meter_action$="MTR-LST"
                        gosub disp_meter
                        print(log_dev)meter_text$
        
                        rem --- Verify can read DDM_TABLE_TPLS for barista_source
                        ddm_table_tpls$=convCtrl!.getProperty("barista_source")+"/barista/sys/data/ddm_table_tpls.dat"
                        open_success=0
                        ddm_table_tpls=unt
                        open(ddm_table_tpls,err=*next)ddm_table_tpls$; open_success=1
                        if open_success then
                            dim ddm_table_tpls$:"table_name:c(16*),file_name:c(30*),template:c(10230*)"
                        else
                            rem --- Required file missing
                            msg_id$="AD_FILE_MISSING"
                            dim msg_tokens$[1]
                            msg_tokens$[1]=ddm_table_tpls$
                            gosub disp_message
                            err_msg$="***** "+Translate!.getTranslation("AON_ERROR","Error")+": "+
:                               Translate!.getTranslation("AON_FILE_NOT_FOUND","Required file not found")+": "+ddm_table_tpls$+" *****"
                            goto done
                        endif
    
                        rem --- Open old source OPC_MSG_HDR (opm-04) and OPC_MSG_DET (opm-14)
                        opcMsgHdr_dev=0
                        opcMsgDet_dev=0
                        sourceFileVec!=BBjAPI().makeVector()
                        tableAliasVec!=BBjAPI().makeVector()
                        sourceFileVec!.addItem("opm-04");tableAliasVec!.addItem("OPC_MSG_HDR")
                        sourceFileVec!.addItem("opm-14");tableAliasVec!.addItem("OPC_MSG_DET")
                        for source=0 to sourcefileVec!.size()-1
                            rem --- Does source file exist?
                            oldStbl$="+OPDATA"
                            oldFile$=sourceFileVec!.get(source)
                            tableAlias$=tableAliasVec!.get(source)
                            gosub get_path_to_old_file
                            source_file$=oldPathToFile$
                            open_success=0
                            source_dev=unt
                            open(source_dev,err=*next)source_file$; open_success=1
                            if open_success then
                                rem --- Get record template for source file
                                tpl_found=0
                                findrecord(ddm_table_tpls,key=pad(tableAlias$,16),dom=*next)ddm_table_tpls$;tpl_found=1
                                if tpl_found then
                                    dim source_tpl$:ddm_table_tpls.template$
                                else
                                    rem --- Required template missing
                                    err_msg$="***** "+Translate!.getTranslation("AON_ERROR","Error")+": "+Translate!.getTranslation("AON_VERSION","Verion")+" "+convCtrl!.getProperty("start_version")+
:                                       " "+Translate!.getTranslation("AON_TEMPLATE_NOT_FOUND","Template not found")+": "+tableAlias$+" *****"
                                    goto done
                                endif
                                
                                if tableAlias$="OPC_MSG_HDR" then
                                    opcMsgHdr_dev=source_dev
                                    dim opcMsgHdr$:fattr(source_tpl$)
                                endif
                                if tableAlias$="OPC_MSG_DET" then
                                    opcMsgDet_dev=source_dev
                                    dim opcMsgDet$:fattr(source_tpl$)
                                endif
                            endif
                        next source
            
                        if opcMsgHdr_dev then
                        rem --- Open file in new data dictionary
                            num_files=1
                            dim open_tables$[1:num_files],open_opts$[1:num_files],open_chans$[1:num_files],open_tpls$[1:num_files]
                            open_tables$[1]="OPC_MESSAGE", open_opts$[1]="OTA"
                            gosub open_tables
                            target_dev=num(open_chans$[1])
                            dim target_tpl$:open_tpls$[1]
            
                            rem --- Build new OPC_MESSAGE table from OPC_MSG_HDR and OPC_MSG_DET tables
                            currentFirm$=""
                            opcMessage_dev=target_dev
                            dim opcMessage$:fattr(target_tpl$)
                            read(opcMsgHdr_dev,key=theFirm$,dom=*next)
                            while 1
                                opcMsgHdr_key$=key(opcMsgHdr_dev,end=*break)
                                if cvs(theFirm$,2)<>"" and pos(theFirm$=opcMsgHdr_key$)<>1 then break
                                readrecord(opcMsgHdr_dev)opcMsgHdr$
                                if opcMsgHdr.firm_id$<>currentFirm$ then
                                    rem --- Log next firm processed
                                    print(log_dev)"    OPC_MSG_HDR.FIRM_ID = "+opcMsgHdr.firm_id$
                                    currentFirm$=opcMsgHdr.firm_id$
                                endif
                                readrecord(opcMessage_dev,key=opcMsgHdr_key$,dom=*next); continue; rem --- Do NOT overwrite existing OPC_MESSAGE records
                                memo$=""
                                if opcMsgDet_dev then
                                read(opcMsgDet_dev,key=opcMsgHdr_key$,dom=*next)
                                    while 1
                                        readrecord(opcMsgDet_dev,end=*break)opcMsgDet$
                                        if pos(opcMsgDet.firm_id$+opcMsgDet.message_code$=opcMsgHdr_key$)<>1 then break
                                        memo$=memo$+cvs(opcMsgDet.message_text$,2)+$0A$
                                    wend
                                endif
                                redim opcMessage$
                                opcMessage.firm_id$=opcMsgHdr.firm_id$
                                opcMessage.message_code$=opcMsgHdr.message_code$
                                opcMessage.code_desc$=opcMsgHdr.code_desc$
                                opcMessage.memo_1024$=memo$
                                writerecord(opcMessage_dev)opcMessage$
                            wend
                            close(opcMsgHdr_dev,err=*next)
                            close(opcMsgDet_dev,err=*next)
                        endif
                    endif
    
                    rem --- Does OPE_ORDCOMMENTS exists. It was deleted in v19.
                    status=1
                    open_success=0
                    apm09_dev=unt
                    open(apm09_dev,err=*next)dataDir$+"/ope_ordcomments"; open_success=1
                    close(apm09_dev,err=*next)
                    if !open_success then
                        rem --- Increment progress meter
                        meter_text$=Translate!.getTranslation("AON_UPDATING","Updating")+": OPT_INVHDR.MEMO_1024 "+
:                           Translate!.getTranslation("AON_FROM_","From ")+"OPE_ORDCOMMENTS"
                        meter_proc_recs=meter_proc_recs+1
                        meter_action$="MTR-LST"
                        gosub disp_meter
                        print(log_dev)meter_text$
        
                        rem --- Verify can read DDM_TABLE_TPLS for barista_source
                        ddm_table_tpls$=convCtrl!.getProperty("barista_source")+"/barista/sys/data/ddm_table_tpls.dat"
                        open_success=0
                        ddm_table_tpls=unt
                        open(ddm_table_tpls,err=*next)ddm_table_tpls$; open_success=1
                        if open_success then
                            dim ddm_table_tpls$:"table_name:c(16*),file_name:c(30*),template:c(10230*)"
                        else
                            rem --- Required file missing
                            msg_id$="AD_FILE_MISSING"
                            dim msg_tokens$[1]
                            msg_tokens$[1]=ddm_table_tpls$
                            gosub disp_message
                            err_msg$="***** "+Translate!.getTranslation("AON_ERROR","Error")+": "+
:                               Translate!.getTranslation("AON_FILE_NOT_FOUND","Required file not found")+": "+ddm_table_tpls$+" *****"
                            goto done
                        endif
    
                        rem --- Initialize OPT_INVHDR.MEMO_1024 from old OPE_ORDCOMMENTS
                        sourceFileVec!=BBjAPI().makeVector()
                        tableAliasVec!=BBjAPI().makeVector()
                        sourceFileVec!.addItem("ope_ordcomments");tableAliasVec!.addItem("OPE_ORDCOMMENTS")
                        for source=0 to sourcefileVec!.size()-1
                            rem --- Does source file exist?
                            oldStbl$="+OPDATA"
                            oldFile$=sourceFileVec!.get(source)
                            tableAlias$=tableAliasVec!.get(source)
                            gosub get_path_to_old_file
                            source_file$=oldPathToFile$
                            open_success=0
                            source_dev=unt
                            open(source_dev,err=*next)source_file$; open_success=1
                            if open_success then
                                rem --- Get record template for source file
                                tpl_found=0
                                findrecord(ddm_table_tpls,key=pad(tableAlias$,16),dom=*next)ddm_table_tpls$;tpl_found=1
                                if tpl_found then
                                    dim source_tpl$:ddm_table_tpls.template$
                                else
                                    rem --- Required template missing
                                    err_msg$="***** "+Translate!.getTranslation("AON_ERROR","Error")+": "+Translate!.getTranslation("AON_VERSION","Verion")+" "+convCtrl!.getProperty("start_version")+
:                                       " "+Translate!.getTranslation("AON_TEMPLATE_NOT_FOUND","Template not found")+": "+tableAlias$+" *****"
                                    goto done
                                endif
            
                                rem --- Open file in new data dictionary
                                num_files=1
                                dim open_tables$[1:num_files],open_opts$[1:num_files],open_chans$[1:num_files],open_tpls$[1:num_files]
                                open_tables$[1]="OPT_INVHDR", open_opts$[1]="OTA"
                                gosub open_tables
                                target_dev=num(open_chans$[1])
                                dim target_tpl$:open_tpls$[1]
        
                                rem --- Populate OPT_INVHDR new MEMO_1024 field from OPE_ORDCOMMENTS records
                                currentFirm$=""
                                currentCustomerOrder$=""
                                memo$=""
                                opeOrdComments_dev=source_dev
                                dim opeOrdComments$:fattr(source_tpl$)
                                optInvHdr_dev=target_dev
                                dim optInvHdr$:fattr(target_tpl$)
                                read(opeOrdComments_dev,key=theFirm$,dom=*next)
                                while 1
                                    opeOrdComments_key$=key(opeOrdComments_dev,end=*break)
                                    if cvs(theFirm$,2)<>"" and pos(theFirm$=opeOrdComments_key$)<>1 then break
                                    if pos(currentCustomerOrder$=opeOrdComments_key$)<>1 then
                                        if currentCustomerOrder$<>"" then gosub writeOptInvHdrMemo1024
                                        currentCustomerOrder$=opeOrdComments.firm_id$+opeOrdComments.ar_type$+opeOrdComments.customer_id$+opeOrdComments.order_no$
                                        memo$=cvs(opeOrdComments.comment$,2)+$0A$
                                    endif
                                    readrecord(opeOrdComments_dev)opeOrdComments$
                                    if opeOrdComments.firm_id$<>currentFirm$ then
                                        rem --- Log next firm processed
                                        print(log_dev)"    OPE_ORDCOMMENTS.FIRM_ID = "+opeOrdComments.firm_id$
                                        currentFirm$=opeOrdComments.firm_id$
                                    endif
                                    memo$=memo$+cvs(opeOrdComments.comment$,2)+$0A$
                                wend
                                if currentCustomerOrder$<>"" then gosub writeOptInvHdrMemo1024
    
                                close(source_dev,err=*next)
                            endif
                        next source
                    endif
                endif
    
                rem --- Execute OP upgrade conversion utility for minor releases of v17
                theFirm$=""
                call pgmdir$+"opc_v17initMinorRev.aon",theFirm$,rdForm!,status
                if status=0 then
                    rem --- Conversion completed successfully
                    rem --- Increment progress meter
                    meter_text$=Translate!.getTranslation("AON_DATA_CONV","Data conversion")+" "+
:                       Translate!.getTranslation("AON_COMPLETED_FOR","completed for")+": OPC_MESSAGE"
                    meter_proc_recs=meter_proc_recs+1
                    meter_action$="MTR-LST"
                    gosub disp_meter
                    print(log_dev)meter_text$
                else
                    rem --- Conversion did NOT complete successfully, exit with error message
                    err_msg$="***** "+Translate!.getTranslation("AON_ERROR","Error")+": "+
:                       Translate!.getTranslation("AON_DATA_CONV","Data conversion")+" "+Translate!.getTranslation("AON_NOT","Not")+" "+
:                       Translate!.getTranslation("AON_COMPLETED_FOR","completed for")+": OPC_MESSAGE"+" *****"
                    goto done
                endif
            else
                rem --- Increment progress meter
                meter_text$=Translate!.getTranslation("AON_CONV_PREVIOUSLY","Conversion previously completed for")+" "+task$
                meter_proc_recs=meter_proc_recs+1
                meter_action$="MTR-LST"
                gosub disp_meter
                print(log_dev)meter_text$
            endif
        else
            rem --- Increment progress meter
            meter_text$=this_module$+" "+Translate!.getTranslation("AON_NOT","Not")+" "+Translate!.getTranslation("AON_INSTALLED","Installed")+", "+
:               Translate!.getTranslation("AON_SKIP","SKIP")+" "+Translate!.getTranslation("AON_DO_DATA_CONV","Doing data conversion for")+" "+this_module$
            meter_proc_recs=meter_proc_recs+1
            meter_action$="MTR-LST"
            gosub disp_meter
            print(log_dev)meter_text$
        endif

        rem --- Initialize PO data file changes implemented during minor releases of v17
        this_module$="PO"
        if installMap!.get(this_module$)="Y" then 
            task$="1800_PO_pom-04"
            if convCtrl!.getProperty(task$)<>"Completed" then
                rem --- Increment progress meter
                meter_text$=this_module$+" "+Translate!.getTranslation("AON_INSTALLED","Installed")+", "+
:                   Translate!.getTranslation("AON_DO_DATA_CONV","Doing data conversion for")+" "+this_module$
                meter_proc_recs=meter_proc_recs+1
                meter_action$="MTR-LST"
                gosub disp_meter
                print(log_dev)meter_text$
        
                rem --- As of v17.10, DataPort handles initializing SEQUENCE_REF in PRIMARY key of POT_INVHDR (pot-05), POT_INVSEL (pot-15) and POT_INVDET (pot-25)
                rem --- As of v17.10, DataPort handles initializing POC_MESSAGE from POC_MSGCODE (pom-04) and PO_MSGLINE (pom-14)
                if convCtrl!.getProperty("data_source")="OCJ" then
    
                    rem --- Open ddm_tables and ddm_table_tpls in new install
                    num_files=2
                    dim open_tables$[1:num_files],open_opts$[1:num_files],open_chans$[1:num_files],open_tpls$[1:num_files]
                    open_tables$[1]="DDM_TABLES",open_opts$[1]="OTA"
                    open_tables$[2]="DDM_TABLE_TPLS",open_opts$[2]="OTA"
                    gosub open_tables
                    new_ddmTables=num(open_chans$[1]);dim new_ddmTables$:open_tpls$[1]
                    new_ddmTableTpls=num(open_chans$[2]);dim new_ddmTableTpls$:open_tpls$[2]
        
                    rem --- Open ddm_tables in old source
                    old_ddm_table$=convCtrl!.getProperty("barista_source")+"/barista/sys/data/ddm_tables.dat"
                    open_success=0
                    old_ddmTables=unt
                    open(old_ddmTables,err=*next)old_ddm_table$; open_success=1
                    if !open_success then
                        rem --- Required file missing
                        msg_id$="AD_FILE_MISSING"
                        dim msg_tokens$[1]
                        msg_tokens$[1]=old_ddm_table$
                        gosub disp_message
                        err_msg$="***** "+Translate!.getTranslation("AON_ERROR","Error")+": "+
:                           Translate!.getTranslation("AON_FILE_NOT_FOUND","Required file not found")+": "+old_ddm_table$+" *****"
                        goto done
                    endif
        
                    rem --- Open ddm_table_tpls in old source
                    old_ddm_table_tpls$=convCtrl!.getProperty("barista_source")+"/barista/sys/data/ddm_table_tpls.dat"
                    open_success=0
                    old_ddmTableTpls=unt
                    open(old_ddmTableTpls,err=*next)old_ddm_table_tpls$; open_success=1
                    if open_success then
                        dim old_ddmTableTpls$:"table_name:c(16*),file_name:c(30*),template:c(10230*)"
                    else
                        rem --- Required file missing
                        msg_id$="AD_FILE_MISSING"
                        dim msg_tokens$[1]
                        msg_tokens$[1]=old_ddm_table_tpls$
                        gosub disp_message
                        err_msg$="***** "+Translate!.getTranslation("AON_ERROR","Error")+": "+
:                           Translate!.getTranslation("AON_FILE_NOT_FOUND","Required file not found")+": "+old_ddm_table_tpls$+" *****"
                        goto done
                    endif
        
                    rem --- For v17.10, replace SEQUENCE_NO with SEQUENCE_REF in PRIMARY key of POT_INVHDR (pot-05)
        
                    rem --- Verify can read old pot-05 for addon_source
                    oldStbl$="+PODATA"
                    oldFile$="pot-05"
                    gosub get_path_to_old_file
                    old_pot05$=oldPathToFile$
                    open_success=0
                    old_pot05_dev=unt
                    open(old_pot05_dev,err=*next)old_pot05$; open_success=1
                    if !open_success then
                        rem --- Required file missing
                        msg_id$="AD_FILE_MISSING"
                        dim msg_tokens$[1]
                        msg_tokens$[1]=old_pot05$
                        gosub disp_message
                        err_msg$="***** "+Translate!.getTranslation("AON_ERROR","Error")+": "+
:                           Translate!.getTranslation("AON_FILE_NOT_FOUND","Required file not found")+": "+old_pot05$+" *****"
                        goto done
                    endif
        
                    rem --- Get record template for old pot-05 file
                    pot_table$="POT_INVHDR"
                    tpl_found=0
                    findrecord(old_ddmTableTpls,key=pad(pot_table$,16),dom=*next)old_ddmTableTpls$;tpl_found=1
                    if tpl_found then
                        dim old_pot05_tpl$:old_ddmTableTpls.template$
                        rem --- Skip if old template doesn't include sequence_no
                        x$=field(old_pot05_tpl$,"sequence_no",err=*endif)
            
                        rem --- Clear and open new pot-05 file
                        num_files=1
                        dim open_tables$[1:num_files],open_opts$[1:num_files],open_chans$[1:num_files],open_tpls$[1:num_files]
                        open_tables$[1]="POT_INVHDR", open_opts$[1]="IOTA"
                        gosub open_tables
                        pot_invhdr_dev=num(open_chans$[1])
                        dim pot_invhdr_tpl$:open_tpls$[1]
            
                        rem --- Copy old pot-05 records to new pot-05 setting sequence_ref
                        read(old_pot05_dev,key="",dom=*next)
                        while 1
                            readrecord(old_pot05_dev,end=*break)old_pot05_tpl$
                            redim pot_invhdr_tpl$
                            call pgmdir$+"adc_copyfile.aon",old_pot05_tpl$,pot_invhdr_tpl$,status
                            if status then break
                            pot_invhdr_tpl.sequence_ref$=old_pot05_tpl.sequence_no$
                            pot_invhdr_tpl$=field(pot_invhdr_tpl$)
                            writerecord(pot_invhdr_dev)pot_invhdr_tpl$
                        wend
                        if status then
                            rem --- Conversion did NOT complete successfully, exit with error message
                            err_msg$="***** "+Translate!.getTranslation("AON_ERROR","Error")+": "+
:                               Translate!.getTranslation("AON_DATA_CONV","Data conversion")+" "+Translate!.getTranslation("AON_NOT","Not")+" "+
:                               Translate!.getTranslation("AON_COMPLETED_FOR","completed for")+": POT_INVHDR (pot-05) *****"
                            goto done
                        endif
                    else
                        rem --- Required template missing
                        err_msg$="***** "+Translate!.getTranslation("AON_ERROR","Error")+": "+Translate!.getTranslation("AON_VERSION","Verion")+" "+convCtrl!.getProperty("start_version")+
:                           " "+Translate!.getTranslation("AON_TEMPLATE_NOT_FOUND","Template not found")+": "+ope_table$+" *****"
                        goto done
                    endif
        
                    rem --- For v17.10, replace SEQUENCE_NO with SEQUENCE_REF in PRIMARY key of POT_INVSEL (pot-15)
        
                    rem --- Verify can read old pot-15 for addon_source
                    oldStbl$="+PODATA"
                    oldFile$="pot-15"
                    gosub get_path_to_old_file
                    old_pot15$=oldPathToFile$
                    open_success=0
                    old_pot15_dev=unt
                    open(old_pot15_dev,err=*next)old_pot15$; open_success=1
                    if !open_success then
                        rem --- Required file missing
                        msg_id$="AD_FILE_MISSING"
                        dim msg_tokens$[1]
                        msg_tokens$[1]=old_pot15$
                        gosub disp_message
                        err_msg$="***** "+Translate!.getTranslation("AON_ERROR","Error")+": "+
:                           Translate!.getTranslation("AON_FILE_NOT_FOUND","Required file not found")+": "+old_pot15$+" *****"
                        goto done
                    endif
        
                    rem --- Get record template for old pot-15 file
                    pot_table$="POT_INVSEL"
                    tpl_found=0
                    findrecord(old_ddmTableTpls,key=pad(pot_table$,16),dom=*next)old_ddmTableTpls$;tpl_found=1
                    if tpl_found then
                        dim old_pot15_tpl$:old_ddmTableTpls.template$
                        rem --- Skip if old template doesn't include sequence_no
                        x$=field(old_pot15_tpl$,"sequence_no",err=*endif)
            
                        rem --- Clear and open new pot-15 file
                        num_files=1
                        dim open_tables$[1:num_files],open_opts$[1:num_files],open_chans$[1:num_files],open_tpls$[1:num_files]
                        open_tables$[1]="POT_INVSEL", open_opts$[1]="IOTA"
                        gosub open_tables
                        pot_invsel_dev=num(open_chans$[1])
                        dim pot_invsel_tpl$:open_tpls$[1]
            
                        rem --- Copy old pot-15 records to new pot-15 setting sequence_ref
                        read(old_pot15_dev,key="",dom=*next)
                        while 1
                            readrecord(old_pot15_dev,end=*break)old_pot15_tpl$
                            redim pot_invsel_tpl$
                            call pgmdir$+"adc_copyfile.aon",old_pot15_tpl$,pot_invsel_tpl$,status
                            if status then break
                            pot_invsel_tpl.sequence_ref$=old_pot15_tpl.sequence_no$
                            pot_invsel_tpl$=field(pot_invsel_tpl$)
                            writerecord(pot_invsel_dev)pot_invsel_tpl$
                        wend
                        if status then
                            rem --- Conversion did NOT complete successfully, exit with error message
                            err_msg$="***** "+Translate!.getTranslation("AON_ERROR","Error")+": "+
:                               Translate!.getTranslation("AON_DATA_CONV","Data conversion")+" "+Translate!.getTranslation("AON_NOT","Not")+" "+
:                               Translate!.getTranslation("AON_COMPLETED_FOR","completed for")+": POT_INVSEL (pot-15) *****"
                            goto done
                        endif
                    else
                        rem --- Required template missing
                        err_msg$="***** "+Translate!.getTranslation("AON_ERROR","Error")+": "+Translate!.getTranslation("AON_VERSION","Verion")+" "+convCtrl!.getProperty("start_version")+
:                           " "+Translate!.getTranslation("AON_TEMPLATE_NOT_FOUND","Template not found")+": "+ope_table$+" *****"
                        goto done
                    endif
        
                    rem --- For v17.10, replace SEQUENCE_NO with SEQUENCE_REF in PRIMARY key of POT_INVDET (pot-25)
        
                    rem --- Verify can read old pot-25 for addon_source
                    oldStbl$="+PODATA"
                    oldFile$="pot-25"
                    gosub get_path_to_old_file
                    old_pot25$=oldPathToFile$
                    open_success=0
                    old_pot25_dev=unt
                    open(old_pot25_dev,err=*next)old_pot25$; open_success=1
                    if !open_success then
                        rem --- Required file missing
                        msg_id$="AD_FILE_MISSING"
                        dim msg_tokens$[1]
                        msg_tokens$[1]=old_pot25$
                        gosub disp_message
                        err_msg$="***** "+Translate!.getTranslation("AON_ERROR","Error")+": "+
:                           Translate!.getTranslation("AON_FILE_NOT_FOUND","Required file not found")+": "+old_pot25$+" *****"
                        goto done
                    endif
        
                    rem --- Get record template for old pot-25 file
                    pot_table$="POT_INVDET"
                    tpl_found=0
                    findrecord(old_ddmTableTpls,key=pad(pot_table$,16),dom=*next)old_ddmTableTpls$;tpl_found=1
                    if tpl_found then
                        dim old_pot25_tpl$:old_ddmTableTpls.template$
                        rem --- Skip if old template doesn't include sequence_no
                        x$=field(old_pot25_tpl$,"sequence_no",err=*endif)
            
                        rem --- Clear and open new pot-25 file
                        num_files=1
                        dim open_tables$[1:num_files],open_opts$[1:num_files],open_chans$[1:num_files],open_tpls$[1:num_files]
                        open_tables$[1]="POT_INVDET", open_opts$[1]="IOTA"
                        gosub open_tables
                        pot_invdet_dev=num(open_chans$[1])
                        dim pot_invdet_tpl$:open_tpls$[1]
            
                        rem --- Copy old pot-25 records to new pot-25 setting sequence_ref
                        read(old_pot25_dev,key="",dom=*next)
                        while 1
                            readrecord(old_pot25_dev,end=*break)old_pot25_tpl$
                            redim pot_invdet_tpl$
                            call pgmdir$+"adc_copyfile.aon",old_pot25_tpl$,pot_invdet_tpl$,status
                            if status then break
                            pot_invdet_tpl.sequence_ref$=old_pot25_tpl.sequence_no$
                            pot_invdet_tpl$=field(pot_invdet_tpl$)
                            writerecord(pot_invdet_dev)pot_invdet_tpl$
                        wend
                        if status then
                            rem --- Conversion did NOT complete successfully, exit with error message
                            err_msg$="***** "+Translate!.getTranslation("AON_ERROR","Error")+": "+
:                               Translate!.getTranslation("AON_DATA_CONV","Data conversion")+" "+Translate!.getTranslation("AON_NOT","Not")+" "+
:                               Translate!.getTranslation("AON_COMPLETED_FOR","completed for")+": POT_INVDET (pot-25) *****"
                            goto done
                        endif
                    else
                        rem --- Required template missing
                        err_msg$="***** "+Translate!.getTranslation("AON_ERROR","Error")+": "+Translate!.getTranslation("AON_VERSION","Verion")+" "+convCtrl!.getProperty("start_version")+
:                           " "+Translate!.getTranslation("AON_TEMPLATE_NOT_FOUND","Template not found")+": "+ope_table$+" *****"
                        goto done
                    endif
        
                    rem --- Do POC_MSGCODE (pom-04) and POC_MSGLINE (pom-14) exists. They were deleted in v19.
                    open_success=0
                    pom04_dev=unt
                    open(pom04_dev,err=*next)dataDir$+"/pom-04"; open_success=1
                    if !open_success then
                        rem --- Increment progress meter
                        meter_text$=Translate!.getTranslation("AON_UPDATING","Updating")+": POC_MESSAGE "+
:                           Translate!.getTranslation("AON_FROM_","From ")+"POC_MSGCODE "+
:                           Translate!.getTranslation("AON_AND","and")+" POC_MSGLINE"
                        meter_proc_recs=meter_proc_recs+1
                        meter_action$="MTR-LST"
                        gosub disp_meter
                        print(log_dev)meter_text$
        
                        rem --- Verify can read DDM_TABLE_TPLS for barista_source
                        ddm_table_tpls$=convCtrl!.getProperty("barista_source")+"/barista/sys/data/ddm_table_tpls.dat"
                        open_success=0
                        ddm_table_tpls=unt
                        open(ddm_table_tpls,err=*next)ddm_table_tpls$; open_success=1
                        if open_success then
                            dim ddm_table_tpls$:"table_name:c(16*),file_name:c(30*),template:c(10230*)"
                        else
                            rem --- Required file missing
                            msg_id$="AD_FILE_MISSING"
                            dim msg_tokens$[1]
                            msg_tokens$[1]=ddm_table_tpls$
                            gosub disp_message
                            err_msg$="***** "+Translate!.getTranslation("AON_ERROR","Error")+": "+
:                               Translate!.getTranslation("AON_FILE_NOT_FOUND","Required file not found")+": "+ddm_table_tpls$+" *****"
                            goto done
                        endif
    
                        rem --- Open old source POC_MSGCODE (pom-04) and POC_MSGLINE (pom-14)
                        opcMsgHdr_dev=0
                        opcMsgDet_dev=0
                        sourceFileVec!=BBjAPI().makeVector()
                        tableAliasVec!=BBjAPI().makeVector()
                        sourceFileVec!.addItem("pom-04");tableAliasVec!.addItem("POC_MSGCODE")
                        sourceFileVec!.addItem("pom-14");tableAliasVec!.addItem("POC_MSGLINE")
                        for source=0 to sourcefileVec!.size()-1
                            rem --- Does source file exist?
                            oldStbl$="+PODATA"
                            oldFile$=sourceFileVec!.get(source)
                            tableAlias$=tableAliasVec!.get(source)
                            gosub get_path_to_old_file
                            source_file$=oldPathToFile$
                            open_success=0
                            source_dev=unt
                            open(source_dev,err=*next)source_file$; open_success=1
                            if open_success then
                                rem --- Get record template for source file
                                tpl_found=0
                                findrecord(ddm_table_tpls,key=pad(tableAlias$,16),dom=*next)ddm_table_tpls$;tpl_found=1
                                if tpl_found then
                                    dim source_tpl$:ddm_table_tpls.template$
                                else
                                    rem --- Required template missing
                                    err_msg$="***** "+Translate!.getTranslation("AON_ERROR","Error")+": "+Translate!.getTranslation("AON_VERSION","Verion")+" "+convCtrl!.getProperty("start_version")+
:                                       " "+Translate!.getTranslation("AON_TEMPLATE_NOT_FOUND","Template not found")+": "+tableAlias$+" *****"
                                    goto done
                                endif
                                
                                if tableAlias$="POC_MSGCODE" then
                                    pocMsgCode_dev=source_dev
                                    dim pocMsgCode$:fattr(source_tpl$)
                                endif
                                if tableAlias$="POC_MSGLINE" then
                                    pocMsgLine_dev=source_dev
                                    dim pocMsgLine$:fattr(source_tpl$)
                                endif
                            endif
                        next source
            
                        if opcMsgHdr_dev then
                        rem --- Open file in new data dictionary
                            num_files=1
                            dim open_tables$[1:num_files],open_opts$[1:num_files],open_chans$[1:num_files],open_tpls$[1:num_files]
                            open_tables$[1]="POC_MESSAGE", open_opts$[1]="OTA"
                            gosub open_tables
                            target_dev=num(open_chans$[1])
                            dim target_tpl$:open_tpls$[1]
        
                            rem --- Build new POC_MESSAGE table from POC_MSGCODE and POC_MSGLINE tables
                            currentFirm$=""
                            pocMessage_dev=target_dev
                            dim pocMessage$:fattr(target_tpl$)
                            read(pocMsgCode_dev,key=theFirm$,dom=*next)
                            while 1
                                pocMsgCode_key$=key(pocMsgCode_dev,end=*break)
                                if cvs(theFirm$,2)<>"" and pos(theFirm$=pocMsgCode_key$)<>1 then break
                                readrecord(pocMsgCode_dev)pocMsgCode$
                                if pocMsgCode.firm_id$<>currentFirm$ then
                                    rem --- Log next firm processed
                                    print(log_dev)"    POC_MSGCODE.FIRM_ID = "+pocMsgCode.firm_id$
                                    currentFirm$=pocMsgCode.firm_id$
                                endif
                                readrecord(pocMessage_dev,key=pocMsgCode_key$,dom=*next); continue; rem --- Do NOT overwrite existing POC_MESSAGE records
                                memo$=""
                                read(pocMsgLine_dev,key=pocMsgCode_key$,dom=*next)
                                while 1
                                    readrecord(pocMsgLine_dev,end=*break)pocMsgLine$
                                    if pos(pocMsgLine.firm_id$+pocMsgLine.po_msg_code$=pocMsgCode_key$)<>1 then break
                                    memo$=memo$+cvs(pocMsgLine.message_text$,2)+$0A$
                                wend
                                redim pocMessage$
                                pocMessage.firm_id$=pocMsgCode.firm_id$
                                pocMessage.po_msg_code$=pocMsgCode.po_msg_code$
                                pocMessage.code_desc$=pocMsgCode.code_desc$
                                pocMessage.message_type$=pocMsgCode.message_type$
                                pocMessage.code_inactive$=pocMsgCode.code_inactive$
                                pocMessage.memo_1024$=memo$
                                writerecord(pocMessage_dev)pocMessage$
                            wend
                            close(pocMsgCode_dev_dev,err=*next)
                            close(pocMsgLine_dev,err=*next)
                        endif
                    endif
                endif
    
                rem --- Execute PO upgrade conversion utility for minor releases of v17
                theFirm$=""
                call pgmdir$+"poc_v17initMinorRev.aon",theFirm$,rdForm!,status
                if status=0 then
                    rem --- Conversion completed successfully
                    rem --- Increment progress meter
                    meter_text$=Translate!.getTranslation("AON_DATA_CONV","Data conversion")+" "+
:                       Translate!.getTranslation("AON_COMPLETED_FOR","completed for")+": POC_MESSAGE"
                    meter_proc_recs=meter_proc_recs+1
                    meter_action$="MTR-LST"
                    gosub disp_meter
                    print(log_dev)meter_text$
                    write(convCtrlFileChan)task$+"=Completed"
                else
                    rem --- Conversion did NOT complete successfully, exit with error message
                    err_msg$="***** "+Translate!.getTranslation("AON_ERROR","Error")+": "+
:                       Translate!.getTranslation("AON_DATA_CONV","Data conversion")+" "+Translate!.getTranslation("AON_NOT","Not")+" "+
:                       Translate!.getTranslation("AON_COMPLETED_FOR","completed for")+": POC_MESSAGE"+" *****"
                    goto done
                endif
            else
                rem --- Increment progress meter
                meter_text$=Translate!.getTranslation("AON_CONV_PREVIOUSLY","Conversion previously completed for")+" "+task$
                meter_proc_recs=meter_proc_recs+1
                meter_action$="MTR-LST"
                gosub disp_meter
                print(log_dev)meter_text$
            endif
        else
            rem --- Increment progress meter
            meter_text$=this_module$+" "+Translate!.getTranslation("AON_NOT","Not")+" "+Translate!.getTranslation("AON_INSTALLED","Installed")+", "+
:               Translate!.getTranslation("AON_SKIP","SKIP")+" "+Translate!.getTranslation("AON_DO_DATA_CONV","Doing data conversion for")+" "+this_module$
            meter_proc_recs=meter_proc_recs+1
            meter_action$="MTR-LST"
            gosub disp_meter
            print(log_dev)meter_text$
        endif

        rem --- Initialize SF data file changes implemented during minor releases of v17
        this_module$="SF"
        if installMap!.get(this_module$)="Y" then 
            rem --- Increment progress meter
            meter_text$=this_module$+" "+Translate!.getTranslation("AON_INSTALLED","Installed")+", "+
:                   Translate!.getTranslation("AON_DO_DATA_CONV","Doing data conversion for")+" "+this_module$
            meter_proc_recs=meter_proc_recs+1
            meter_action$="MTR-LST"
            gosub disp_meter
            print(log_dev)meter_text$

            task$="1800_SF_sfe-07"
            if convCtrl!.getProperty(task$)<>"Completed" then
                rem --- As of v17.10, DataPort handles initializing SFE_WOMASTR.MEMO_1024 from SFE_WOCOMNT (sfe-07)
                if convCtrl!.getProperty("data_source")="OCJ" then
                    rem --- Does SFE_WOCOMNT (sfe-07) exists. It was deleted in v19.
                    open_success=0
                    sfe07_dev=unt
                    open(sfe07_dev,err=*next)dataDir$+"/sfe-07"; open_success=1
                    close(sfe07_dev,err=*next)
                    if !open_success then
                        rem --- Increment progress meter
                        meter_text$=Translate!.getTranslation("AON_UPDATING","Updating")+": SFE_WOMASTR.MEMO_1024 "+
:                           Translate!.getTranslation("AON_FROM_","From ")+"SFE_WOCOMNT"
                        meter_proc_recs=meter_proc_recs+1
                        meter_action$="MTR-LST"
                        gosub disp_meter
                        print(log_dev)meter_text$
        
                        rem --- Verify can read DDM_TABLE_TPLS for barista_source
                        ddm_table_tpls$=convCtrl!.getProperty("barista_source")+"/barista/sys/data/ddm_table_tpls.dat"
                        open_success=0
                        ddm_table_tpls=unt
                        open(ddm_table_tpls,err=*next)ddm_table_tpls$; open_success=1
                        if open_success then
                            dim ddm_table_tpls$:"table_name:c(16*),file_name:c(30*),template:c(10230*)"
                        else
                            rem --- Required file missing
                            msg_id$="AD_FILE_MISSING"
                            dim msg_tokens$[1]
                            msg_tokens$[1]=ddm_table_tpls$
                            gosub disp_message
                            err_msg$="***** "+Translate!.getTranslation("AON_ERROR","Error")+": "+
:                               Translate!.getTranslation("AON_FILE_NOT_FOUND","Required file not found")+": "+ddm_table_tpls$+" *****"
                            goto done
                        endif
    
                        rem --- Initialize SFE_WOMASTR.MEMO_1024 from old source SFE_WOCOMNT (sfe-07)
                        sourceFileVec!=BBjAPI().makeVector()
                        tableAliasVec!=BBjAPI().makeVector()
                        sourceFileVec!.addItem("sfe-07");tableAliasVec!.addItem("SFE_WOCOMNT")
                        for source=0 to sourcefileVec!.size()-1
                            rem --- Does source file exist?
                            oldStbl$="+SFDATA"
                            oldFile$=sourceFileVec!.get(source)
                            tableAlias$=tableAliasVec!.get(source)
                            gosub get_path_to_old_file
                            source_file$=oldPathToFile$
                            open_success=0
                            source_dev=unt
                            open(source_dev,err=*next)source_file$; open_success=1
                            if open_success then
                                rem --- Get record template for source file
                                tpl_found=0
                                findrecord(ddm_table_tpls,key=pad(tableAlias$,16),dom=*next)ddm_table_tpls$;tpl_found=1
                                if tpl_found then
                                    dim source_tpl$:ddm_table_tpls.template$
                                else
                                    rem --- Required template missing
                                    err_msg$="***** "+Translate!.getTranslation("AON_ERROR","Error")+": "+Translate!.getTranslation("AON_VERSION","Verion")+" "+convCtrl!.getProperty("start_version")+
:                                       " "+Translate!.getTranslation("AON_TEMPLATE_NOT_FOUND","Template not found")+": "+tableAlias$+" *****"
                                    goto done
                                endif
            
                                rem --- Open file in new data dictionary
                                num_files=1
                                dim open_tables$[1:num_files],open_opts$[1:num_files],open_chans$[1:num_files],open_tpls$[1:num_files]
                                open_tables$[1]="SFE_WOMASTR", open_opts$[1]="OTA"
                                gosub open_tables
                                target_dev=num(open_chans$[1])
                                dim target_tpl$:open_tpls$[1]
    
                                rem --- Build new SFE_WOMASTR.MEMO_1024 field from SFE_WOCOMNT (sfe-07) table
                                currentFirm$=""
                                currentLocation$=""
                                currentWO$=""
                                memo$=""
                                sfeWOComnt_dev=source_dev
                                dim sfeWOComnt$:fattr(source_tpl$)
                                sfeWOMastr_dev=target_dev
                                dim sfeWOMastr$:fattr(target_tpl$)
                                read(sfeWOComnt_dev,key=theFirm$,dom=*next)
                                while 1
                                    sfeWOComnt_key$=key(sfeWOComnt_dev,end=*break)
                                    if cvs(theFirm$,2)<>"" and pos(theFirm$=sfeWOComnt_key$)<>1 then break
                                    readrecord(sfeWOComnt_dev)sfeWOComnt$
                                    if sfeWOComnt.firm_id$+sfeWOComnt.wo_location$+sfeWOComnt.wo_no$<>currentFirm$+currentLocation$+currentWO$ then
                                        gosub writeSfeWOMastrMemo1024
                                        memo$=""
                                        currentLocation$=sfeWOComnt.wo_location$
                                        currentWO$=sfeWOComnt.wo_no$
                                        if sfeWOComnt.firm_id$<>currentFirm$ then
                                            rem --- Log next firm processed
                                            print(log_dev)"    SFE_WOCOMNT.FIRM_ID = "+sfeWOComnt.firm_id$
                                            currentFirm$=sfeWOComnt.firm_id$
                                        endif
                                    endif
                                    memo$=memo$+cvs(sfeWOComnt.ext_comments$,2)+$0A$
                                wend
                                gosub writeSfeWOMastrMemo1024
                                
                                close(source_dev,err=*next)
                            endif
                        next source
                    endif
                endif
    
                rem --- Execute SF upgrade conversion utility for minor releases of v17
                theFirm$=""
                call pgmdir$+"sfc_v17initMinorRev.aon",theFirm$,rdForm!,status
                if status=0 then
                    rem --- Conversion completed successfully
                    rem --- Increment progress meter
                    meter_text$=Translate!.getTranslation("AON_DATA_CONV","Data conversion")+" "+
:                       Translate!.getTranslation("AON_COMPLETED_FOR","completed for")+": SFE_WOCOMNT"
                    meter_proc_recs=meter_proc_recs+1
                    meter_action$="MTR-LST"
                    gosub disp_meter
                    print(log_dev)meter_text$
                    write(convCtrlFileChan)task$+"=Completed"
            
                    rem --- Delete conversion marker files associated with this conversion
                    conv_marker_name$="v1800_woe-01"
                    conv_marker_file$=dataDir$+conv_marker_name$
                    convmarkerFile!=new File(conv_marker_file$)
                    if convmarkerFile!.exists() then
                        rem --- Delete conversion marker file
                        if convmarkerFile!.delete() then
                            rem --- Increment progress meter
                            meter_text$=Translate!.getTranslation("AON_CONV_MARKER_DELETED","Conversion marker file deleted")+": "+conv_marker_file$
                            meter_proc_recs=meter_proc_recs+1
                            meter_action$="MTR-LST"
                            gosub disp_meter
                            print(log_dev)meter_text$
                        endif
                    endif
                else
                    rem --- Conversion did NOT complete successfully, exit with error message
                    err_msg$="***** "+Translate!.getTranslation("AON_ERROR","Error")+": "+
:                       Translate!.getTranslation("AON_DATA_CONV","Data conversion")+" "+Translate!.getTranslation("AON_NOT","Not")+" "+
:                       Translate!.getTranslation("AON_COMPLETED_FOR","completed for")+": SFE_WOCOMNT"+" *****"
                    goto done
                endif
            else
                rem --- Increment progress meter
                meter_text$=Translate!.getTranslation("AON_CONV_PREVIOUSLY","Conversion previously completed for")+" "+task$
                meter_proc_recs=meter_proc_recs+1
                meter_action$="MTR-LST"
                gosub disp_meter
                print(log_dev)meter_text$
            endif
        else
            rem --- Increment progress meter
            meter_text$=this_module$+" "+Translate!.getTranslation("AON_NOT","Not")+" "+Translate!.getTranslation("AON_INSTALLED","Installed")+", "+
:               Translate!.getTranslation("AON_SKIP","SKIP")+" "+Translate!.getTranslation("AON_DO_DATA_CONV","Doing data conversion for")+" "+this_module$
            meter_proc_recs=meter_proc_recs+1
            meter_action$="MTR-LST"
            gosub disp_meter
            print(log_dev)meter_text$
        endif
    endif
	
done: rem --- Done, close things up

    rem --- Complete progress meter
    completed_successfully=0
    if err_msg$<>"" then
        meter_text$=err_msg$
    else
        meter_text$=Translate!.getTranslation("AON_CONV_COMPLETED","Conversions completed successfully")
        completed_successfully=1
    endif
    meter_proc_recs=meter_total_recs
    meter_action$="MTR-LST"
    gosub disp_meter
    print(log_dev)meter_text$
    
    rem --- Stop progress meter
    meter_text$=""
    meter_action$="LST-END"
    gosub disp_meter

    rem --- Complete and close log file
    print(log_dev)
    print(log_dev)"v1800conversion log finished: " + date(0:"%Yd-%Mz-%Dz@%Hz:%mz:%sz")
    close(log_dev)

    rem --- Close opened files
    if ddm_table_tpls then close(ddm_table_tpls,err=*next)
    if old_ddmTables then close(old_ddmTables,err=*next)
    if old_ddmTableTpls then close(old_ddmTableTpls,err=*next)

    if completed_successfully then conv_status=0; rem --- no errors encountered
	goto std_exit

writeApmVendMastMemo1024: rem --- Write APM_VENDMAST new MEMO_1024 field

    extractrecord(apmVendMast_dev,key=currentFirm$+currentVendor$,dom=*return)apmVendMast$
    apmVendMast.memo_1024$=memo$
    apmVendMast$=field(apmVendMast$)
    writerecord(apmVendMast_dev)apmVendMast$

    return

writeArmCustMastMemo1024: rem --- Write ARM_CUSTMAST new MEMO_1024 field

    extractrecord(armCustMast_dev,key=currentFirm$+currentCustomer$,dom=*return)armCustMast$
    armCustMast.memo_1024$=memo$
    armCustMast$=field(armCustMast$)
    writerecord(armCustMast_dev)armCustMast$

    return

writeBmmBillMastMemo1024: rem --- Write BMM_BILLMAST new MEMO_1024 field

    extractrecord(bmmBillMast_dev,key=currentFirm$+currentBill$,dom=*return)bmmBillMast$
    bmmBillMast.memo_1024$=memo$
    bmmBillMast$=field(bmmBillMast$)
    writerecord(bmmBillMast_dev)bmmBillMast$

    return
    
writeGlmAcctMemo1024: rem --- Write GLM_ACCT new MEMO_1024 field

    extractrecord(glmAcct_dev,key=currentFirm$+currentAccount$,dom=*return)glmAcct$
    glmAcct.memo_1024$=memo$
    glmAcct$=field(glmAcct$)
    writerecord(glmAcct_dev)glmAcct$

    return

writeIvmItemMastMemo1024: rem --- Write IVM_ITEMMAST new MEMO_1024 field

    extractrecord(ivmItemMast_dev,key=currentFirm$+currentItem$,dom=*return)ivmItemMast$
    ivmItemMast.memo_1024$=memo$
    ivmItemMast$=field(ivmItemMast$)
    writerecord(ivmItemMast_dev)ivmItemMast$

    return

writeOptInvHdrMemo1024: rem --- Write OPT_INVHDR new MEMO_1024 field

    read(optInvHdr_dev,key=currentCustomerOrder$,dom=*next)
    while 1
        optInvHdr_key$=key(optInvHdr_dev,end=*break)
        if pos(currentCustomerOrder$=optInvHdr_key$)<>1 then break
        extractrecord(optInvHdr_dev)optInvHdr$; rem Advisory Locking
        if cvs(optInvHdr.memo_1024$,2)="" then
            optInvHdr.memo_1024$=memo$
            writerecord(optInvHdr_dev)optInvHdr$
        else
            read(optInvHdr_dev)
        endif
    wend

    return

writeSfeWOMastrMemo1024: rem --- Write SFE_WOMASTR new MEMO_1024 field

    extractrecord(sfeWOMastr_dev,key=currentFirm$+currentLocation$+currentWO$,dom=*return)sfeWOMastr$
    sfeWOMastr.memo_1024$=memo$
    sfeWOMastr$=field(sfeWOMastr$)
    writerecord(sfeWOMastr_dev)sfeWOMastr$

    return

remove_from_xml: rem --- remove incorrect or not-used admin_backup/*.xml entries that came over from conversion sync file backup
    rem --- in: xml_file$, xml_key$
    file_exists=0
    xml_doc$=""
    xml_chan=unt
    open(xml_chan,err=*next)xml_file$; file_exists=1
    if file_exists then
        rem --- Get current XML document
        xml_fin$=fin(xml_chan)
        xml_size=dec($00$+xml_fin$(1,4))
        if xml_size
            readrecord(xml_chan,siz=xml_size)xml_doc$
        endif
        close(xml_chan)
    endif
    if xml_doc$<>"" then
        rem --- Snip out unwanted records
        start_pos=pos(xml_key$=xml_doc$)
        while start_pos
            end_pos=pos("</barista_record>"=xml_doc$(start_pos))
            if end_pos then
                xml_doc$=xml_doc$(1,start_pos-2)+xml_doc$(start_pos+end_pos+(len("</barista_record>")-1))
                start_pos=pos(xml_key$=xml_doc$)
            else
                start_pos=0
            endif
        wend

        rem --- Erase XML file if no records in the XML document, else save the updated XML document.
        if pos($09$+"<barista_record>"+$0a$=xml_doc$)=0 then
            erase xml_file$,err=*next
        else
            tmp_xml_file$=xml_file$+"~"+str(int(tim*100000):"0000000")+".tmp"
            rename xml_file$,tmp_xml_file$
            string xml_file$
    
            xml_chan=unt
            open (xml_chan)xml_file$
            write record(xml_chan)xml_doc$
            close(xml_chan)
    
            erase tmp_xml_file$
        endif
    endif
    return

initMemo1024: rem --- Initialize new MEMO_1024 field with old comment field
    rem --- IN: selectedFiles! - TreeMap of Vectors with needed info

    rem --- Initialize new MEMO_1024 field in selected files
    filesIter!=selectedFiles!.keySet().iterator()
    while filesIter!.hasNext()
        thisFile$=filesIter!.next()
        fileVec!=selectedFiles!.get(thisFile$)
        thisChan=fileVec!.getItem(0)
        dim thisTpl$:fileVec!.getItem(1)
        thisCmtField$=fileVec!.getItem(2)

        rem --- Populate new MEMO_1024 field with old comment field
        read(thisChan,key="",dom=*next)
        while 1
            extractrecord(thisChan,end=*break)thisTpl$; rem Advisory Locking
            comment$=cvs(field(thisTpl$,thisCmtField$),2)
            if comment$<>"" and cvs(thisTpl.memo_1024$,2)="" then
                thisTpl.memo_1024$=comment$
                writerecord(thisChan)thisTpl$
            else
                read(thisChan)
            endif
        wend
    wend

    return
    
get_path_to_old_file: rem --- Locate data directory in old Addon installation
    rem --- IN: oldStbl$ - STBL in old addon.syn that points to the data directory where the old file is located
    rem --- IN: oldFile$ - name of old file to get path for
    rem --- OUT: oldPathToFile$ - full path to requested file, including the file name
    oldPathToFile$=oldFile$

    rem --- Open old aon/config/addon.syn
    open_success=0
    old_addonsyn_dev=unt
    open(old_addonsyn_dev,isz=-1,err=*next)convCtrl!.getProperty("addon_source")+"/aon/config/addon.syn"; open_success=1
    if !open_success then return

    rem --- Get specified data directory from old addon.syn
    key$="=SET "+oldStbl$+"="
    while 1
        read(old_addonsyn_dev,end=*break)record$
        if(pos(key$=record$)) then
            xpos=pos(key$=record$)
            oldPathToFile$=record$(xpos+len(key$))+oldFile$
            break
        endif
    wend
    close(old_addonsyn_dev)

    return

open_log: rem --- Open log file
           
    rem --- create logs directory at location
    logDir$=FileObject.fixPath(location$ + "/logs", "/")
    FileObject.makeDirs(new File(logDir$))

    rem --- create and open log file
    log$=logDir$+"/v1800conversion_"+DATE(0:"%Yd%Mz%Dz")+"_"+DATE(0:"%Hz%mz")+".log"
    erase log$,err=*next
    string log$
    log_dev=unt
    open(log_dev)log$
            
    rem --- write log header info
    print(log_dev)"v1800conversion log started: " + date(0:"%Yd-%Mz-%Dz@%Hz:%mz:%sz")
    print(log_dev)

    return
    
disp_meter: rem --- Display Progress Meter

    rem --- sysGUI! is not declared in bam_prog_bar.bbj, so can't declare it here
    rem declare BBjSysGui sysGUI!
    sysGUI!=BBjAPI().getSysGui()

    rem --- rdForm! is not declared in bam_prog_bar.bbj, so can't declare it here
    rem declare BBjTopLevelWindow rdForm!

    rem --- meterWin! is not declared in bam_prog_bar.bbj, so can't declare it here
    rem declare BBjTopLevelWindow meterWin!

    call dir_syp$+"bam_prog_bar.bbj",
:       sysGUI!,
:       rdForm!,
:       meterWin!,
:       meter_title$,
:       meter_total_recs,
:       meter_proc_recs,
:       meter_text$,
:       meter_action$

    return
   
open_tables:rem --- Open Tables

    call stbl("+DIR_SYP")+"bac_open_tables.bbj",
:       open_beg,
:       open_end,
:       open_tables$[all],
:       open_opts$[all],
:       open_chans$[all],
:       open_tpls$[all],
:       rd_table_chans$[all],
:       open_batch,
:       open_status$

    if open_status$<>"" then
        msg_id$="ENTRY_OPEN_ERROR"
        dim msg_tokens$[1]
        msg_tokens$[1]=open_status$
        gosub disp_message
        rdFuncSpace!=bbjAPI().getGroupNamespace().setValue("+build_task","OFF")
        release
    endif
    return

disp_message: rem --- Display Message Dialog

    call stbl("+DIR_SYP")+"bac_message.bbj",msg_id$,msg_tokens$[all],msg_opt$,table_chans$[all]

    return

rem #include std_error.src

std_error: rem --- Standard error handler (11Oct2017)

    if tcb(19)>0
        rem --- Escape handler
        if and(chr(tcb(19)),$08$)=$08$
            release
        else
            setesc std_error
            return
        endif
    endif

    if err=0   
        rem --- Get tcb(12) and tcb(10) to send into bac_error
        lock_byte=tcb(10)
        lock_chan=tcb(12)  
    endif

    rd_err_text$="",err_num=err
    if tcb(2)=0 and tcb(5) then rd_err_text$=pgm(tcb(5),tcb(13),err=*next)
    if err_num=252 then
        E!=BBjAPI().getLastBBjException()
        rd_err_text$=rd_err_text$+$0A$+E!.getClass().getName()
        if E!.getMessage()<>null() then rd_err_text$=rd_err_text$+": "+E!.getMessage()
    endif
    call stbl("+DIR_SYP")+"bac_error.bbj",pgm(-2),str(tcb(5)),str(err_num),rd_err_text$,rd_err_act$,lock_byte,lock_chan
    if pos("ESCAPE"=rd_err_act$) seterr 0; setesc 0
    if pos("RETRY"=rd_err_act$) retry
    if pgm(-1)<>pgm(-2) status=999; exit 
    release

rem #endinclude std_error.src


rem #include std_exit.src

std_exit: rem --- Standard called program exit (01Mar2006)
    
    exit

rem #endinclude std_exit.src

    end
