rem --- adx_typesafe.aon
rem --- Call Barista programs with type-safe wrappers

rem --- AddonSoftware Version 8.0.0 - 20Jul2009
rem --- Copyright (c) 1981-2009 AddonSoftware
rem --- All Rights Reserved

rem --- Declare all objects

    declare BBjStandardGrid GridTemp!
    declare BBjVector ListVect!
    declare BBjTopLevelWindow Form!
    declare BBjVector OutVect!
    declare BBjVector BrkVect!
    declare BBjVector HdrVect!
    declare BBjVector TotVect!

rem ==========================================================================
grid_init: rem --- bam_grid_init.bbj
rem ==========================================================================

    seterr std_error
    setesc std_error

    enter
:       rd_gui_dev,
:       GridTemp!,
:       rd_flags$,
:       rd_num_rows,
:       rd_attr_def_col$[all],
:       rd_inq_disp_col$,
:       rd_attr_col$[all]

rem --- rdGridTemp! is undeclared

    rdGridTemp! = GridTemp!

    call stbl("+DIR_SYP")+"bam_grid_init.bbj",
:       rd_gui_dev,
:       rdGridTemp!,
:       rd_flags$,
:       rd_num_rows,
:       rd_attr_def_col$[all],
:       rd_inq_disp_col$,
:       rd_attr_col$[all],
:       null()

    exit

rem ==========================================================================
grid_init_w_list: rem --- bam_grid_init.bbj	with rdListVect!
rem ==========================================================================

    seterr std_error
    setesc std_error

    enter
:       rd_gui_dev,
:       GridTemp!,
:       rd_flags$,
:       rd_num_rows,
:       rd_attr_def_col$[all],
:       rd_inq_disp_col$,
:       rd_attr_col$[all],
:       ListVect!

rem --- rdGridTemp! is undeclared
rem --- rdListVect!

    rdGridTemp! = GridTemp!
    rdListVect! = ListVect!

    call stbl("+DIR_SYP")+"bam_grid_init.bbj",
:       rd_gui_dev,
:       rdGridTemp!,
:       rd_flags$,
:       rd_num_rows,
:       rd_attr_def_col$[all],
:       rd_inq_disp_col$,
:       rd_attr_col$[all],
:       rdListVect!

    exit

rem ==========================================================================
docout: rem --- bax_docout.bbj
rem ==========================================================================

    seterr std_error
    setesc std_error
    
    enter
:       Form!,
:       rd_alias_id$,
:       rep_date$,
:       rep_date_stamp$,
:       rep_time$,
:       rep_time_stamp$,
:       rep_prog_stamp$,
:       headings$[all],
:       columns$[all],
:       OutVect!,
:       BrkVect!,
:       HdrVect!,
:       TotVect!,
:       out_types$,
:       out_action$,
:       out_status$,
:       rd_table_chans$[all]
    
    rem --- Use the undeclared objects to call docout
    
    rdForm!    = Form!
    rdOutVect! = OutVect!
    rdBrkVect! = BrkVect!
    rdHdrVect! = HdrVect!
    rdTotVect! = TotVect!

    call stbl("+DIR_SYP")+"bax_docout.bbj",
:       rdForm!,
:       rd_alias_id$,
:       rep_date$,
:       rep_date_stamp$,
:       rep_time$,
:       rep_time_stamp$,
:       rep_prog_stamp$,
:       headings$[all],
:       columns$[all],
:       rdOutVect!,
:       rdBrkVect!,
:       rdHdrVect!,
:       rdTotVect!,
:       out_types$,
:       out_action$,
:       out_status$,
:       rd_table_chans$[all]

    exit

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) err_text$=pgm(tcb(5))
    call stbl("+DIR_SYP")+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5)),
:       str(err),err_text$,err_act$
    if pos("EXIT"=err_act$) goto std_error_exit
    if pos("ESCAPE"=err_act$) seterr 0;setesc 0
    if pos("RETRY"=err_act$) retry
std_error_exit: 
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release: 
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src

    end

