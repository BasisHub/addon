rem --- adx_typesafe.aon
rem --- Call Barista programs with type-safe wrappers

rem --- AddonSoftware Version 8.0.0 - 20Jul2009
rem --- Copyright BASIS International Ltd.  All Rights Reserved.
rem --- All Rights Reserved

rem --- Declare all objects

    declare BBjStandardGrid GridTemp!
    declare BBjVector ListVect!
    declare BBjTopLevelWindow Form!
    declare BBjVector OutVect!
    declare BBjVector BrkVect!
    declare BBjVector HdrVect!
    declare BBjVector TotVect!

rem ==========================================================================
grid_init: rem --- bam_grid_init.bbj
rem ==========================================================================

    seterr std_error
    setesc std_error

    enter
:       rd_gui_dev,
:       GridTemp!,
:       rd_flags$,
:       rd_num_rows,
:       rd_attr_def_col$[all],
:       rd_inq_disp_col$,
:       rd_attr_col$[all]

rem --- rdGridTemp! is undeclared

    rdGridTemp! = GridTemp!

    call stbl("+DIR_SYP")+"bam_grid_init.bbj",
:       rd_gui_dev,
:       rdGridTemp!,
:       rd_flags$,
:       rd_num_rows,
:       rd_attr_def_col$[all],
:       rd_inq_disp_col$,
:       rd_attr_col$[all],
:       null()

    exit

rem ==========================================================================
grid_init_w_list: rem --- bam_grid_init.bbj	with rdListVect!
rem ==========================================================================

    seterr std_error
    setesc std_error

    enter
:       rd_gui_dev,
:       GridTemp!,
:       rd_flags$,
:       rd_num_rows,
:       rd_attr_def_col$[all],
:       rd_inq_disp_col$,
:       rd_attr_col$[all],
:       ListVect!

rem --- rdGridTemp! is undeclared
rem --- rdListVect!

    rdGridTemp! = GridTemp!
    rdListVect! = ListVect!

    call stbl("+DIR_SYP")+"bam_grid_init.bbj",
:       rd_gui_dev,
:       rdGridTemp!,
:       rd_flags$,
:       rd_num_rows,
:       rd_attr_def_col$[all],
:       rd_inq_disp_col$,
:       rd_attr_col$[all],
:       rdListVect!

    exit

rem ==========================================================================
docout: rem --- bax_docout.bbj
rem ==========================================================================

    seterr std_error
    setesc std_error
    
    enter
:       Form!,
:       rd_alias_id$,
:       rep_date$,
:       rep_date_stamp$,
:       rep_time$,
:       rep_time_stamp$,
:       rep_prog_stamp$,
:       headings$[all],
:       columns$[all],
:       OutVect!,
:       BrkVect!,
:       HdrVect!,
:       TotVect!,
:       out_types$,
:       out_action$,
:       out_status$,
:       rd_table_chans$[all]
    
    rem --- Use the undeclared objects to call docout
    
    rdForm!    = Form!
    rdOutVect! = OutVect!
    rdBrkVect! = BrkVect!
    rdHdrVect! = HdrVect!
    rdTotVect! = TotVect!

    call stbl("+DIR_SYP")+"bax_docout.bbj",
:       rdForm!,
:       rd_alias_id$,
:       rep_date$,
:       rep_date_stamp$,
:       rep_time$,
:       rep_time_stamp$,
:       rep_prog_stamp$,
:       headings$[all],
:       columns$[all],
:       rdOutVect!,
:       rdBrkVect!,
:       rdHdrVect!,
:       rdTotVect!,
:       out_types$,
:       out_action$,
:       out_status$,
:       rd_table_chans$[all]

    exit
 
rem ==========================================================================
inquiry: rem --- bam_inquiry.bbj
rem ==========================================================================

    seterr std_error
    setesc std_error
    
    enter
:       rd_gui_dev,
:       Form!,
:       rd_alias_id$,
:       rd_inq_mode$,
:       rd_table_chans$[all],
:       rd_key_pfx$,
:       rd_key_id$,
:       rd_selected_key$,
:       rd_filter_defs$[all],
:       rd_search_defs$[all]

rem --- rdBaseWin! is undeclared

    rdBaseWin! = Form!
 
    call stbl("+DIR_SYP")+"bam_inquiry.bbj",    
:       rd_gui_dev,
:       rdBaseWin!,
:       rd_alias_id$,
:       rd_inq_mode$,
:       rd_table_chans$[all],
:       rd_key_pfx$,
:       rd_key_id$,
:       rd_selected_key$,
:       rd_filter_defs$[all],
:       rd_search_defs$[all]
    
    exit
    
rem #include std_error.src

std_error: rem --- Standard error handler (11Oct2017)

    if tcb(19)>0
        rem --- Escape handler
        if and(chr(tcb(19)),$08$)=$08$
            release
        else
            setesc std_error
            return
        endif
    endif

    if err=0   
        rem --- Get tcb(12) and tcb(10) to send into bac_error
        lock_byte=tcb(10)
        lock_chan=tcb(12)  
    endif

    rd_err_text$="",err_num=err
    if tcb(2)=0 and tcb(5) then rd_err_text$=pgm(tcb(5),tcb(13),err=*next)
    if err_num=252 then
        E!=BBjAPI().getLastBBjException()
        rd_err_text$=rd_err_text$+$0A$+E!.getClass().getName()
        if E!.getMessage()<>null() then rd_err_text$=rd_err_text$+": "+E!.getMessage()
    endif
    call stbl("+DIR_SYP")+"bac_error.bbj",pgm(-2),str(tcb(5)),str(err_num),rd_err_text$,rd_err_act$,lock_byte,lock_chan
    if pos("ESCAPE"=rd_err_act$) seterr 0; setesc 0
    if pos("RETRY"=rd_err_act$) retry
    if pgm(-1)<>pgm(-2) status=999; exit 
    release

rem #endinclude std_error.src

    end

