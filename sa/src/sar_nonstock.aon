rem --- Program sar_nonstock v8.0.0 16Jul2007 (sar_nonstock)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright BASIS International Ltd.  All Rights Reserved.
rem --- All Rights Reserved

    seterr std_error
    setesc std_error

rem --- Retrieve system information

    sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=*next)
    firm_id$=sysinfo.firm_id$

    milestone=50
    milestone=num(stbl("+MILESTONE",err=*next))

rem --- Get info from selection form

    from_prod$=option!.getOptionData("PRODUCT_TYPE_1")
    thru_prod$=option!.getOptionData("PRODUCT_TYPE_2")
    from_item$=option!.getOptionData("NONSTOCK_NO_1")
    thru_item$=option!.getOptionData("NONSTOCK_NO_2")
    year$=option!.getOptionData("CURRENT_YEAR")
    period$=option!.getOptionData("CURRENT_PER")
    report$=option!.getOptionData("TWLVE_PER_REPORT")
    su$=option!.getOptionData("SALES_UNITS")
    seq$=option!.getOptionData("SEQ_SA")
    level$=option!.getOptionData("SA_LEVEL")
    break$=option!.getOptionData("PAGE_BREAK")
    zero$=option!.getOptionData("INC_ZERO_SLS")
    myp$=""
    if option!.getOptionData("MTD") = "Y" then myp$=myp$+"M"
    if option!.getOptionData("YTD") = "Y" then myp$=myp$+"Y"
    if option!.getOptionData("PRIOR") = "Y" myp$=myp$+"P"
    export_fmt$=Option!.getOptionData("EXPORT_FMT")
    rd_alias_id$=Option!.getAlias()    
    
    if export_fmt$="Y" then
        if len(rd_alias_id$)>15 then rd_alias_id$=rd_alias_id$(1,15)
        rd_alias_id$=rd_alias_id$+"X"
    endif

rem --- Open/Lock Files

    files=2,begfile=1,endfile=files
    dim files$[files],options$[files],ids$[files],templates$[files],channels[files]
    files$[1]="saw-11",options$[1]="CL",ids$[1]="SAW_NONSTOCK"; rem Lock work file for Advisory Locking
    files$[2]="sam-11",ids$[2]="SAM_NONSTOCK"
    call pgmdir$+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],
:                                   ids$[all],templates$[all],channels[all],batch,status
    if status goto std_exit
    saw00_dev=channels[1]
    sam00_dev=channels[2]
    
    file_name$ = "SAM_NONSTOCK"
    sam_dev    = fnget_dev(file_name$)
    sam_tpl$   = fnget_tpl$(file_name$)

rem --- Run Sales Analysis by Product/Non-Stock Item    

    action=11
    run pgmdir$+"sar_ab.aon"

rem --- Functions

	def fnget_dev(tmp0$)=num(rd_table_chans$[0,0](pos(tmp0$=rd_table_chans$[0,0],20)+17,3))
	def fnget_tpl$(tmp0$)=rd_table_chans$[int(pos(tmp0$=rd_table_chans$[0,0],20)/20)+1,0]

rem #endinclude std_functions.src

rem #include std_error.src

std_error: rem --- Standard error handler (11Oct2017)

    if tcb(19)>0
        rem --- Escape handler
        if and(chr(tcb(19)),$08$)=$08$
            release
        else
            setesc std_error
            return
        endif
    endif

    if err=0   
        rem --- Get tcb(12) and tcb(10) to send into bac_error
        lock_byte=tcb(10)
        lock_chan=tcb(12)  
    endif

    rd_err_text$="",err_num=err
    if tcb(2)=0 and tcb(5) then rd_err_text$=pgm(tcb(5),tcb(13),err=*next)
    if err_num=252 then
        E!=BBjAPI().getLastBBjException()
        rd_err_text$=rd_err_text$+$0A$+E!.getClass().getName()
        if E!.getMessage()<>null() then rd_err_text$=rd_err_text$+": "+E!.getMessage()
    endif
    call stbl("+DIR_SYP")+"bac_error.bbj",pgm(-2),str(tcb(5)),str(err_num),rd_err_text$,rd_err_act$,lock_byte,lock_chan
    if pos("ESCAPE"=rd_err_act$) seterr 0; setesc 0
    if pos("RETRY"=rd_err_act$) retry
    if pgm(-1)<>pgm(-2) status=999; exit 
    release

rem #endinclude std_error.src

rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:                                   str(err:"000"),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    run pgmdir$+"ads_process_end.aon",err=*next
    release
rem #endinclude std_end.src

    end
