rem --- Purge Check Work File
rem --- Program prx_ga v8.0.0 03Jun2008 (prx_ga)
rem --- Created by c:\codeport_bbj\adx_codeport.bbj v1.1.5 (06/03/2008 04:34:52)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright (c) 1981-2007 AddonSoftware
rem --- All Rights Reserved


    seterr std_error
    setesc std_error

rem --- Retrieve the program path

    pgmdir$=stbl("+DIR_PGM",err=*next)

rem --- Retrieve sysinfo data

    sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=*next)
    milestone=num(stbl("+MILESTONE",err=*next),err=*next)
    firm_id$=sysinfo.firm_id$

rem --- Open/Lock files

    files=2,begfile=1,endfile=files
    dim files$[files],options$[files],ids$[files],templates$[files],channels[files]
    files$[1]="prs_params",ids$[1]="PRS_PARAMS"
    files$[2]="prw-01",ids$[2]="PRW_CHCKWORK"
    call pgmdir$+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],
:                                   ids$[all],templates$[all],channels[all],batch,status
    if status goto std_exit
    prsparams_dev=channels[1]
    prw01a_dev=channels[2]

rem --- Initializations

    more=1

rem --- Retrieve key templates

    call stbl("+DIR_SYP")+"bac_key_template.bbj","PRW_CHCKWORK","PRIMARY",prw01_key_tpl$,rd_table_chans$[all],status$
   

rem --- Dimension string templates

    dim prs01a$:templates$[1],prw01a$:templates$[2]

rem --- Assign form input values to local variables

    value_01$=Option!.getOptionData("form_value_01")

rem --- Retrieve parameter records

    prs01a_key$=firm_id$+"PR00"
    find record (prsparams_dev,key=prs01a_key$,err=std_missing_params) prs01a$


rem --- Parameters

    firm_id$=sysinfo.firm_id$
 
rem --- Options

    v4$="Do You Wish To Purge The Check Work File"
    call pgmdir$+"adc_yesno.aon",0,v4$,0,v$,v3
    if v$<>"YES" then goto std_exit

    call pgmdir$+"adc_progress.aon","CN","","","","",0,prw01_dev,1,meter_num,ignore_status
   
rem --- GET KEY

    read (prw01_dev,key=firm_id$,dom=*next)
    dim prw01_key$:prw01_key_tpl$
    while more
        prw01_key$=key(prw01_dev,end=done)
        read (prw01_dev)
        if prw01_key.firm_id$<>firm_id$ then continue
        call pgmdir$+"adc_progress.aon","S","","","","",0,0,1,meter_num,ignore_status
        remove (prw01_dev,key=prw01_key$)
    wend

done: rem --- All done

    goto std_exit

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    call stbl("+DIR_SYP")+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:                                str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src
rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:                                   str(err:"000"),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    run stbl("+DIR_SYP")+"bas_process_end.bbj",err=*next
    release

rem #endinclude std_end.src

    end
