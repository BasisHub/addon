rem --- Employee Maintenance Listing 3
rem --- Program prr_empmntlist_o2 v8.0.0 23Jun2008 (prr_zc)
rem --- Created by c:\codeport_bbj\adx_codeport.bbj v1.1.5 (06/23/2008 03:29:12)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright BASIS International Ltd.  All Rights Reserved.
rem --- All Rights Reserved

    setesc std_error
    seterr std_error

rem --- Retrieve the program path

    pgmdir$=stbl("+DIR_PGM",err=*next)

rem --- Retrieve sysinfo data

    sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=*next)
    milestone=num(stbl("+MILESTONE",err=*next),err=*next)
    firm_id$=sysinfo.firm_id$


rem --- Initializations

	call stbl("+DIR_PGM")+"adc_getmask.aon","","PR","U","",m2$,0,m2
	call stbl("+DIR_PGM")+"adc_getmask.aon","","PR","R","",m3$,0,m3
    q8$=m2$
    q9$="######.00-",q9=len(q9$)
    call pgmdir$+"adc_sizemask.aon",q8$,q8,10,10

rem --- Print Name & Address

    gosub emp_subhead
    OutVect!.addItem("")
    v$="Employee Information"; gosub subtitle
    dim pbuf$(80)
    pbuf$(6)="Address1: "+prm01a.addr_line_1$
    pbuf$(42)="Alt Sequence: "+prm01a.alt_sequence$
    OutVect!.addItem(pbuf$)

    dim pbuf$(80)
    pbuf$(6)="Address2: "+prm01a.addr_line_2$
    pbuf$(51)="Sex: "+prm01a.sex$
    OutVect!.addItem(pbuf$)

    dim pbuf$(80)
    pbuf$(4)="City/State: "+prm01a.city$+prm01a.state_code$
    pbuf$(50)="Race: "+prm01a.race$
    OutVect!.addItem(pbuf$)

    dim pbuf$(80)
    pbuf$(4)="Zip/Postal: "+fnzipcode$(prm01a.zip_code$)
    pbuf$(51)="M/S: "+prm01a.marital_sts$
    OutVect!.addItem(pbuf$)

    dim pbuf$(80)
    pbuf$(4)="Home Phone: "+fnmask$(prm01a.home_phone$,m8$)
    pbuf$(44)="Birth Date: "+fndate$(prm01a.birth_date$)
    OutVect!.addItem(pbuf$)

    dim pbuf$(80)
    pbuf$(4)="Work Phone: "+fnmask$(prm01a.work_phone$,m8$)
    pbuf$(31)="Ext: "+prm01a.work_extens$
    pbuf$(45)="Hire Date: "+fndate$(prm01a.hire_date$)
    OutVect!.addItem(pbuf$)

    dim pbuf$(80)
    pbuf$(4)="Soc-Sec-No: "+fnmask$(prm01a.soc_sec_no$,m9$)
    pbuf$(44)="Anniv Date: "+fndate$(prm01a.anniv_date$)
    OutVect!.addItem(pbuf$)

    dim pbuf$(80)
    pbuf$(43)="Review Date: "+fndate$(prm01a.review_date$)
    OutVect!.addItem(pbuf$)
    
    dim pbuf$(80)
    pbuf$(1)="Emerg Contact: "+prm01a.emer_contact$
    pbuf$(45)="Term Date: "+fndate$(prm01a.term_date$)
    OutVect!.addItem(pbuf$)

    dim pbuf$(80)
    pbuf$(6)="Relation: "+prm01a.emer_relate$
    pbuf$(45)="Term Code: "+prm01a.term_code$
    OutVect!.addItem(pbuf$)
    
    dim pbuf$(80)
    pbuf$(3)="Emerg Phone: "+fnmask$(prm01a.emer_phone$,m8$)
    pbuf$(37)="Normal Pay Period: "+prm01a.pay_period$
    OutVect!.addItem(pbuf$)

    dim pbuf$(80)
    pbuf$(10)="Memo: "+prm01a.empl_memo$
    pbuf$(39)="Home Department: "+prm01a.dept_code$
    OutVect!.addItem(pbuf$)

    dim pbuf$(80)
    if prs01a.union_hist$="Y" then pbuf$(4)="Union Code: "+prm01a.union_code$
    pbuf$(42)="Normal Title: "+prm01a.union_code$
    OutVect!.addItem(pbuf$)

    dim pbuf$(80)
    pbuf$(39)="Hourly/Salaried: "+prm01a.hrlysalary$
    OutVect!.addItem(pbuf$)

    dim pbuf$(80)
    pbuf$(42)="Pension Plan: "+prm01a.pension_plan$
    OutVect!.addItem(pbuf$)

    dim pbuf$(80)
    pbuf$(40)="Full/Part Time: "+prm01a.full_or_part$
    OutVect!.addItem(pbuf$)
    
rem --- Pay Rate
    
    OutVect!.addItem("")
    v$="Pay Rate Maintenance"; gosub subtitle
    read (prm02a_dev,key=prm01a.firm_id$+prm01a.employee_no$,dom=*next)
    
    dim pbuf$(80)
    pbuf$(6)="Title ID:"
    pbuf$(26+m3)="Rate"
    pbuf$(25+m3+m2)="Hours"
    OutVect!.addItem(pbuf$)

    while more
        k$=key(prm02a_dev,end=*break)
        if pos(prm01a.firm_id$+prm01a.employee_no$=k$)<>1 then break
        read record (prm02a_dev) prm02a$
        x$="**Not On File**"
        find record (prm10f_dev,key=firm_id$+"F"+prm02a.title_code$,dom=label1) prm10f$
        x$=prm10f.code_desc$
    label1:
        dim pbuf$(80)
        pbuf$(6)=prm02a.title_code$+" "+x$
        pbuf$(31)=str(prm02a.std_rate:m3$)+str(prm02a.std_hrs:m2$)
        OutVect!.addItem(pbuf$)
    wend
    

rem --- Pay Change

    OutVect!.addItem("")
    v$="Pay Change Maintenance"; gosub subtitle
    read (prm12a_dev,key=prm01a.firm_id$+prm01a.employee_no$,dom=*next)

    dim pbuf$(80)
    pbuf$(13)="Date"
    pbuf$(26+m3)="Rate"
    pbuf$(25+m3+m2)="Hours"
    OutVect!.addItem(pbuf$)

    while more
        k$=key(prm12a_dev,end=*break)
        if pos(prm01a.firm_id$+prm01a.employee_no$=k$)<>1 then break
        read record (prm12a_dev) prm12a$
        dim pbuf$(80)
        pbuf$(11)=fndate$(prm12a.new_chg_date$)
        pbuf$(31)=str(prm12a.new_chg_rate:m3$)+str(prm12a.new_chg_hrs:m2$)
        OutVect!.addItem(pbuf$)
    wend
    
rem --- Pay Codes

    OutVect!.addItem("")
    v$="Pay Code Maintenance"; gosub subtitle
    read (prt01a_dev,key=prm01a.firm_id$+prm01a.employee_no$+"A",dom=*next)
    while more
        k$=key(prt01a_dev,end=*break)
        if pos(prm01a.firm_id$+prm01a.employee_no$+"A"=k$)<>1 then break
        read record (prt01a_dev) prt01a$
        x$="**Not On File**"
        find record (prm10a_dev,key=firm_id$+"A"+prt01a.pay_code$,dom=label2) prm10a$
        x$=prm10a.pr_code_desc$
label2:
                   
        dim pbuf$(80)
        pbuf$(1)="Pay Code: "+prt01a.pay_code$+" "+x$
        OutVect!.addItem(pbuf$)

        dim pbuf$(80)
        pbuf$(11+q9-6)="M-T-D"
        pbuf$(11+2*q9-6)="Qtr-1"
        pbuf$(11+3*q9-6)="Qtr-2"
        pbuf$(11+4*q9-6)="Qtr-3"
        pbuf$(11+5*q9-6)="Qtr-4"
        pbuf$(11+6*q9-6)="Y-T-D"
        pbuf$(11+7*q9-8)="Next Mo"
        OutVect!.addItem(pbuf$)

        dim pbuf$(80)
        pbuf$(2)="Dollars:"
        pbuf$(11)=str(prt01a.mtd_amount:q9$)+str(prt01a.qtr_amt_01:q9$)+str(prt01a.qtr_amt_02:q9$)+str(prt01a.qtr_amt_03:q9$)+str(prt01a.qtr_amt_04:q9$)+str(prt01a.qtr_amt_01+prt01a.qtr_amt_02+prt01a.qtr_amt_03+prt01a.qtr_amt_04:q9$)+str(prt01a.nmtd_amt:q9$)
        OutVect!.addItem(pbuf$)

        dim pbuf$(80)
        pbuf$(4)="Units:"
        pbuf$(11)=str(prt01a.nmtd_amt:q8$)+str(prt01a.qtr_units_01:q8$)+str(prt01a.qtr_units_02:q8$)+str(prt01a.qtr_units_03:q8$)+str(prt01a.qtr_units_04:q8$)+str(prt01a.qtr_units_01+prt01a.qtr_units_02+prt01a.qtr_units_03+prt01a.qtr_units_04:q8$)+str(prt01a.nmtd_units:q8$)
        OutVect!.addItem(pbuf$)

        dim pbuf$(80)
        pbuf$(11+q9-6)="Prior"
        pbuf$(11+2*q9-8)="Current"
        pbuf$(11+3*q9-5)="Next"
        pbuf$(11+3*q9+m3-5)="Rate"
        pbuf$(11+4*q9+m3-5)="Used"
        OutVect!.addItem(pbuf$)

        dim pbuf$(80)
        pbuf$(1)="Accruals:"
        pbuf$(11)=str(prt01a.pyr_acc_amt:q9$)+str(prt01a.cyr_accr_amt:q9$)+str(prt01a.nyr_acc_amt:q9$)+str(prt01a.accrual_rate:m3$)+str(prt01a.accrual_used:q9$)
        OutVect!.addItem(pbuf$)
        OutVect!.addItem("")
    wend

rem --- Deduction Codes

    v$="Deduction Code Maintenance"; gosub subtitle
    read (prt11a_dev,key=prm01a.firm_id$+prm01a.employee_no$+"B",dom=*next)
    while more
        k$=key(prt11a_dev,end=*break)
        if pos(prm01a.firm_id$+prm01a.employee_no$+"B"=k$)<>1 then break
        read record (prt11a_dev) prt11a$
        x$="**Not On File**"
        find record (prm10b_dev,key=firm_id$+"B"+prt11a.deduct_code$,dom=label3) prm10b$
        x$=prm10b.pr_code_desc$
label3:
        
        dim pbuf$(80)
        pbuf$(1)="Ded Code: "+prt11a.deduct_code$+" "+x$+" Per: "+prt11a.pers_taken$+" Auto: "+prt11a.auto_deduct$+" Rate:"+str(prt11a.nmtd_amt:m3$)+"Lmt:"+str(prt11a.max_limit:q9$)
        OutVect!.addItem(pbuf$)

        dim pbuf$(80)
        pbuf$(11+q9-6)="M-T-D"
        pbuf$(11+2*q9-6)="Qtr-1"
        pbuf$(11+3*q9-6)="Qtr-2"
        pbuf$(11+4*q9-6)="Qtr-3"
        pbuf$(11+5*q9-6)="Qtr-4"
        pbuf$(11+6*q9-6)="Y-T-D"
        pbuf$(11+7*q9-8)="Next Mo"
        OutVect!.addItem(pbuf$)

        dim pbuf$(80)
        pbuf$(2)="Dollars:"
        pbuf$(11)=str(prt11a.mtd_amount:q9$)+str(prt11a.qtr_amt_01:q9$)+str(prt11a.qtr_amt_02:q9$)+str(prt11a.qtr_amt_03:q9$)+str(prt11a.qtr_amt_04:q9$)+str(prt11a.qtr_amt_01+prt11a.qtr_amt_02+prt11a.qtr_amt_03+prt11a.qtr_amt_04:q9$)+str(prt11a.nmtd_amt:q9$)
        OutVect!.addItem(pbuf$)
        OutVect!.addItem("")
    wend

rem --- Tax Codes

    v$="Tax Code Maintenance"; gosub subtitle
    read (prt21a_dev,key=prm01a.firm_id$+prm01a.employee_no$+"C",dom=*next)
    while more
        k$=key(prt21a_dev,end=*break)
        if pos(prm01a.firm_id$+prm01a.employee_no$+"C"=k$)<>1 then break
        read record (prt21a_dev) prt21a$
        x$="**Not On File**"
        find record (prm10c_dev,key=firm_id$+"C"+prt21a.tax_code$,dom=label4) prm10c$
        x$=prm10c.pr_code_desc$
label4:
                    
        dim pbuf$(80)
        pbuf$(1)="Tax Code: "+prt11a.deduct_code$+" "+x$+" Per: "+prt11a.pers_taken$+" Auto: "+prt11a.auto_deduct$+" Rate:"+str(prt11a.nmtd_amt:m3$)+"Lmt:"+str(prt11a.max_limit:q9$)
        OutVect!.addItem(pbuf$)

        dim pbuf$(80)
        pbuf$(11+q9-6)="M-T-D"
        pbuf$(11+2*q9-6)="Qtr-1"
        pbuf$(11+3*q9-6)="Qtr-2"
        pbuf$(11+4*q9-6)="Qtr-3"
        pbuf$(11+5*q9-6)="Qtr-4"
        pbuf$(11+6*q9-6)="Y-T-D"
        pbuf$(11+7*q9-8)="Next Mo"
        OutVect!.addItem(pbuf$)

        dim pbuf$(80)
        pbuf$(4)="Gross:"
        pbuf$(11)=str(prt21a.mtd_gross:q9$)+str(prt21a.qtr_gross_01:q9$)+str(prt21a.qtr_gross_02:q9$)+str(prt21a.qtr_gross_03:q9$)+str(prt21a.qtr_gross_04:q9$)+str(prt21a.qtr_gross_01+prt21a.qtr_gross_02+prt21a.qtr_gross_03+prt21a.qtr_gross_04:q9$)+str(prt21a.nmtd_gross:q9$)
        OutVect!.addItem(pbuf$)

        dim pbuf$(80)
        pbuf$(2)="Taxable:"
        pbuf$(11)=str(prt21a.mtd_taxable:q9$)+str(prt21a.qtr_taxable_01:q9$)+str(prt21a.qtr_taxable_02:q9$)+str(prt21a.qtr_taxable_03:q9$)+str(qtr_taxable_04:q9$)+str(prt21a.qtr_taxable_01+prt21a.qtr_taxable_02+prt21a.qtr_taxable_03+prt21a.qtr_taxable_04:q9$)+str(prt21a.nmtd_taxable:q9$)
        OutVect!.addItem(pbuf$)

        dim pbuf$(80)
        pbuf$(6)="Tax:"
        pbuf$(11)=str(prt21a.mtd_tax:q9$)+str(prt21a.quarter_tax_01:q9$)+str(prt21a.quarter_tax_02:q9$)+str(prt21a.quarter_tax_03:q9$)+str(prt21a.quarter_tax_04:q9$)+str(prt21a.quarter_tax_01+prt21a.quarter_tax_02+prt21a.quarter_tax_03+prt21a.quarter_tax_04:q9$)+str(prt21a.nmtd_tax:q9$)
        OutVect!.addItem(pbuf$)
        OutVect!.addItem("")

    wend

rem --- Contribution Codes

    v$="Contribution Code Maintenance"; gosub subtitle
    read (prt31a_dev,key=prm01a.firm_id$+prm01a.employee_no$+"D",dom=*next)
    while more
        k$=key(prt31a_dev,end=*break)
        if pos(prm01a.firm_id$+prm01a.employee_no$+"D"=k$)<>1 then break
        read record (prt31a_dev) prt31a$
        x$="**Not On File**"
        find record (prm10d_dev,key=firm_id$+"D"+prt31a.contrib_code$,dom=label5) prm10d$
        x$=prm10d.pr_code_desc$
label5:
                    
        dim pbuf$(80)
        pbuf$(2)="Cont Cd: "+prt31a.contrib_code$+" "+x$+"  Periods: "+prt31a.pers_taken$+"  Rate: "+str(prt31a.calc_rtamt:m3$)
        OutVect!.addItem(pbuf$)

        dim pbuf$(80)
        pbuf$(11+q9-6)="M-T-D"
        pbuf$(11+2*q9-6)="Qtr-1"
        pbuf$(11+3*q9-6)="Qtr-2"
        pbuf$(11+4*q9-6)="Qtr-3"
        pbuf$(11+5*q9-6)="Qtr-4"
        pbuf$(11+6*q9-6)="Y-T-D"
        pbuf$(11+7*q9-8)="Next Mo"
        OutVect!.addItem(pbuf$)

        dim pbuf$(80)
        pbuf$(4)="Gross:"
        pbuf$(11)=str(prt31a.mtd_gross:q9$)+str(prt31a.qtr_gross_01:q9$)+str(prt31a.qtr_gross_02:q9$)+str(prt31a.qtr_gross_03:q9$)+str(prt31a.qtr_gross_04:q9$)+str(prt31a.qtr_gross_01+prt31a.qtr_gross_02+prt31a.qtr_gross_03+prt31a.qtr_gross_04:q9$)+str(prt31a.nmtd_gross:q9$)
        OutVect!.addItem(pbuf$)
        
        dim pbuf$(80)
        pbuf$(4)="Basis:"
        pbuf$(11)=str(prt31a.nmtd_basis:q9$)+str(prt31a.qtr_basis_01:q9$)+str(prt31a.qtr_basis_02:q9$)+str(prt31a.qtr_basis_03:q9$)+str(prt31a.qtr_basis_04:q9$)+str(prt31a.qtr_basis_01+prt31a.qtr_basis_02+prt31a.qtr_basis_03+prt31a.qtr_basis_04:q9$)+str(prt31a.nmtd_basis:q9$)
        OutVect!.addItem(pbuf$)
            
        dim pbuf$(80)
        pbuf$(2)="Contrib:"
        pbuf$(11)=str(prt31a.mtd_amount:q9$)+str(prt31a.qtr_contrib_01:q9$)+str(prt31a.qtr_contrib_02:q9$)+str(prt31a.qtr_contrib_03:q9$)+str(prt31a.qtr_contrib_04:q9$)+str(prt31a.qtr_contrib_01+prt31a.qtr_contrib_02+prt31a.qtr_contrib_03+prt31a.qtr_contrib_04:q9$)+str(prt31a.nmtd_amt:q9$)
        OutVect!.addItem(pbuf$)       
    wend

rem --- Next

    o9=1
    run pgmdir$+"prr_empmaintlist_o1.aon"
    
emp_subhead: rem --- Employee Subheading

    BrkVect!.addItem(str(OutVect!.size()/(columns+1)))

    dim pbuf$(80)
    pbuf$(3)="Employee No: "+fnmask$(prm01a.employee_no$,m0$)
    OutVect!.addItem(pbuf$)
    dim pbuf$(80)
    pbuf$(5)="Last Name: "+cvs(prm01a.empl_surname$,2)
    pbuf$(44)="First Name: "+prm01a.empl_givname$
    OutVect!.addItem(pbuf$)

    return

subtitle: rem --- Subtitle

    dim pbuf$(80)
    pbuf$(1)=fill(80,"-")
    pbuf$(15,len(v$))=v$
    OutVect!.addItem(pbuf$)
    return

rem #include std_functions.src
rem --- Standard AddonSoftware functions (01Mar2006)
rem --- Functions used to retrieve form values

    def fnstr_pos(q0$,q1$,q1)=int((pos(q0$=q1$,q1)+q1-1)/q1)
    def fnget_rec_date$(q0$)=rd_rec_data$[fnstr_pos(cvs(q0$,1+2+4)+"."+
:                            cvs(q0$,1+2+4),rd_rec_data$[0,0],40),0]
    def fnget_fld_data$(q0$,q1$)=cvs(rd_rec_data$[fnstr_pos(cvs(q0$,1+2+4)+"."+
:                                cvs(q1$,1+2+4),rd_rec_data$[0,0],40),0],2)
    def fnget_table$(q0$)=rd_alias_id$

rem --- Miscellaneous functions

    def fncenter(q$,q)=int((q-len(q$))/2)

rem --- Format inventory item description

    def fnitem$(q$,q1,q2,q3)=cvs(q$(1,q1)+" "+q$(q1+1,q2)+" "+q$(q1+q2+1,q3),32)

rem --- Format zip/postal code

    def fnzipcode$(q$)=fill(10,cvs(q$(1,3)+fill(pos("9"<q$(1,5))>0)+q$(4,2)+
:                      fill(ABS(pos("A">=q$(1,6))>0)-pos("0">q$(6,4))>0,"-")+
:                      q$(6,4)+fill(10),16))

rem --- Date/time handling functions

    def fndate$(q$)
        q1$=""
        q1$=date(jul(num(q$(1,4)),num(q$(5,2)),num(q$(7,2)),err=*next),err=*next)
        if q1$="" q1$=q$
        return q1$
    fnend
    
    def fnyy$(q$)=q$(3,2)
    def fnclock$(q$)=date(0:"%hz:%mz %p")
    def fntime$(q$)=date(0:"%Hz%mz")

rem --- fnmask$: Alphanumeric Masking Function (formerly fnf$)

    def fnmask$(q1$,q2$)
        if q2$="" q2$=fill(len(q1$),"0")
        return str(-num(q1$,err=*next):q2$,err=*next)
        q=1
        q0=0
        while len(q2$(q))
              if pos(q2$(q,1)="-()") q0=q0+1 else q2$(q,1)="X"
              q=q+1
        wend
        if len(q1$)>len(q2$)-q0 q1$=q1$(1,len(q2$)-q0)
        return str(q1$:q2$)
    fnend

rem --- fnbasename$: Strip path and optionally the suffix from a file name

    def fnbasename$(q$,q0$)
        q=max(pos("/"=q$,-1),pos(":"=q$,-1),pos(">"=q$,-1),pos("\"=q$,-1))
        if q then q$=q$(q+1)
        if q0$<>"" then q=mask(q$,q0$); if q q$=q$(1,q-1)
    return q$

rem --- fnglobal: Return numeric value of passed stbl variable

    def fnglobal(q$,q1)
        q1$=stbl(q$,err=*next),q1=num(q1$,err=*next)
        return q1
    fnend

rem --- fnglobal$: Return string value of passed STBL variable

    def fnglobal$(q$,q1$)
        q1$=stbl(q$,err=*next)
        return q1$
    fnend

rem #endinclude std_functions.src

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    call stbl("+DIR_SYP")+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:                                str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src
rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:                                   str(err:"000"),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    call pgmdir$+"adc_progress.aon","D","","","","",0,0,0,meter_num,status
    run stbl("+DIR_SYP")+"bas_process_end.bbj",err=*next
    release
rem #endinclude std_end.src

    end
