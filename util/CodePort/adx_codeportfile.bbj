rem adx - CodePort Program Conversion Utility (Source Program Overlay)
rem Program adx_codeportfile.bbj v8.0.0 12Oct2007
rem 
rem  +-----------------------------------------+
rem  | AddonSoftware Version 8.0.0 - 01Feb2006 |
rem  |  Copyright (c) 1981-2006 AddonSoftware  |
rem  |          All Rights Reserved            |
rem  +-----------------------------------------+
rem 
rem --- This program retrieves the name of the source program to be
rem --- converted from the srcFiles! vector. This program is run from the lead
rem --- overlay (adx_codeport), and when the current program has
rem --- been converted (adx_codeporterrs).
rem 

rem --- Process next file
process_next_file:
    filenum=filenum+1
    rd_meter_proc_recs=filenum
    rd_meter_action$="MTR-LST"
    gosub disp_meter
    if filenum=srcFiles!.size() then goto the_end;rem done
    filename$=srcFiles!.getItem(filenum)
    p=pos("."=filename$,-1)
    if p=0 then basename$=filename$
    if source_version=6
        basename$=cvs((filename$(1,p-1)+"_"+filename$(p+1)),8)
    else
        basename$=filename$(1,p-1)
        bbxfile$=source_dir$+filename$
    endif

    pgmdir$=outputdir$
    newfile$=outputdir$+basename$+"."+source_ext$

rem --- Does the output file already exist?
    if !overwrite_ok
        let src_dev=unt
        open (src_dev,err=next_overlay)newfile$
        close (src_dev)

rem --- Get user permission to overwrite existing file
        let prompt$="Output file "+newfile$+" already exists. OK to overwrite?"
        print (0,err=process_next_file)'ask'("CodePort",2,prompt$,"&Yes:Y"+$0D$,"&No:N"+$0D$,"&Exit:E"+$0D$)
        input x$
        if x$="N" then goto process_next_file
        if x$="E" then goto the_end
        rd_meter_data$="Overwriting "+newfile$
        rd_meter_action$="LST"
        gosub disp_meter
    endif

rem --- Run next overlay
next_overlay: 
    if source_version=6 then run "adc_oldport.bbj",err=the_end
    run "adx_codeportconv.bbj",err=the_end

disp_meter:rem --- Display Progress Meter

    call stbl("+DIR_SYP")+"bam_prog_bar.bbj",rdSysGUI!,rdForm!,rdMeterWin!,rd_meter_title$,rd_meter_total_recs,rd_meter_proc_recs,rd_meter_data$,rd_meter_action$
    print (log_dev)fndatestamp$(0),rd_meter_data$,cr$
    return

rem --- Functions
    def fndatestamp$(q)=date(0:"%Mz/%Dz/%Y %hz:%mz:%sz")+" "

rem --- Strip path and optionally the suffix from a file name
def fnbasename$(q$,q0$)
    let q=max(pos("/"=q$,-1),pos(":"=q$,-1),pos(">"=q$,-1),pos("\"=q$,-1))
    if q then let q$=q$(q+1)
    if q0$<>"" then let q=mask(q$,q0$); if q then let q$=q$(1,q-1)
    return q$
fnend

rem --- Exit utility
the_end: 
    run "adx_codeportexit.bbj",err=finished
finished: 
    end