rem adx - CodePort Program Conversion Utility (Exit Overlay)
rem Program adx_codeportexit.bbj v8.0.0 12Oct2007
rem 
rem  +-----------------------------------------+
rem  | AddonSoftware Version 8.0.0 - 01Feb2006 |
rem  |  Copyright (c) 1981-2006 AddonSoftware  |
rem  |          All Rights Reserved            |
rem  +-----------------------------------------+
rem 
rem --- This overlay performs all the exit processing for the
rem --- CodePort utility.
rem 

    setesc std_error
    seterr std_error

rem --- Log termination
    rd_meter_data$="Program conversion completed"
    rd_meter_action$="LST-END"
    gosub disp_meter

rem --- Close any open channels
    close_txt: close (txt_dev,err=close_src)
    close_src: close (src_dev,err=close_rep)
    close_rep: close (rep_dev,err=close_log)
    close_log: close (log_dev,err=close_lst)
    close_lst: close (lst_dev,err=delete_files)

rem --- Delete work files
delete_files: 
    if keepfiles then goto done
    remove_lbl: erase lblfile$,err=remove_lst
    remove_lst: erase lstfile$,err=done

rem --- All done
done: 
    goto the_end

disp_meter:rem --- Display Progress Meter

    call stbl("+DIR_SYP")+"bam_prog_bar.bbj",rdSysGUI!,rdForm!,rdMeterWin!,rd_meter_title$,rd_meter_total_recs,rd_meter_proc_recs,rd_meter_data$,rd_meter_action$
    print (log_dev)fndatestamp$(0),rd_meter_data$,cr$
    return

rem --- Functions
    def fndatestamp$(q)=DATE(0:"%Mz/%Dz/%Y %hz:%mz:%sz")+" "

std_error: rem --- Standard error handler (22Feb2013)

    if tcb(19)>0
        rem --- Escape handler
        if and(chr(tcb(19)),$08$)=$08$
            release
        else
            setesc std_error
            return
        endif
    endif

    rd_err_text$=""
    if tcb(2)=0 and tcb(5) then rd_err_text$=pgm(tcb(5),tcb(13),err=*next)
    call stbl("+DIR_SYP")+"bac_error.bbj",pgm(-2),str(tcb(5)),str(err),rd_err_text$,rd_err_act$
    if pos("ESCAPE"=rd_err_act$) seterr 0; setesc 0
    if pos("RETRY"=rd_err_act$) retry
    if pgm(-1)<>pgm(-2) status=999; exit 
    release

rem --- Exit utility
the_end: 
    release 
    rem end