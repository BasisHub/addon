rem AddonSoftware
rem Copyright BASIS International Ltd.
rem 
rem instead of read
rem This trigger assumes that it is being used in a non-modified Barista and Addon
rem Version 6 environment. If there have been any modifications to these systems,
rem be sure to thoroughly examine this trigger and test changes.

	setopts $080872202c2e$

	seterr throw_error
	
rem ---  Get the Trigger object from the BBj File System

    td! = BBjAPI().getFileSystem().getTriggerData()

	ky$=td!.getKey()
	
	myns!=BBjAPI().getGlobalNamespace()
	wkdir$ = myns!.getValue("work_dir")
	ivdir$ = myns!.getValue("gldata")

rem --- Template for the IVM-02 record being caught

	intemp$="firm_id:c(2),wh_id:c(2),item_id:c(20*=10),loc:c(10),cycle:c(2),"
	intemp$=intemp$+"dist_code:c(2),sel_phy:c(1),lst_phy:c(3),buyer:c(3),vend_id:c(6),"
	intemp$=intemp$+"lst_rct_date:c(3),lst_blt_date:c(3),lst_sale_date:c(3),"
	intemp$=intemp$+"lst_iss_date:c(3),lst_adj_date:c(3),lst_xin_date:c(3),lst_xout_date:c(3),"
	intemp$=intemp$+"lst_ret_date:c(3),cur_price_cd:c(2),prior_price_cd:c(2),abc_code:c(1),"
	intemp$=intemp$+"eoq_code:c(1),ord_pnt_code:c(1),ss_code:c(1),spec_ord:c(1),reserved_01:c(4*=10),"
	intemp$=intemp$+"reserved_02:c(1*=10),qty_oh:n(1*=10),qty_oo:n(1*=10),qty_com:n(1*=10),"
	intemp$=intemp$+"max_qty:n(1*=10),ord_pnt:n(1*=10),ss:n(1*=10),eoq:n(1*=10),lead:n(1*=10),"
	intemp$=intemp$+"phys_cnt:n(1*=10),cur_price:n(1*=10),pri_price:n(1*=10),unit_cost:n(1*=10),"
	intemp$=intemp$+"avg_cost:n(1*=10),std_cost:n(1*=10),repl_cost:n(1*=10),land_cost:n(1*=10),"
	intemp$=intemp$+"lst_pch_cost:n(1*=10),res_num_01:n(1*=10),res_num_02:n(1*=10),"
	intemp$=intemp$+"res_num_03:n(1*=10),res_num_04:n(1*=10)"
	dim inRec$:intemp$
	
rem --- Open Barista ivm-02 files

	ivm02_dev=unt
	open (ivm02_dev,err=throw_error)ivdir$+"ivm-02"
	tpl_dev=unt
	open (tpl_dev,err=throw_error) wkdir$+"sys/data/ddm_table_tpls.dat"
	read (tpl_dev,key=pad("IVM_ITEMWHSE",16),dom=throw_error) *,*,wh_detail$
	dim wh_detail$:wh_detail$
	
rem --- Get the data

	read record (ivm02_dev,dom=throw_error) wh_detail$
	inRec.firm_id$=wh_detail.firm_id$
	inRec.wh_id$=wh_detail.warehouse_id$
	inRec.item_id$=wh_detail.item_id$
	inRec.loc$=wh_detail.location$
	inRec.cycle$=wh_detail.pi_cyclecode$
	inRec.dist_code$=wh_detail.ar_dist_code$
	inRec.sel_phy$=wh_detail.select_phys$
	inRec.lst_phy$=fnpackdate$(wh_detail.lstphy_date$)
	inRec.buyer$=wh_detail.buyer_code$
	inRec.vend_id$=wh_detail.vendor_id$
	inRec.lst_rct_date$=fnpackdate$(wh_detail.lstrec_date$)
	inRec.lst_blt_date$=fnpackdate$(wh_detail.lstblt_date$)
	inRec.lst_sale_date$=fnpackdate$(wh_detail.lstsal_date$)
	inRec.lst_iss_date$=fnpackdate$(wh_detail.lstiss_date$)
	inRec.lst_adj_date$=fnpackdate$(wh_detail.lstadj_date$)
	inRec.lst_xin_date$=fnpackdate$(wh_detail.lstxin_date$)
	inRec.lst_xout_date$=fnpackdate$(wh_detail.lstxot_date$)
	inRec.lst_ret_date$=fnpackdate$(wh_detail.lstret_date$)
	inRec.cur_price_cd$=wh_detail.cur_price_cd$
	inRec.prior_price_cd$=wh_detail.pri_price_cd$
	inRec.abc_code$=wh_detail.abc_code$
	inRec.eoq_code$=wh_detail.eoq_code$
	inRec.ord_pnt_code$=wh_detail.ord_pnt_code$
	inRec.ss_code$=wh_detail.saf_stk_code$
	inRec.spec_ord$=wh_detail.special_ord$
	inRec.reserved_01$=fill(4)
	inRec.qty_oh=wh_detail.qty_on_hand
	inRec.qty_oo=wh_detail.qty_on_order
	inRec.qty_com=wh_detail.qty_commit
	inRec.max_qty=wh_detail.maximum_qty
	inRec.ord_pnt=wh_detail.order_point
	inRec.ss=wh_detail.safety_stock
	inRec.eoq=wh_detail.eoq
	inRec.lead=wh_detail.lead_time
	inRec.phys_cnt=wh_detail.physical_cnt
	inRec.cur_price=wh_detail.cur_price
	inRec.pri_price=wh_detail.pri_price
	inRec.unit_cost=wh_detail.unit_cost
	inRec.avg_cost=wh_detail.avg_cost
	inRec.std_cost=wh_detail.std_cost
	inRec.repl_cost=wh_detail.rep_cost
	inRec.land_cost=wh_detail.landed_cost
	inRec.lst_pch_cost=wh_detail.last_po_cost
	
	td!.setReadBuffer(inRec$)

	goto std_exit

throw_error:

	throw lst(pgm(tcb(5))) , err
	goto std_exit
	
rem --- Functions

	rem --- Pack CCYYMMDD into a 3 character version 6 date format
	def fnpackdate$(q$)
		if len(q$)<> 8 or cvs(q$,3)=""
			return "   "
		endif
		m1$=chr(num(q$(5,2))+32)
		d1$=chr(num(q$(7,2))+32)
		if q$(1,2)="19"
			y1$=chr(num(q$(3,2))+32)
		else
			y1$=chr(num(q$(3,2))+132)
		endif
		q1$=y1$+m1$+d1$
		return q1$
	fnend
	
std_exit: