rem after read
rem This trigger assumes that it is being used in a non-modified Barista and Addon
rem Version 6 environment. If there have been any modifications to these systems,
rem be sure to thoroughly examine this trigger and test changes.

	setopts $080872202c2e$

	seterr throw_error

rem ---  Get the Trigger object from the BBj File System

    td! = BBjAPI().getFileSystem().getTriggerData()

	myns!=BBjAPI().getGlobalNamespace()
	wkdir$ = myns!.getValue("work_dir")
	prdir$ = myns!.getValue("prdata")

rem --- Template for the PRM-01 record being caught

	intemp$="firm_id:c(2),employee_number:c(9*=10),empl_surname:c(16),empl_givname:c(14),"
	intemp$=intemp$+"addr_line_1:c(24),addr_line_2:c(24),city:c(22),"
	intemp$=intemp$+"state:c(2),zip_code:c(9),home_phone:c(10),"
	intemp$=intemp$+"work_phone:c(10),work_ext:c(4),ssn:c(9),"
	intemp$=intemp$+"alt_seq:c(10),sex:c(1),race:c(1),"
	intemp$=intemp$+"marital_stat:c(1),birth_date:c(3),hire_date:c(3),"
	intemp$=intemp$+"anniv_date:c(3),review_date:c(3),term_date:c(3),term_code:c(3),emer_contact:c(24),"
	intemp$=intemp$+"emer_relate:c(10),emer_phone:c(10),pay_per:c(1),dept_code:c(2), norm_title:c(2),"
	intemp$=intemp$+"hrly_sal:c(1),pension_plan:c(1),empl_memo:c(10),full_part:c(1),union:c(3*=10)"
	dim inRec$:intemp$

	inRec$=td!.getWriteBuffer()
	inRec$=field(inRec$)
	
rem --- Open Barista Payroll Master File

	prm01_dev=unt
	open (prm01_dev,err=throw_error)prdir$+"prm-01"
	tpl_dev=unt
	open (tpl_dev,err=throw_error) wkdir$+"sys/data/ddm_table_tpls.dat"
	read (tpl_dev,key=pad("PRM_EMPLMAST",16),dom=throw_error) *,*,prm_emplmast$
	dim prm_emplmast$:prm_emplmast$
	
rem --- Assign the data

	prm_emplmast.firm_id$ = inRec.firm_id$
	prm_emplmast.employee_no$ = inRec.employee_number$
	prm_emplmast.empl_surname$ = inRec.empl_surname$
	prm_emplmast.empl_givname$ = inRec.empl_givname$
	prm_emplmast.addr_line_1$ = inRec.addr_line_1$
	prm_emplmast.addr_line_2$ = inRec.addr_line_2$
	prm_emplmast.city$ = inRec.city$
	prm_emplmast.state_code$ = inRec.state$
	prm_emplmast.zip_code$ = inRec.zip_code$
	prm_emplmast.home_phone$ = inRec.home_phone$
	prm_emplmast.work_phone$ = inRec.work_phone$
	prm_emplmast.work_extens$ = inRec.work_ext$
	prm_emplmast.soc_sec_no$ = inRec.ssn$
	prm_emplmast.alt_sequence$ = inRec.alt_seq$
	prm_emplmast.sex$ = inRec.sex$
	prm_emplmast.race$ = inRec.race$
	prm_emplmast.marital_sts$ = inRec.marital_stat$
	prm_emplmast.term_code$ = inRec.term_code$
	prm_emplmast.emer_contact$ = inRec.emer_contact$
	prm_emplmast.emer_relate$ = inRec.emer_relate$
	prm_emplmast.emer_phone$ = inRec.emer_phone$
	prm_emplmast.pay_period$ = inRec.pay_per$
	prm_emplmast.dept_code$ = inRec.dept_code$
	prm_emplmast.normal_title$ = inRec.norm_title$
	prm_emplmast.hrlysalary$ = inRec.hrly_sal$
	prm_emplmast.pension_plan$ = inRec.pension_plan$
	prm_emplmast.empl_memo$ = inRec.empl_memo$
	prm_emplmast.full_or_part$ = inRec.full_part$
	prm_emplmast.union_code$ = inRec.union$
	prm_emplmast.birth_date$ = fndate$(inRec.birth_date$)
	prm_emplmast.hire_date$ = fndate$(inRec.hire_date$)
	prm_emplmast.anniv_date$ = fndate$(inRec.anniv_date$)
	prm_emplmast.review_date$ = fndate$(inRec.review_date$)
	prm_emplmast.term_date$ = fndate$(inRec.term_date$)

rem --- write the data

	prm_emplmast$=field(prm_emplmast$)
	write record(prm01_dev)prm_emplmast$
	close(prm01_dev)
	
	goto std_exit

throw_error:

	throw lst(pgm(tcb(5))) , err
	goto std_exit
	
rem --- Functions

	rem --- fndate$ returns an 8 character year from a 3 character packed date
	def fndate$(q1$)
		if len(cvs(q1$,3))=3
			q2$=str(asc(q1$)-32+1900)+str(asc(q1$(2))-32:"00")+str(mod(asc(q1$(3))-32,100):"00")
		else
			q2$=pad("",8)
		endif
		while 1
			if date(jul(num(q2$(1,4)),num(q2$(5,2)),num(q2$(7,2)),err=*next),err=*next)>"" break
			q2$=fill(8)
			break
		wend
		return q2$
	fnend
	
std_exit: