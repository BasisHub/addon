rem AddonSoftware
rem Copyright BASIS International Ltd.
rem 
rem instead of write
rem This trigger assumes that it is being used in a non-modified Barista and Addon
rem Version 6 environment. If there have been any modifications to these systems,
rem be sure to thoroughly examine this trigger and test changes.

	setopts $080872202c2e$

	seterr trigger_error
	
rem ---  Get the Trigger object from the BBj File System

    td! = BBjAPI().getFileSystem().getTriggerData()

	myns!=BBjAPI().getGlobalNamespace()
	wkdir$ = myns!.getValue("work_dir")
	gldir$ = myns!.getValue("gldata")

rem --- Template for the APM-11 record being caught

	intemp$="firm_id:c(2),gl_account:c(10),check_no:c(7*=10),check_type:c(1),paid_code:c(1),"
	intemp$=intemp$+"check_date:c(6),description:c(30),reserved_1:c(12*=10),"
	intemp$=intemp$+"check_amount:n(7*=10),reserved_2:n(7*=10)"
	dim inRec$:intemp$

	inRec$=td!.getWriteBuffer()
	inRec$=field(inRec$)
	
rem --- Open Barista Bank Rec files

	glt05_dev=unt
	open (glt05_dev,err=trigger_error)gldir$+"glt-05"
	tpl_dev=unt
	open (tpl_dev,err=trigger_error) wkdir$+"sys/data/ddm_table_tpls.dat"
	read (tpl_dev,key=pad("GLT_BANKCHECKS",16),dom=trigger_error) *,*,check_detail$
	dim check_detail$:check_detail$
	
rem --- Assign the data

	check_detail.firm_id$ = inRec.firm_id$
	check_detail.gl_account$ = inRec.gl_account$
	check_detail.check_no$ = inRec.check_no$
	check_detail.check_type$ = inRec.check_type$
	check_detail.paid_code$ = inRec.paid_code$
	check_detail.bnk_chk_date$ = fnyy$(inRec.check_date$(1,2)) + inRec.check_date$(3,4)
	check_detail.description$ = inRec.description$
	check_detail.check_amount = inRec.check_amount

rem --- Build the key

	key$=check_detail.firm_id$+check_detail.gl_account$+check_detail.check_no$

rem --- Write the data

	check_detail$=field(check_detail$)
	write record(glt05_dev)check_detail$
	close(glt05_dev)
	
	goto std_exit

trigger_error:

    rd_err_text$="", err_num=err
    if tcb(2)=0 and tcb(5) then rd_err_text$=pgm(tcb(5),tcb(13),err=*next)
    throw "["+pgm(-2)+"] "+str(tcb(5))+": "+rd_err_text$,err_num
	
rem --- Functions

	rem --- fnyy$ returns a 4 character year from a 2 character (A0-E9) year
	def fnyy$(q1$)
		q2$="20"
		if num(q1$(1,1),err=*next)>=0 q2$="19"
		q3$=" 01234567890123456789"
		q1$(1,1)=q3$(pos(q1$(1,1)=" 0123456789ABCDEFGHIJ"))
		q1$=q2$+q1$
		return q1$
	fnend
	
std_exit: