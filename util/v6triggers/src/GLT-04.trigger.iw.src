rem AddonSoftware
rem Copyright BASIS International Ltd.
rem 
rem instead of read
rem This trigger assumes that it is being used in a non-modified Barista and Addon
rem Version 6 environment. If there have been any modifications to these systems,
rem be sure to thoroughly examine this trigger and test changes.

	setopts $080872202c2e$

	seterr throw_error
	
rem ---  Get the Trigger object from the BBj File System

    td! = BBjAPI().getFileSystem().getTriggerData()

	myns!=BBjAPI().getGlobalNamespace()
	wkdir$ = myns!.getValue("work_dir")
	gldir$ = myns!.getValue("gldata")

rem --- Template for the GLT-04 record being caught

	intemp$="firm_id:c(2),journal_id:c(2),gl_adt_nbr:c(7),posting_year_1:c(2),"
	intemp$=intemp$+"posting_per_1:c(2),gl_post_date:c(6),gl_account:c(10),"
	intemp$=intemp$+"gl_post_seq:c(5*=10),reference_01:c(10),reference_02:c(10),"
	intemp$=intemp$+"reference_03:c(10),gl_post_memo:c(30),posting_per_2:c(2),"
	intemp$=intemp$+"posting_year_2:c(2*=10),dealer_str:c(1*=10),gl_post_amt:n(7*=10),"
	intemp$=intemp$+"units:n(7*=10),dealer_num_01:n(1*=10),dealer_num_02:n(1*=10),"
	intemp$=intemp$+"dealer_num_03:n(1*=10)"
	dim inRec$:intemp$

	inRec$=td!.getWriteBuffer()
	inRec$=field(inRec$)
	
rem --- Open Barista G/L files

	glt04_dev=unt
	open (glt04_dev,err=throw_error)gldir$+"glt-04"
	glm01_dev=unt
	open (glm01_dev,err=throw_error) gldir$+"glm-01"
	tpl_dev=unt
	open (tpl_dev,err=throw_error) wkdir$+"sys/data/ddm_table_tpls.dat"
	read (tpl_dev,key=pad("GLE_DAILYDETAIL",16),dom=throw_error) *,*,glt_detail$
	dim glt_detail$:glt_detail$
	read (tpl_dev,key=pad("GLM_ACCT",16),dom=throw_error) *,*,glm_acct$
	dim glm_acct$:glm_acct$
	
rem --- Assign the data

	glt_detail.firm_id$ = inRec.firm_id$
	glt_detail.process_id$ = fill(16," ")
	glt_detail.batch_no$ = fill(7," ")
	glt_detail.journal_id$ = inRec.journal_id$
	glt_detail.gl_adt_no$ = inRec.gl_adt_nbr$
	glt_detail.posting_year$ = fnyy$(inRec.posting_year_1$)
	glt_detail.posting_per$ = inRec.posting_per_1$
	glt_detail.trns_date$ = fnyy$(inRec.gl_post_date$(1,2)) + inRec.gl_post_date$(3,4)
	glt_detail.gl_account$ = inRec.gl_account$
	glt_detail.reference_01$ = inRec.reference_01$
	glt_detail.reference_02$ = inRec.reference_02$
	glt_detail.reference_03$ = inRec.reference_03$
	glt_detail.description$ = inRec.gl_post_memo$
	glt_detail.period$ = glt_detail.posting_per$
	glt_detail.year$ = glt_detail.posting_year$
	glt_detail.dealer_str$ = inRec.dealer_str$
	glt_detail.trans_amt = inRec.gl_post_amt
	glt_detail.units = inRec.units
	glt_detail.dealer_num_01 = inRec.dealer_num_01
	glt_detail.dealer_num_02 = inRec.dealer_num_02
	glt_detail.dealer_num_03 = inRec.dealer_num_03

rem --- See if detail or summary postings for this account

	detail$="Y"
	while 1
		read record (glm01_dev,key=glt_detail.firm_id$+glt_detail.gl_account$,dom=*break)glm_acct$
		if glm_acct.detail_flag$="Y"
			detail$="Y"
		else
			detail$="N"
		endif
		break
	wend

rem --- Build the key

	key$=glt_detail.firm_id$+glt_detail.process_id$+glt_detail.batch_no$+glt_detail.journal_id$
	key$=key$+glt_detail.gl_adt_no$+glt_detail.posting_year$+glt_detail.posting_per$+glt_detail.trns_date$
	key$=key$+glt_detail.gl_account$

rem --- Set the sequence number
	if detail$ = "N" then
		dim sumRec$:fattr(glt_detail$)
		key$ = key$ + "00001"
		recordFound = 0
		read record(glt04_dev,key = key$, dom=*next)sumRec$; recordFound = 1
		if recordFound then
        rem ' add the existing amount to the incoming amount
			glt_detail.trans_amt = glt_detail.trans_amt + sumRec.trans_amt
			glt_detail.units = glt_detail.units + sumRec.units
			glt_detail.seq_no$ = sumRec.seq_no$
		else
        rem ' the first summarized transaction just use seq 1
			glt_detail.seq_no$ = "00001"
		endif
	else
    rem ' detail = Y, find the next seq number
		seq_no = 0
		keylen = len(key$)
		tryKey$=key$+$ff$
		read (glt04_dev,key=tryKey$,dom=*next)
		k$=keyp(glt04_dev,end=set_seq)
		if k$(1,keylen) = key$ then seq_no = num(k$(keylen+1))
    set_seq:
		if seq_no+1 > 99999
			glt_detail.seq_no$="99999"
			dim sumRec$:fattr(glt_detail$)
			read record(glt04_dev,key = key$)sumRec$
			glt_detail.trans_amt = glt_detail.trans_amt + sumRec.trans_amt
			glt_detail.units = glt_detail.units + sumRec.units
			glt_detail.seq_no$ = sumRec.seq_no$
		else
			glt_detail.seq_no$ = str(seq_no + 1:"00000")
		endif
	endif

rem '----write the data
	glt_detail$=field(glt_detail$)
	write record(glt04_dev)glt_detail$
	close(glt04_dev)
	
	goto std_exit

throw_error:

	throw lst(pgm(tcb(5))) , err
	goto std_exit
	
rem --- Functions

	rem --- fnyy$ returns a 4 character year from a 2 character (A0-E9) year
	def fnyy$(q1$)
		q2$="20"
		if num(q1$(1,1),err=*next)>=0 q2$="19"
		q3$=" 01234567890123456789"
		q1$(1,1)=q3$(pos(q1$(1,1)=" 0123456789ABCDEFGHIJ"))
		q1$=q2$+q1$
		return q1$
	fnend
	
std_exit: