rem AddonSoftware
rem Copyright BASIS International Ltd.
rem 
rem after write
rem This trigger assumes that it is being used in a non-modified Barista and Addon
rem Version 6 environment. If there have been any modifications to these systems,
rem be sure to thoroughly examine this trigger and test changes.

	setopts $080872202c2e$

	seterr trigger_error

rem ---  Get the Trigger object from the BBj File System

    td! = BBjAPI().getFileSystem().getTriggerData()

	ky$=td!.getKey()

	rec_data$=td!.getWriteBuffer()

	myns!=BBjAPI().getGlobalNamespace()
	wkdir$ = myns!.getValue("work_dir")
	prdir$ = myns!.getValue("prdata")
	pgmdir$ = myns!.getValue("pgmdir")
	
	x$=stbl("+SYSINFO_TPL",myns!.getValue("sysinfo_tpl"))
	x$=stbl("+SYSINFO",myns!.getValue("sysinfo"))
	x$=stbl("+DIR_SYP",myns!.getValue("rd_dir_syp"))
	x$=stbl("+DIR_IMG",myns!.getValue("rd_dir_img"))
	x$=stbl("+DIR_SYS",myns!.getValue("rd_dir_sys"))
	x$=stbl("+GUI_DEVICE",myns!.getValue("rd_gui_dev"))
	x$=stbl("+FILE_USR",myns!.getValue("rd_file_usr"))
	x$=stbl("+FILE_SET",myns!.getValue("rd_file_set"))
	x$=stbl("+USER_ID",myns!.getValue("rd_user_id"))
	x$=stbl("+DIR_USR",myns!.getValue("rd_dir_usr"))
	x$=stbl("+AON_APPCOMPANY",myns!.getValue("aon_appcompany"))
	x$=stbl("+MASTER_USER",myns!.getValue("master_user"))
	
	return_default$="Y"
	
rem --- Open template file for use in getting Barista template for correct file

	tpl_dev=unt
	open (tpl_dev,err=trigger_error) wkdir$+"sys/data/ddm_table_tpls.dat"

rem --- See if it's a Firm record
	if len(ky$)=5
		if ky$(3,1)="A"
rem --- Pay Code record
			alias$="PRC_PAYCODE"
			filename$="prc_paycode"
			gosub get_template
			code_dev=unt
			open (code_dev,err=trigger_error)prdir$+filename$
			intemp$="firm_id:c(2),code_a:c(1),pay_code:c(2),code_desc:c(16),report_code:c(2),units_flag:c(1),"
			intemp$=intemp$+"auto_deduct:c(1),calc_type:c(1),accr_basis:c(1),basis_tot_code:c(2),product:c(1),"
			intemp$=intemp$+"special:c(1),reserved_01:c(1*=10),calc_rate:n(7*),prem_fact:n(7*),pay_units:n(7*),"
			intemp$=intemp$+"accr_r_amt:n(7*),pr_tot_to1:c(2),pr_tot_to2:c(2),pr_tot_to3:c(2),pr_tot_to4:c(2),"
			intemp$=intemp$+"pr_tot_to5:c(2),pr_tot_to6:c(2),pr_tot_to7:c(2),pr_tot_to8:c(2),pr_tot_to9:c(2),"
			intemp$=intemp$+"pr_tot_to10:c(2*=10),pr_tot_oper1:c(1),pr_tot_oper2:c(1),pr_tot_oper3:c(1),"
			intemp$=intemp$+"pr_tot_oper4:c(1),pr_tot_oper5:c(1),pr_tot_oper6:c(1),pr_tot_oper7:c(1),"
			intemp$=intemp$+"pr_tot_oper8:c(1),pr_tot_oper9:c(1),pr_tot_oper10:c(1*=10),pr_spec_func1:c(1),"
			intemp$=intemp$+"pr_spec_func2:c(1),pr_spec_func3:c(1),pr_spec_func4:c(1),pr_spec_func5:c(1),"
			intemp$=intemp$+"pr_spec_func6:c(1),pr_spec_func7:c(1),pr_spec_func8:c(1),pr_spec_func9:c(1),"
			intemp$=intemp$+"pr_spec_func10:c(1*=10)"

			dim inRec$:intemp$
			inRec$=td!.getWriteBuffer()
			inRec$=field(inRec$)
			
			tpl.firm_id$=inRec.firm_id$
			tpl.record_id_a$=inRec$.code_a$
			tpl.pay_code$=inRec.pay_code$
			tpl.pr_code_desc$=inRec.code_desc$
			tpl.report_code$=inRec.report_code$
			tpl.units_flag$=inRec.units_flag$
			tpl.auto_deduct$=inRec.auto_deduct$
			tpl.calc_type$=inRec.calc_type$
			tpl.accr_basis$=inRec.accr_basis$
			tpl.basis_tot_cd$=inRec.basis_tot_code$
			tpl.productive$=inRec.product$
			tpl.special_flag$=inRec.special$
			tpl.calc_rtamt=inRec.calc_rate
			tpl.prem_factor=inRec.prem_fact
			tpl.pay_units=inRec.pay_units
			tpl.accr_ramt=inRec.accr_r_amt
			tpl.pr_total_to_01$=inRec.pr_tot_to1$
			tpl.pr_total_to_02$=inRec.pr_tot_to2$
			tpl.pr_total_to_03$=inRec.pr_tot_to3$
			tpl.pr_total_to_04$=inRec.pr_tot_to4$
			tpl.pr_total_to_05$=inRec.pr_tot_to5$
			tpl.pr_total_to_06$=inRec.pr_tot_to6$
			tpl.pr_total_to_07$=inRec.pr_tot_to7$
			tpl.pr_total_to_08$=inRec.pr_tot_to8$
			tpl.pr_total_to_09$=inRec.pr_tot_to9$
			tpl.pr_total_to_10$=inRec.pr_tot_to10$
			tpl.pr_tot_oper_01$=inRec.pr_tot_oper1$
			tpl.pr_tot_oper_02$=inRec.pr_tot_oper2$
			tpl.pr_tot_oper_03$=inRec.pr_tot_oper3$
			tpl.pr_tot_oper_04$=inRec.pr_tot_oper4$
			tpl.pr_tot_oper_05$=inRec.pr_tot_oper5$
			tpl.pr_tot_oper_06$=inRec.pr_tot_oper6$
			tpl.pr_tot_oper_07$=inRec.pr_tot_oper7$
			tpl.pr_tot_oper_08$=inRec.pr_tot_oper8$
			tpl.pr_tot_oper_09$=inRec.pr_tot_oper9$
			tpl.pr_tot_oper_10$=inRec.pr_tot_oper10$
			tpl.pr_spec_func_01$=inRec.pr_spec_func1$
			tpl.pr_spec_func_02$=inRec.pr_spec_func2$
			tpl.pr_spec_func_03$=inRec.pr_spec_func3$
			tpl.pr_spec_func_04$=inRec.pr_spec_func4$
			tpl.pr_spec_func_05$=inRec.pr_spec_func5$
			tpl.pr_spec_func_06$=inRec.pr_spec_func6$
			tpl.pr_spec_func_07$=inRec.pr_spec_func7$
			tpl.pr_spec_func_08$=inRec.pr_spec_func8$
			tpl.pr_spec_func_09$=inRec.pr_spec_func9$
			tpl.pr_spec_func_10$=inRec.pr_spec_func10$

rem --- write the data
			tpl$=field(tpl$)
			write record (code_dev) tpl$
			close (code_dev)

		endif

rem --- Open Barista Payroll Title Code File

		if ky$(3,1)="F"
rem --- Title Code record
			alias$="PRC_TITLCODE"
			filename$="prc_titlcode"
			gosub get_template
			code_dev=unt
			open (code_dev,err=trigger_error)prdir$+filename$
			intemp$="firm_id:c(2),code_f:c(1),title_code:c(2),code_desc:c(20*=10),std_rate:n(7*=10)"

			dim inRec$:intemp$
			inRec$=td!.getWriteBuffer()
			inRec$=field(inRec$)

			tpl.firm_id$=inRec.firm_id$
			tpl.record_id_f$=inRec$.code_f$
			tpl.title_code$=inRec.title_code$
			tpl.code_desc$=inRec.code_desc$
			tpl.std_rate=inRec.std_rate

rem --- write the data
			tpl$=field(tpl$)
			write record (code_dev) tpl$
			close (code_dev)

		endif
	endif

	goto std_exit
		
rem --- Subroutines

get_template:

	read (tpl_dev,key=pad(alias$,16),dom=trigger_error) *,*,tpl$
	dim tpl$:tpl$
	
	return
	
trigger_error:

    rd_err_text$="", err_num=err
    if tcb(2)=0 and tcb(5) then rd_err_text$=pgm(tcb(5),tcb(13),err=*next)
    throw "["+pgm(-2)+"] "+str(tcb(5))+": "+rd_err_text$,err_num

return_default:

	td!.setReadBuffer(rec_data$)
	goto std_exit

std_exit:    