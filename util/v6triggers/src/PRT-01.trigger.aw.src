rem after read
rem This trigger assumes that it is being used in a non-modified Barista and Addon
rem Version 6 environment. If there have been any modifications to these systems,
rem be sure to thoroughly examine this trigger and test changes.

	setopts $080872202c2e$

	seterr throw_error

rem ---  Get the Trigger object from the BBj File System

    td! = BBjAPI().getFileSystem().getTriggerData()

	myns!=BBjAPI().getGlobalNamespace()
	wkdir$ = myns!.getValue("work_dir")
	prdir$ = myns!.getValue("prdata")

rem --- Template for the PRT-01 record being caught

	intemp$="firm_id:c(2),employee_nbr:c(9),record_id_a:c(1),pay_code:c(2*=10),"
	intemp$=intemp$+"mtd_amt:n(7*),qtr_amt_1:n(7*),qtr_amt_2:n(7*),qtr_amt_3:n(7*),qtr_amt_4:n(7*),"
	intemp$=intemp$+"nmtd_amt:n(7*),mtd_units:n(7*),qtr_units_1:n(7*),qtr_units_2:n(7*),qtr_units_3:n(7*),"
	intemp$=intemp$+"qtr_units_4:n(7*),nmtd_units:n(7*),pyr_acct_amt:n(7*),cyr_accr_amt:n(7*),"
	intemp$=intemp$+"nyr_accr_amt:n(7*),accrual_rate:n(7*),accrual_used:n(7*)"
	dim inRec$:intemp$

	inRec$=td!.getWriteBuffer()
	inRec$=field(inRec$)
	
rem --- Open Barista Payroll Earnings History File

	prt01_dev=unt
	open (prt01_dev,err=throw_error)prdir$+"prt-01"
	tpl_dev=unt
	open (tpl_dev,err=throw_error) wkdir$+"sys/data/ddm_table_tpls.dat"
	read (tpl_dev,key=pad("PRT_EMPLEARN",16),dom=throw_error) *,*,prt_emplearn$
	dim prt_emplearn$:prt_emplearn$
	
rem --- Assign the data

	prt_emplearn.firm_id$ = inRec.firm_id$
	prt_emplearn.employee_no$ = inRec.employee_nbr$
	prt_emplearn.record_id_a$ = "A"
	prt_emplearn.pay_code$ = inRec.pay_code$
	prt_emplearn.mtd_amount = inRec.mtd_amt
	prt_emplearn.qtr_amt_01 = inRec.qtr_amt_1
	prt_emplearn.qtr_amt_02 = inRec.qtr_amt_2
	prt_emplearn.qtr_amt_03 = inRec.qtr_amt_3
	prt_emplearn.qtr_amt_04 = inRec.qtr_amt_4
	prt_emplearn.nmtd_amt = inRec.nmtd_amt
	prt_emplearn.mtd_units = inRec.mtd_units
	prt_emplearn.qtr_units_01 = inRec.qtr_units_1
	prt_emplearn.qtr_units_02 = inRec.qtr_units_2
	prt_emplearn.qtr_units_03 = inRec.qtr_units_3
	prt_emplearn.qtr_units_04 = inRec.qtr_units_4
	prt_emplearn.nmtd_units = inRec.nmtd_units
	prt_emplearn.pyr_acc_amt = inRec.pyr_acct_amt
	prt_emplearn.cyr_accr_amt =inRec.cyr_accr_amt
	prt_emplearn.nyr_acc_amt = inRec.nyr_accr_amt
	prt_emplearn.accrual_rate = inRec.accrual_rate
	prt_emplearn.accrual_used = inRec.accrual_used

rem --- write the data

	prt_emplearn$=field(prt_emplearn$)
	write record(prt01_dev)prt_emplearn$
	close(prt01_dev)
	
	goto std_exit

throw_error:

	throw lst(pgm(tcb(5))) , err
	goto std_exit
	
rem --- Functions

	rem --- fndate$ returns an 8 character year from a 3 character packed date
	def fndate$(q1$)
		if len(cvs(q1$,3))=3
			q2$=str(asc(q1$)-32+1900)+str(asc(q1$(2))-32:"00")+str(mod(asc(q1$(3))-32,100):"00")
		else
			q2$=pad("",8)
		endif
		while 1
			if date(jul(num(q2$(1,4)),num(q2$(5,2)),num(q2$(7,2)),err=*next),err=*next)>"" break
			q2$=fill(8)
			break
		wend
		return q2$
	fnend
	
std_exit: