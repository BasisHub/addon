rem Callpoint Program
rem Proprietary Software.  AddonSoftware
rem Program ID: iva_itemmast.aon  <Apr 28, 2006>

	if stbl("+USE_SETERR")="YES" seterr error_proc

rem --- Enter Arguments

	enter
:		rd_callpoint_tpl$,
:		rd_aon_tpl$,
:       rdAONObj!,
:		rd_user_tpl$,
:       rdUserObj!,
:		rd_gui_dev,
:		rdSysGUI!,
:		rdForm!,
:		rd_attr_tbl$[all],
:		rd_attr_col$[all],
:		rd_attr_def_tbl$[all],
:		rd_attr_def_col$[all],
:       rd_rec_data$,
:		rd_rec_data$[all],
:		rd_table_chans$[all],
:       rd_dtlg_param$[all],
:       rdGridVect!,
:       rd_hrec_data$[all],
:		err=*next


rem --- misc
        rd_dir_pgm$=stbl("+DIR_PGM")

route_callpoint:rem --- Route Callpoint to Correct Subroutine

	cp_callpoint_str$="AOPT"
	switch fnstr_pos(rd_callpoint_tpl.callpoint_id$(1,4),cp_callpoint_str$,5)
		case fnstr_pos("AOPT",cp_callpoint_str$,5)
            if rd_callpoint_tpl.callpoint_id$(6)="LIFO"
                cp_item_id$=fnget_rec$("IVM_ITEMMAST.ITEM_ID")
                rd_user_id$=stbl("+USER_ID")
                dim rd_dflt_data$[2,1]
                rd_dflt_data$[1,0]="ITEM_ID_1"
                rd_dflt_data$[1,1]=cp_item_id$
                rd_dflt_data$[2,0]="ITEM_ID_2"
                rd_dflt_data$[2,1]=cp_item_id$
				call stbl("+DIR_PGM")+"rdm_run_prog.aon",
:					"IVR_LIFOFIFO",
:					rd_user_id$,
:					"",
:					"",
:					rd_table_chans$[all],
:					"",
:					rd_dflt_data$[all]
            endif
            if rd_callpoint_tpl.callpoint_id$(6)="IHST"
                cp_item_id$=fnget_rec$("IVM_ITEMMAST.ITEM_ID")
                rd_user_id$=stbl("+USER_ID")
                dim rd_dflt_data$[2,1]
                rd_dflt_data$[1,0]="ITEM_ID_1"
                rd_dflt_data$[1,1]=cp_item_id$
                rd_dflt_data$[2,0]="ITEM_ID_2"
                rd_dflt_data$[2,1]=cp_item_id$
				call stbl("+DIR_PGM")+"rdm_run_prog.aon",
:					"IVR_TRANSHIST",
:					rd_user_id$,
:					"",
:					"",
:					rd_table_chans$[all],
:					"",
:					rd_dflt_data$[all]
            endif
            if rd_callpoint_tpl.callpoint_id$(6)="LTRN"
				cp_item_id$=fnget_rec$("IVM_ITEMMAST.ITEM_ID")
                rd_user_id$=stbl("+USER_ID")
                dim rd_dflt_data$[2,1]
                rd_dflt_data$[1,0]="ITEM_ID_1"
                rd_dflt_data$[1,1]=cp_item_id$
                rd_dflt_data$[2,0]="ITEM_ID_2"
                rd_dflt_data$[2,1]=cp_item_id$
				call stbl("+DIR_PGM")+"rdm_run_prog.aon",
:					"IVR_LSTRANHIST",
:					rd_user_id$,
:					"",
:					"",
:					rd_table_chans$[all],
:					"",
:					rd_dflt_data$[all]
            endif
            if rd_callpoint_tpl.callpoint_id$(6)="SORD"
                cp_item_id$=fnget_rec$("IVM_ITEMMAST.ITEM_ID")
                rd_user_id$=stbl("+USER_ID")
                dim rd_dflt_data$[2,1]
                rd_dflt_data$[1,0]="ITEM_ID"
                rd_dflt_data$[1,1]=cp_item_id$
				call stbl("+DIR_PGM")+"rdm_run_prog.aon",
:					"IVR_OPENSO",
:					rd_user_id$,
:					"",
:					"",
:					rd_table_chans$[all],
:					"",
:					rd_dflt_data$[all]
            endif
            if rd_callpoint_tpl.callpoint_id$(6)="PORD"
                cp_item_id$=fnget_rec$("IVM_ITEMMAST.ITEM_ID")
                rd_user_id$=stbl("+USER_ID")
                dim rd_dflt_data$[2,1]
                rd_dflt_data$[1,0]="ITEM_ID"
                rd_dflt_data$[1,1]=cp_item_id$
				call stbl("+DIR_PGM")+"rdm_run_prog.aon",
:					"IVR_OPENPO",
:					rd_user_id$,
:					"",
:					"",
:					rd_table_chans$[all],
:					"",
:					rd_dflt_data$[all]
            endif

		break

		case default
			goto exit_prog
		break
	swend

	goto exit_prog

open_tables:rem --- Open Tables

	call rd_dir_pgm$+"rdc_open_tables.aon",
:		rd_open_beg,
:		rd_open_end,
:		rd_open_tables$[all],
:		rd_open_opts$[all],
:		rd_open_chans$[all],
:		rd_open_tpls$[all],
:		rd_table_chans$[all],
:		rd_open_batch,
:		rd_open_status$

	if rd_open_status$<>""
:		rd_msg_text$=rd_open_status$,
:		rd_msg_defs$="O  ;F;O";
:		gosub disp_msg;
:		release

	return


disp_msg:rem --- Display Messages

	call rd_dir_pgm$+"rdm_message.aon",rd_gui_dev,rd_msg_dialog_title$,rd_msg_text$,rd_msg_defs$,rd_msg_opt$
	rd_msg_title$=""
	rd_msg_text$=""

	return

rem --- Functions

	def fnstr_pos(rd_tmp0$,rd_tmp1$,rd_tmp1)=int((pos(rd_tmp0$=rd_tmp1$,rd_tmp1)+rd_tmp1-1)/rd_tmp1)
	def fngett_attr$(rd_att0$)=rd_attr_tbl$[fnstr_pos(rd_att0$,rd_attr_def_tbl$,5)]
	def fngetc_attr$(rd_att0,rd_att0$)=rd_attr_col$[rd_att0,fnstr_pos(rd_att0$,rd_attr_col$[0,0],5)]
	def fngetv_attr$(rd_att0$,rd_att1$)=rd_attr_col$[fnstr_pos(rd_att0$,rd_attr_col$[0,1],40),fnstr_pos(rd_att1$,rd_attr_col$[0,0],5)]
	def fnget_rec$(rd_att0$)=rd_rec_data$[fnstr_pos(rd_att0$,rd_attr_col$[0,1],40),0]


error_proc:rem --- Error Processing Routine

	rd_err_text$=""
	if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))

	call stbl("+DIR_PGM")+"adc_error.aon",pgm(-2),str(tcb(5):"00000"),str(err:"000"),rd_err_text$,rd_err_act$

	if pos("EXIT"=rd_err_act$)<>0 goto exit_prog
	if pos("ESCAPE"=rd_err_act$)<>0 seterr 0;setesc 0
	if pos("RETRY"=rd_err_act$)<>0 retry

exit_prog:rem --- Exit Program

	exit
