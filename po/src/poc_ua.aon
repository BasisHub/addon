rem --- Retrieve/Update Vendor/Item Information
rem --- Program poc_ua v8.0.0 27Dec2007 (poc_ua)
rem --- Created by c:\codeport_bbj\adx_codeport.bbj v1.1.5 (12/27/2007 10:35:40)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright (c) 1981-2007 AddonSoftware
rem --- All Rights Reserved

    seterr std_error
    setesc std_error
    enter action$,type$,ivm05_dev,a0$,a1$,w3$,w[all],places,status

rem --- Retrieve the program path

    pgmdir$=stbl("+dir_pgm",err=*next)

rem --- Retrieve sysinfo data

    sysinfo_template$=stbl("+sysinfo_tpl",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+sysinfo",err=*next)
    milestone=num(stbl("+milestone",err=*next),err=*next)
    firm_id$=sysinfo.firm_id$

rem --- Open/Lock files

    files=3,begfile=1,endfile=files
    dim files$[files],options$[files],ids$[files],templates$[files],channels[files]
    files$[1]="aps-01a",ids$[1]=""
    files$[2]="ivm-05",ids$[2]="IVM_ITEMVEND"
    files$[3]="ivs_params",ids$[3]="IVS_PARAMS"
    call pgmdir$+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],
:                                   ids$[all],templates$[all],channels[all],batch,status
    if status goto std_exit
    aps01a_dev=channels[1]
    ivm05_dev=channels[2]
    ivs01a_dev=channels[3]

rem --- Dimension string templates

    dim aps01a$:templates$[1],ivm05a$:templates$[2],ivs01a$:templates$[3]

rem --- Retrieve parameter records

    aps01a_key$=firm_id$+"AP00"
    find record (aps01a_dev,key=aps01a_key$,err=std_missing_params) aps01a$
    ivs01a_key$=firm_id$+"IV00"
    find record (ivs01a_dev,key=ivs01a_key$,err=std_missing_params) ivs01a$

rem --- Initializations

    precision places
    dim b0$(28),b1$(32),b2$(20),b[12]
    ivm05a.firm_id$=a0$(1,2)
    ivm05a.vendor_id$=a0$(3,6)
    ivm05a.item_id$=w3$(3)
    ivm05a.prisec_flag$="S"
    when$=fndate$(fndate$(a1$(5,6)))
    qty=w[2]
    if pos(type$="PQC") then let qty=w[3]
    qty=qty*w[0]

rem --- Retrieve current record

    find record (ivm05_dev,key=ivm05a.firm_id$+ivm05a.vendor_id$+ivm05a.item_id$,dom=done) ivm05a$

    if action$<>"W" 

rem --- Reassign cost if record exists

        if b[6]>0 then let w[1]=b[6]*w[0]
        if b[3]>0 and qty>=b[0] then let w[1]=b[3]*w[0]
        if b[4]>0 and qty>=b[1] then let w[1]=b[4]*w[0]
        if b[5]>0 and qty>=b[2] then let w[1]=b[5]*w[0]

    else

rem --- Update last PO date

        if w[0] then let b[6]=w[1]/w[0]
        if when$>ivm05a.last_po_date$ then let ivm05a.last_po_date$=when$
        if pos(type$="PQC") then write record (ivm05_dev,key=ivm05a_key.firm_id$+ivm05a_key.vendor_id$+ivm05a_key.item_id$) ivm05a$

    fi

done: rem --- All done

    goto std_exit

rem #include std_functions.src
rem --- Standard AddonSoftware functions (01Mar2006)

rem --- Date/time handling functions

    def fndate$(q$)
        q1$=""
        q1$=date(jul(num(q$(1,4)),num(q$(5,2)),num(q$(7,2)),err=*next),err=*next)
        if q1$="" q1$=q$
        return q1$
    fnend
    
rem #endinclude std_functions.src

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    call stbl("+DIR_SYP")+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:                                str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src
rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:                                   str(err:"000"),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_exit.src

std_exit: rem --- Standard called program exit (01Mar2006)

    exit
rem #endinclude std_exit.src

    end
