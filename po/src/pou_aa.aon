rem --- Purchase Requisition Register Update
rem --- Program pou_aa v8.0.0 05Dec2007 (pou_aa)
rem --- Created by c:\codeport_bbj\adx_codeport.bbj v1.1.5 (12/05/2007 11:20:31)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright (c) 1981-2007 AddonSoftware
rem --- All Rights Reserved

    setesc std_error
    seterr std_error

rem --- Retrieve the program path

    pgmdir$=stbl("+DIR_PGM",err=*next)

rem --- Retrieve sysinfo data

    sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=*next)
    milestone=num(stbl("+MILESTONE",err=*next),err=*next)
    firm_id$=sysinfo.firm_id$

rem --- Open/Lock files

    files=21,begfile=1,endfile=files
    dim files$[files],options$[files],ids$[files],templates$[files],channels[files]
    files$[1]="aps_params",ids$[1]="APS_PARAMS"
    files$[2]="ivm-01",ids$[2]="IVM_ITEMMAST"
    files$[3]="ivm-02",ids$[3]="IVM_ITEMWHSE"
    files$[4]="ivs_params",ids$[4]="IVS_PARAMS"
    files$[5]="poe-01",ids$[5]="POE_REQHDR"
    files$[6]="poe-02",ids$[6]="POE_POHDR"
    files$[7]="poe-08",ids$[7]="POE_LINKED"
    files$[8]="poe-11",ids$[8]="POE_REQDET"
    files$[9]="poe-12",ids$[9]="POE_PODET"
    files$[10]="poe-21",ids$[10]="POE_REQPRINT"
    files$[11]="poe-22",ids$[11]="POE_POPRINT"
    files$[12]="poe-31",ids$[12]="POE_REQBYREQ"
    files$[13]="poe-32",ids$[13]="POE_POBYPO"
    files$[14]="poe-41",ids$[14]="POE_REQBYITM"
    files$[15]="poe-42",ids$[15]="POE_POBYITEM"
    files$[16]="poe-52",ids$[16]="POE_POBYREQ"
    files$[17]="pom-02",ids$[17]="POC_LINECODE"
    files$[18]="pos-10",ids$[18]=""
    files$[19]="pow-07",ids$[19]="POW_RECRGSTR"
    files$[20]="sfe-22",ids$[20]="SFE_WOMATL"
    files$[21]="sfe-32",ids$[21]="SFE_WOSUBCNT"
    call pgmdir$+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],
:                                   ids$[all],templates$[all],channels[all],batch,status
    if status goto std_exit
    aps01a_dev=channels[1]
    ivm01_dev=channels[2]
    ivm02_dev=channels[3]
    ivs01a_dev=channels[4]
    poe01_dev=channels[5]
    poe02_dev=channels[6]
    poe08_dev=channels[7]
    poe11_dev=channels[8]
    poe12_dev=channels[9]
    poe21_dev=channels[10]
    poe22_dev=channels[11]
    poe31_dev=channels[12]
    poe32_dev=channels[13]
    poe41_dev=channels[14]
    poe42_dev=channels[15]
    poe52_dev=channels[16]
    pom02_dev=channels[17]
    pos10_dev=channels[18]
    pow07_dev=channels[19]
    sfe22_dev=channels[20]
    sfe32_dev=channels[21]

rem --- Dimension string templates

    dim aps01a$:templates$[1],ivm01a$:templates$[2],ivm02a$:templates$[3],
:       ivs01a$:templates$[4],poe01a$:templates$[5],poe02a$:templates$[6],
:       poe08a$:templates$[7],poe11a$:templates$[8],poe12a$:templates$[9],
:       poe21a$:templates$[10],poe22a$:templates$[11],poe31a$:templates$[12],
:       poe32a$:templates$[13],poe41a$:templates$[14],poe42a$:templates$[15],
:       poe52a$:templates$[16],pom02a$:templates$[17],pos10a$:templates$[18],
:       pow07a$:templates$[19],sfe22a$:templates$[20],sfe32a$:templates$[21]


rem --- Retrieve parameter records

    aps01a_key$=firm_id$+"AP00"
    find record (aps01a_dev,key=aps01a_key$,err=std_missing_params) aps01a$
    ivs01a_key$=firm_id$+"IV00"
    find record (ivs01a_dev,key=ivs01a_key$,err=std_missing_params) ivs01a$

rem --- Open/Lock Files

    close (printer_dev,err=*next)

rem --- Initializations

    dim files[20],item$[3],channels[99],params[10],params$[10],refs[20],refs$[20]
    files[1]=pos10_dev
    files[2]=pom02_dev,files[3]=poe01_dev
    files[4]=poe11_dev
    files[5]=poe21_dev,files[6]=poe31_dev
    files[7]=poe41_dev
    channels[1]=ivm01_dev,channels[2]=ivm02_dev
    files[13]=poe08_dev
    more=1

rem --- Background

    call pgmdir$+"syc_cn.bbx","",0,3,'ce',status

rem --- Run Update?

    msg_id$="AON_UPDT_QUERY"
    dim x$:stbl("+SYSINFO_TPL")
    dim msg_tokens$[1]
    x$=stbl("+SYSINFO")                                                            
    msg_tokens$[1]=x.task_desc$
    gosub disp_message
    if msg_opt$<>"Y" then goto std_exit

rem --- Position file

    call pgmdir$+"adc_progress.aon","N","","","","",0,pow07_dev,1,meter_num,ignore_status
    exit_ctrl=1
    read (pow07_dev,key=firm_id$,dom=*next)

rem --- Get next sort record

    while more

        k$=key(pow07_dev,end=done)
        if pos(firm_id$=k$)<>1 then goto done
        read (pow07_dev)

        alpha=1
        vendor=2
        req=3
        flag=0

        action=pos(sequence$="AVR")

        switch(action)

            case alpha; rem --- Alpha sequence
            case vendor; rem --- Vendor sequence

                poe01a.firm_id$=k$(1,2)
                poe01a.vendor_id$=k$(13,6)
                poe01a.req_no$=k$(19,7)
                break

            case req; rem --- Requisition sequence

                poe01a.firm_id$=k$(1,2)
                poe01a.vendor_id$=k$(20,6)
                poe01a.req_no$=k$(13,7)
                break

            case default
                flag=1
                break

        swend

        if flag then flag=0;continue

    rem --- Read requisition header

        call pgmdir$+"adc_progress.aon","S","","","","",0,0,1,meter_num,ignore_status
        find record (poe01_dev,key=poe01a.firm_id$+poe01a.vendor_id$+poe01a.req_no$,dom=*continue) poe01a$

    rem --- Get next PO Number

        call pgmdir$+"poc_na.bbx","A","P",pos10_dev,firm_id$,v$
    rem    a0$(1)=b0$
    rem    a0$(9)=v$
        poe02a.firm_id$=poe01a.firm_id$
        poe02a.vendor_id$=poe01a.vendor_id$
        poe02a.po_no$=v$

    rem --- Create purchase order from requisition

rem    a1$(1)=b1$
rem    a1$(112,7)=b0$(9),a[all]=b[all],x2$(1)=a0$
rem    x3$(1)=firm_id$+a0$(9)+a0$(3)
rem    x5$(1)=firm_id$+a1$(112,7)+a0$(3)

        poe02a.warehouse_id$    = poe01a.warehouse_id$
        poe02a.purch_addr$      = poe01a.purch_addr$
        poe02a.ord_date$        = poe01a.ord_date$
        poe02a.promise_date$    = poe01a.promise_date$
        poe02a.not_b4_date$     = poe01a.not_b4_date$
        poe02a.reqd_date$       = poe01a.reqd_date$
        poe02a.recpt_date$      = poe01a.recpt_date$
        poe02a.hold_flag$       = poe01a.hold_flag$
        poe02a.terms_code$      = poe01a.terms_code$
        poe02a.ap_ship_via$     = poe01a.ap_ship_via$
        poe02a.acknowledge$     = poe01a.acknowledge$
        poe02a.fob$             = poe01a.fob$
        poe02a.po_msg_code$     = poe01a.po_msg_code$
        poe02a.req_no$          = poe01a.req_no$

        poe22a.firm_id$ = poe02a.firm_id$
        poe22a.vendor_id$ = poe02a.vendor_id$
        poe22a.po_no$ = poe02a.po_no$

        poe32a.firm_id$ = firm_id$
        poe32a.po_no$ = poe02a.po_no$
        poe32a.vendor_id$ = poe02a.vendor_id$

        poe52a.firm_id$ = firm_id$
        poe52a.req_no$ = poe02a.req_no$
        poe52a.vendor_id$ = poe02a.vendor_id$
        poe52a.po_no$ = poe02a.po_no$

        write record (poe02_dev,key=poe02a.firm_id$+poe02a.vendor_id$+poe02a.po_no$) poe02a$
        write record (poe22_dev,key=poe22a.firm_id$+poe22a.vendor_id$+poe22a.po_no$) poe22a$
        write record (poe32_dev,key=poe32a.firm_id$+poe32a.po_no$+poe32a.vendor_id$) poe32a$
        write record (poe52_dev,key=poe52a.firm_id$+poe52a.po_no$+poe52a.vendor_id$+poe52a.po_no$) poe52a$

    rem --- Position detail file

rem        read (poe11_dev,key=poe01a.firm_id$+poe01a.vendor_id$+poe01a.req_no$,dom=*next)
        read (poe11_dev,key=poe01a.firm_id$,dom=*next)

        while more

            k$=key(poe11_dev,end=*break)
            if pos(poe11a.firm_id$=k$)<>1 then break

        next_poe11a: rem --- Read next detail line

            read record (poe11_dev) poe11a$
            req$=poe11a.req_no$
rem            w0$(1,15)=a0$,w[3]=w[2]
            poe11a.firm_id$=poe02a.firm_id$
            poe11a.vendor_id$=poe02a.vendor_id$
            poe11a.req_no$=poe02a.req_no$
            poe11a.reserved_num_01=poe02a.req_qty

            write record (poe12_dev,key=poe11a.firm_id$) poe12a$
rem            x4$=w0$(1,2)+w3$(3,20)+w0$(9,10)+w0$(3,6)
            poe42a.firm_id$=poe11a.firm_id$
            poe42a.item_id$=poe11a.item_id$
            poe42a.po_no$=poe11a.req_no$
            poe42a.po_line_no$=poe11a.po_line_no$
            poe42a.vendor_no$=poe11a.vendor_no$

        rem --- Read line code

            if firm_id$+poe11a.po_line_code$<>pom02a.firm_id$+pom02a.po_line_code$

rem                y0$(1)=firm_id$+w1$(1,2)
rem                y1$(1)=""

                pom02a.firm_id$=firm_id$
                pom02a.po_line_code$=poe11a.po_line_code$
                pom02a.code_desc$=""
                pom02a.line_type$=""
                pom02a.dropship$=""
                pom02a.lead_tim_flg$=""
                pom02a.land_cst_flg$=""
                pom02a.add_options$=""
                
                find record (pom02_dev,key=y0$,dom=*next) pom02a$

            endif

            rem --- Update inventory?

            if pom02a.line_type$="S"

                write record (poe42_dev,key=poe42a.firm_id$) poe42a$
                item$[0]=firm_id$
                item$[1]=poe11a.firm_id$,item$[2]=poe11a.vendor_id$
rem                ,refs[0]=w[3]
                action$="OO"
                params$[2]=i2$,params$[3]=i3$,params$[4]=i4$
                call pgmdir$+"ivc_ua.bbx",action$,channels[all],params[all],params$[all],item$[all],refs$[all],refs[all],status

            endif

            rem --- Update work order?

            if sf$<>"N" and pos(pom02a.line_type$="NS")=1 and cvs(poe11a.wo_no$,2)<>""

                oldwo$=poe11a.wo_no$+poe11a.sequence_no$
                newwo$=oldwo$,po$=poe11a.req_no$+poe11a.po_line_no$
                call pgmdir$+"poc_wa.bbx",sfe22_dev,sfe32_dev,firm_id$,po$,"P",pom02a.code_desc$,oldwo$,newwo$,i[1],status

            else

            rem --- Update PO to OP link

            if cvs(poe11a.customer_id$+poe11a.order_no$+poe11a.line_no$,2)<>""

rem                dim poe080$(18),poe081$(16)
rem                poe080$(1)=w0$
rem                poe081$(1)=w2$(11,16)
                write record (poe08_dev) poe08a$

            endif

            rem --- Loop back for next detail

        poe11a_loop:

        wend

    rem --- Delete requisition source

        params$[0]=firm_id$
        params$[1]="N",params$[2]=i2$
        params$[3]=i3$
        params$[4]=i4$,params[0]=i[1]
        call pgmdir$+"poc_ea.bbx","R",files[all],params[all],params$[all],poe01a.firm_id$,poe01a.warehouse_id$,status

    rem --- Loop back for next record

    wend

done: rem --- All done

    goto std_exit

rem #include std_functions.src
rem --- Standard AddonSoftware functions (01Mar2006)

rem --- fnmask$: Alphanumeric Masking Function (formerly fnf$)

    def fnmask$(q1$,q2$)
        if q2$="" q2$=fill(len(q1$),"0")
        return str(-num(q1$,err=*next):q2$,err=*next)
        q=1
        q0=0
        while len(q2$(q))
              if pos(q2$(q,1)="-()") q0=q0+1 else q2$(q,1)="X"
              q=q+1
        wend
        if len(q1$)>len(q2$)-q0 q1$=q1$(1,len(q2$)-q0)
        return str(q1$:q2$)
    fnend

rem #endinclude std_functions.src

rem #include disp_message.src

disp_message:rem --- Display Message Dialog

    call stbl("+DIR_SYP")+"bac_message.bbj",msg_id$,msg_tokens$[all],msg_opt$,table_chans$[all]
return
	
rem #endinclude disp_message.src

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    call stbl("+DIR_SYP")+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:                                str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src
rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:                                   str(err:"000"),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    call pgmdir$+"adc_progress.aon","D","","","","",0,0,0,meter_num,status
    run pgmdir$+"ads_process_end.aon",err=*next
    release

rem #endinclude std_end.src

    end
