rem --- Accumulate Total For Requisition, PO Or Receipt
rem --- Program poc_ta v8.0.0 27Dec2007 (poc_ta)
rem --- Created by c:\codeport_bbj\adx_codeport.bbj v1.1.5 (12/27/2007 10:55:14)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright BASIS International Ltd.  All Rights Reserved.
rem --- All Rights Reserved


            seterr std_error
            setesc std_error
            enter type$,poe11_dev,pom02_dev,a0$,w0$,v1,v2,m1$,places,my_context,control_id,total,status

rem --- Retrieve the program path

            pgmdir$=stbl("+dir_pgm",err=*next)

rem --- Retrieve sysinfo data

            sysinfo_template$=stbl("+sysinfo_tpl",err=*next)
            dim sysinfo$:sysinfo_template$
            sysinfo$=stbl("+sysinfo",err=*next)
            milestone=num(stbl("+milestone",err=*next),err=*next)
            firm_id$=sysinfo.firm_id$

rem --- Open/Lock files

            files=4,begfile=1,endfile=files
            dim files$[files],options$[files],ids$[files],templates$[files],channels[files]
            files$[1]="aps_params",ids$[1]="APS_PARAMS"
            files$[2]="ivs_params",ids$[2]="IVS_PARAMS"
            files$[3]="poe-11",ids$[3]="POE_REQDET"
            files$[4]="pom-02",ids$[4]="POC_LINECODE"
            call pgmdir$+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],
:                                   ids$[all],templates$[all],channels[all],batch,status
            if status goto std_exit
            aps01a_dev=channels[1]
            ivs01a_dev=channels[2]
            poe11_dev=channels[3]
            pom02_dev=channels[4]

rem --- Dimension string templates

            dim aps01a$:templates$[1],ivs01a$:templates$[2],poe11a$:templates$[3],
:           pom02a$:templates$[4]

rem --- Retrieve parameter records

            aps01a_key$=firm_id$+"AP00"
            find record (aps01a_dev,key=aps01a_key$,err=std_missing_params) aps01a$
            ivs01a_key$=firm_id$+"IV00"
            find record (ivs01a_dev,key=ivs01a_key$,err=std_missing_params) ivs01a$

rem --- Determine Interface

            inter$=pad(stbl("+INTERFACE"),512),ui$=inter$(26,1)

rem --- Initializations

            precision places
            dim b0$(25),b1$(48),b2$(32),b3$(22),b4$(40),b[12],y0$(4),y1$(32)
            total=0
            y0$(1)="",firm_id$=a0$(1,2)
            more=1
rem --- Position detail file

            read (poe11_dev,key=a0$,dom=*next)

while more

rem --- Read next detail record

            poe11a_key$=key(poe11_dev,end=done)
            if pos(a0$=poe11a_key$)<>1 then
                break
            endif
            read record (poe11_dev) poe11a$
            if firm_id$+poe11a.PO_LINE_CODE$<>pom02a.FIRM_ID$+pom02a.PO_LINE_CODE$ then
rem --- Read line code
                    rem y0$(1)=firm_id$+b1$(1,2)
                    pom02a.FIRM_ID$=firm_id$
                    pom02a.FIRM_ID$=poe11a.FIRM_ID$
                    find record (pom02_dev,key=pom02a.FIRM_ID$+pom02a.PO_LINE_CODE$,dom=*continue) pom02a$
            endif
rem --- Accumulate total

            qty=poe11a.RESERVED_NUM
            if type$="R" then
                let qty=poe11a.REQ_QUANTITY
            else
                if type$="P" then
                    let qty=poe11a.RESERVED_NUM-poe11a.RESERVED_NUM
                endif
            endif
            if pom02a.LINE_TYPE$="O" then let qty=1
            total=total+qty*poe11a.UNIT_COST

        rem --- Loop back for next record
wend

done: rem --- All done

            total=round(total,2)
            if ui$<>"W" then print @(v1,v2),total:m1$, else call pgmdir$+"syc_rs.bbx","",my_context,control_id,"",total,m1$,ignore_status
            read (poe11_dev,key=w0$,dom=std_exit)
            goto std_exit

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    call stbl("+DIR_SYP")+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:                                str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src
rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:                                   str(err:"000"),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_exit.src

std_exit: rem --- Standard called program exit (01Mar2006)

    exit

rem #endinclude std_exit.src

    end
