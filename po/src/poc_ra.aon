rem --- Process Standard Ribbon Entry
rem --- Program poc_ra v8.0.0 20Dec2007 (poc_ra)
rem --- Created by c:\codeport_bbj\adx_codeport.bbj v1.1.5 (12/20/2007 11:02:33)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright (c) 1981-2007 AddonSoftware
rem --- All Rights Reserved



                  seterr std_error
                  setesc std_error
                  enter type$,action$,params$[all],params[all],channels[all],a$[all],a[all],fkey,rib_context,parent_context,vmenu$[all],vmenu[all],vtool$[all],vtool[all],o0

rem --- Retrieve the program path

                 pgmdir$=stbl("+dir_pgm",err=*next)

rem --- Retrieve sysinfo data

                 sysinfo_template$=stbl("+sysinfo_tpl",err=*next)
                 dim sysinfo$:sysinfo_template$
                 sysinfo$=stbl("+sysinfo",err=*next)
                 milestone=num(stbl("+milestone",err=*next),err=*next)
                 firm_id$=sysinfo.firm_id$

rem --- Open/Lock files

                files=7,begfile=1,endfile=files
                dim files$[files],options$[files],ids$[files],templates$[files],channels[files]
                files$[1]="apm-05",ids$[1]="APM_VENDADDR"
                files$[2]="apc_termscode",ids$[2]="APC_TERMSCODE"
                files$[3]="aps_params",ids$[3]="APS_PARAMS"
                files$[4]="ivc_whsecode",ids$[4]="IVC_WHSECODE"
                files$[5]="ivs_params",ids$[5]="IVS_PARAMS"
                files$[6]="ope-01",ids$[6]="OPE_ORDHDR"
                files$[7]="pom-04",ids$[7]="POC_MSGCODE"
                call pgmdir$+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],
:                                   ids$[all],templates$[all],channels[all],batch,status
                if status goto std_exit
                apm05_dev=channels[1]
                apm10_dev=channels[2]
                aps01a_dev=channels[3]
                ivm10_dev=channels[4]
                ivs01a_dev=channels[5]
                ope01_dev=channels[6]
                pom04_dev=channels[7]

rem --- Dimension string templates

                dim apm05a$:templates$[1],apm10a$:templates$[2],aps01a$:templates$[3],
:               ivm10a$:templates$[4],ivs01a$:templates$[5],ope01a$:templates$[6],
:               pom04a$:templates$[7]

rem --- Retrieve parameter records

                aps01a_key$=firm_id$+"AP00"
                find record (aps01a_dev,key=aps01a_key$,err=std_missing_params) aps01a$
                ivs01a_key$=firm_id$+"IV00"
                find record (ivs01a_dev,key=ivs01a_key$,err=std_missing_params) ivs01a$

rem --- Open/Lock Files

                apm05_dev=channels[1]
                apm10_dev=channels[2],ivm10_dev=channels[3]
                pom04_dev=channels[4]
                ope01_dev=channels[5]

rem --- Determine Interface

                call pgmdir$+"syc_dg.bbx",sysgui_dev,event$,event_len,sysfin$,sysfin,ui$,status
                if status then goto std_exit

rem --- Parameters

                number=1
                keylen=params[1],l0=params[2]
                exists=params[3]
                firm_id$=params$[1],gl$=params$[2]
                passreprint$=""
                existsreprint=exists
                if pos(type$="RS") and existsreprint call pgmdir$+"syc_df.bbx",1,5,parent_context,ignore_status; rem enable print button

rem --- Initializations
                more=1
                dim a0$(keylen),a1$(160)
                dim description$[number],field[number],position[number],length[number]
                a0$(1)=a$[0]
                a1$(1)=a$[1],pm$="(###) 000-0000",pm=len(pm$)
                received$=""
                hold$="",ordered$="    Date Ordered:",packing$=""
                fkey=0
                l1=l0+4,l2=l0
                if type$="P" then let received$="Last Receipt:",l1=l1+1
                if type$="R" then let ordered$="Requisition Date:",hold$="Hold:"
                if pos(type$<>"RP") then
                        received$="Date Received:"
                        packing$="Packing List:",l1=l1+1,l2=l0+1
                endif

back_ground: rem --- Background

                if ui$<>"W" then 
                        call pgmdir$+"syc_wc.bbx",1,0,80,1,0,l0-3,0
                        call pgmdir$+"syc_wc.bbx",1,0,80,1,0,l0-1,0

                        print 'sb',@(0,l0-2),"Contact:",@(35),"Phone:",@(61),"Fax:",@(0,l0),ordered$,@(3,l0+1),"Date Required:",@(3,l0+2),"Date Promised:",@(1,l0+3),"Not Before Date:",@(17-len(received$),l0+4),received$,@(8,l1),"Ship Via:",@(3,l1+1),"Freight Terms:",@(6,l1+2),"Terms Code:",@(10,l1+3),"F.O.B.:",@(1,l1+4),"Acknowledged By:",@(12,l1+5),hold$,@(46-len(packing$),l0),packing$,@(38,l2),"Message:",@(38,l2+1),"Ship To:",@(38,l1+3),"Ordered By:",'sf',
                endif        
user_interface: rem --- GUI


                gosub set_controls

rem --- Options

                if pos("D"=action$) then gosub display_fields
                if pos("D"=action$) or pos("B"=action$) then goto std_exit

rem --- New record?
while more; rem main loop

                 if exists then let i0=i0_done-1,validate=0,v3=0; break

purch_addr: rem --- Purchase Address

    while more
                v0$="Z"
                v1$="",v2$=a1$(3,2),v3$="",v0=2,v1=68,v2=3,v3=0,i0=0,control_id=3000
                v4$="Enter A Valid Purchase Address Code (<F1>=None/<F3>=Lookup)"
                if pos(type$="QC") then goto flow_control
                if ui$<>"W" then print @(v1,v2),'cl'
                on v3 goto get_purch_addr,getting_address,assign_value,getting_address1,assign_value,get_purch_addr,assign_value

getting_address:
        while more
                v$=""
                break

getting_address1:
                call pgmdir$+"syc_lt.bbx","P",a0$(3,6),v$
                if v$="" then continue
                break

assign_value:
                v$=a1$(3,2)
                break
        wend            

get_purch_addr: rem --- Retrieve purchase address

                gosub do_purch_addr
                if status then continue
                    else
                        break
    wend
                a1$(3,2)=v$
                break

dt_ord: rem --- Date Ordered


                v4$="Enter The Date That This Order Was Placed"
                v0$="D"
                v1$="CR6N",v2$=a1$(5,6),v3$="",v0=6,v1=18,v2=l0,control_id=3001
                on v3 goto control_flow,dt_ord,flow_control,dt_ord,flow_control,control_flow,flow_control

control_flow:
                a1$(5,6)=v$
                break

dt_req: rem --- Date Required

    while more

                v4$="Enter Date Required By"
                v0$="D"
                v1$="CR6N",v2$=a1$(23,6),v3$="",v0=6,v1=18,v2=l0+1,control_id=3002
                on v3 goto control_flow2,dt_req,flow_control,dt_req,flow_control,control_flow2,flow_control

control_flow2:
                if v$<a1$(5,6) then continue
                    else
                        break
    wend
                a1$(23,6)=v$
                break


dt_promised: rem --- Date Promised

    while more

                v4$="Enter (Optional) Delivery Promised Date"
                v0$="D"
                v1$="C6N",v2$=a1$(11,6),v3$="",v0=6,v1=18,v2=l0+2,control_id=3003
                on v3 goto control_flow3,dt_promised,flow_control,dt_promised,flow_control,control_flow3,flow_control

control_flow3:
                if cvs(v$,2)<>"" then 
                            if v$<a1$(5,6) then continue
                else
                    break
    wend

    a1$(11,6)=v$
    break

dt_not_before: rem --- Not Before Date

         while more


                v4$="Enter (Optional) Delivery Not Before Date"
                v0$="D"
                v1$="C6N",v2$=a1$(17,6),v3$="",v0=6,v1=18,v2=l0+3,control_id=3004
                 on v3 goto message_date1,dt_not_before,flow_control,dt_not_before,flow_control,message_date1,flow_control

message_date1:
                if cvs(v$,2)="" then break
                if v$<a1$(5,6) then continue
                if v$>a1$(23,6) then continue
                if cvs(a1$(11,6),2)<>"" then 
                                if v$>a1$(11,6) then continue
                else
                    break
         wend

control_flow4:

                a1$(17,6)=v$
                break

dt_recv: rem --- Date Received

                if pos(type$="QC")=0 then goto flow_control
                control_id=3000+i0

received_date:

   while more
                v4$="Enter Date Received"
                v0$="D"
                v1$="C6N",v2$=a1$(29,6),v3$="",v0=6,v1=18,v2=l0+4
                on v3 goto date_check,received_date,flow_control,received_date,flow_control,date_check,flow_control

date_check:
                if v$<a1$(5,6) then continue
                if gl$="Y" then call pgmdir$+"glc_datecheck.aon",v$,"Y",period$,year$,status
                if status>99 then continue
                    else
                        break
  wend

                a1$(29,6)=v$
                warned=1
                break

ship_via: rem --- Ship Via

                control_id=3000+i0

message2:
                v4$="Enter The Shipping Method Or Carrier For This Order"
                v0$="S"
                v1$="C",v2$=a1$(59,15),v3$="",v0=15,v1=18,v2=l1
                on v3 goto control_flow5,message2,flow_control,message2,flow_control,control_flow5,flow_control

control_flow5:
                a1$(59,15)=v$
                break

frt_terms: rem --- Freight Terms

                control_id=3000+i0

message3:
                v4$="Enter The Freight Terms For This Order"
                v0$="S"
                v1$="C",v2$=a1$(44,15),v3$="",v0=15,v1=18,v2=l1+1
                on v3 goto control_flow05,message3,flow_control,message3,flow_control,control_flow05,flow_control

control_flow05:
                a1$(44,15)=v$
                break

terms_cd: rem --- Terms Code

                control_id=3000+i0
                display_id=3000+i0

message4:
                v4$="Enter A Valid Terms Code (<F3>=Lookup)"
                v0$="S"
                v1$="CR",v2$=a1$(38,2),v3$="",v0=2,v1=18,v2=l1+2
                on v3 goto control_flow6,message4,flow_control,terms_code_lookup,flow_control,control_flow6,flow_control

terms_code_lookup:

               gosub lu_terms

control_flow6:
                apm10c.FIRM_ID$=firm_id$
                apm10c.RECORD_ID_C$="C"
                apm10c.TERMS_CODEAP$=v$(1,2)
                apm10c.CODE_DESC$=v$(3,20)
                apm10c.PROX_OR_DAYS$=v$(21,1)
                find record (apm10_dev,key=apm10c.FIRM_ID$+apm10c.RECORD_ID_C$+apm10c.TERMS_CODEAP$,dom=message4) apm10c$
                a1$(38,2)=apm10c.TERMS_CODEAP$
                if ui$<>"W" then print @(v1,v2),a1$(38,2)," ",apm10c.CODE_DESC$,
                if ui$="W" then call pgmdir$+"syc_rs.bbx","",my_context,display_id,a1$(38,2),0,"",status; call pgmdir$+"syc_rs.bbx","",my_context,display_id+10000,apm10c.CODE_DESC$,0,"",status
                break

fob: rem --- F.O.B.

               control_id=3000+i0

message5:
                v4$="Enter Any Optional F.O.B. Information"
                v0$="S"
                v1$="C",v2$=a1$(94,15),v3$="",v0=15,v1=18,v2=l1+3
                on v3 goto control_flow7,message5,flow_control,message5,flow_control,control_flow7,flow_control

control_flow7:
                a1$(94,15)=v$
                break

ack: rem --- Acknowledged

                control_id=3000+i0

message6:
                v4$="Enter The Vendor's Acknowledgement For This Order"
                v0$="S"
                v1$="C",v2$=a1$(74,20),v3$="",v0=20,v1=18,v2=l1+4
                on v3 goto control_flow8,message6,flow_control,message6,flow_control,control_flow8,flow_control

control_flow8:
                a1$(74,20)=v$
                break

hold: rem --- Hold?

                if type$<>"R" then goto flow_control

message7:
                v4$="Hold This Requisition Until Manually Released (Y/N)?"
                v0$="Y"
                v1$="C",v2$=a1$(35,1),v3$="",v0=1,v1=18,v2=l1+5,control_id=3010
                on v3 goto control_flow9,message7,flow_control,message7,flow_control,control_flow9,flow_control

control_flow9:
                a1$(35,1)=v$
                break

packing_list: rem --- Packing list

                if pos(type$="QC")=0 then goto flow_control
                control_id=3000+i0

message8:
                v4$="Enter Any (Optional) Packing List Information"
                v0$="S"
                v1$="C",v2$=a1$(119,15),v3$="",v0=15,v1=47,v2=l0
                on v3 goto control_flow10,message8,flow_control,message8,flow_control,control_flow10,flow_control

control_flow10:

                a1$(119,15)=v$
                break

message: rem --- Message


                v4$="Enter The Standard Message To Be Printed For This Order (<F1>=None/<F3>=Lookup)"
                v0$="S"
                v1$="C",v2$=a1$(109,3),v3$="",v0=3,v1=47,v2=l2,control_id=3011
                on v3 goto call_pgm2,call_pgm,flow_control,call_pgm1,flow_control,call_pgm2,flow_control

call_pgm:


                v$=""
                goto call_pgm3

call_pgm1:
                call pgmdir$+"poc_lk.bbx",2,v1,v2,v$

call_pgm2:
                if v$<>"" then 
                        pom04a.FIRM_ID$=firm_id$
                        pom04a.PO_MSG_CODE$=v$
                        find record (pom04_dev,key=pom04a.FIRM_ID$+pom04a.PO_MSG_CODE$,dom=message) pom04a$
                        if ui$<>"W" then print @(v1,v2),pom04a.PO_MSG_CODE$," ",pom04a.CODE_DESC$,
                        if ui$="W" then call pgmdir$+"syc_rs.bbx","",my_context,3011,pom04a.PO_MSG_CODE$,0,"",status; call pgmdir$+"syc_rs.bbx","",my_context,13011,pom04a.CODE_DESC$,0,"",status
                       
                else        


call_pgm3:
                    if ui$<>"W" then print @(v1,v2),'cl',
                    if ui$="W" then call pgmdir$+"syc_rs.bbx","",my_context,3011,fill(3),0,"",status; call pgmdir$+"syc_rs.bbx","",my_context,13011,fill(20),0,"",status

               endif
control_flow11:
                a1$(109,3)=v$
                break

ship_to: rem --- Ship To


                v4$="Enter A Valid Warehouse ID (<F3>=Lookup)"
                v0$="S"
                v1$="CR",v2$=a1$(1,2),v3$="",v0=2,v1=47,v2=l2+1,control_id=3012
                on v3 goto call_pgm5,ship_to,flow_control,cal_pgm4,flow_control,call_pgm5,flow_control

cal_pgm4:
                call pgmdir$+"ivc_lk.bbx",3,v1,v2,v$

call_pgm5:
                ivm10c.FIRM_ID$=firm_id$
                ivm10c.RECORD_ID_C$="C"
                ivm10c.WAREHOUSE_ID$=v$
                find record (ivm10_dev,key=ivm10c.FIRM_ID$+ivm10c.RECORD_ID_C$+ivm10c.WAREHOUSE_ID$,dom=ship_to) ivm10c$
                x$=ivm10c.ADDR_LINE_1$+ivm10c.ADDR_LINE_2$+ivm10c.ADDR_LINE_3$+ivm10c.CITY$+fill(24)+ivm10c.STATE_CODE$+ivm10c.ZIP_CODE$
                a1$(1,2)=ivm10c.WAREHOUSE_ID$
                if ui$<>"W" then print @(v1,v2),a1$(1,2)," ",ivm10c.SHORT_NAME$ else call pgmdir$+"syc_rs.bbx","",my_context,3012,a1$(1,2),0,"",status; call pgmdir$+"syc_rs.bbx","",my_context,2006,ivm10c.SHORT_NAME$,0,"",status
                gosub display_fields
                break

ordered_by: rem --- PO ordered by

                if cvs(a1$(151,10),2)="" then let a1$(151,10)=info(3,2)

message9:

                v4$="Enter the person who created the PO"
                control_id=3015
                v0$="S"
                v1$="C",v2$=a1$(151,10),v3$="",v0=10,v1=50,v2=l1+3
                on v3 goto flow_control12,message9,flow_control,message9,flow_control,flow_control12,flow_control

flow_control12:

                a1$(151,10)=v$
               break

sales_order: rem --- Get Sales Order

                if !( ope01_dev=0 or a1$(37,1)<>"Y" )then 

message10:

                            v0$="S"
                            v1$="CR",v2$=a1$(141,7),v3$="",v0=7,v1=42,v2=l2+3,v4$="Enter customer order number",control_id=3014
                            on v3 goto read_record,message10,flow_control,message10,flow_control,read_record,flow_control

read_record:

                            v$=fill(7-len(v$),"0")+v$
                            read (ope01_dev,key=firm_id$,dom=*next)

while more

                            ope01a_key$=key(ope01_dev,end=message10)
                            if ope01a.FIRM_ID$<>firm_id$ then goto message10
                            if ope01a.ORDER_NO$<>v$ then read (ope01_dev); wend
                            a1$(135,6)=ope01a.CUSTOMER_ID$
                            a1$(140,7)=ope01a.ORDER_NO$
                            v2=l2+1
                            if ui$<>"W" then print @(42,v2+2),a1$(141,7) else call pgmdir$+"syc_rs.bbx","",my_context,3014,a1$(141,7),0,"",status
               endif             

               break

wend;rem main loop end

flow_control: rem --- Flow Control


                            if next_tab_index>=0 and next_tab_index<>tab_index then let o0=9,next_tab_index=-1; goto validate_input
                            on v3 goto incr_i0,incr_i0,decr_i0,incr_i0,start_done,done_v3
decr_i0:
                            if i0<i0_nonkey1 then let i0=max(0,i0-1) else let i0=max(i0_nonkey1,i0-1)
                            goto next_field

incr_i0:
                            i0=i0+1

next_field:

                            if pos(type$="P") then on i0 goto purch_addr,dt_ord,dt_req,dt_promised,dt_not_before,dt_recv,ship_via,frt_terms,terms_cd,fob,ack,message,ship_to,flow_control,sales_order,ordered_by,flow_control,done
                            if pos(type$="R") then on i0 goto purch_addr,dt_ord,dt_req,dt_promised,dt_not_before,ship_via,frt_terms,terms_cd,fob,ack,hold,message,ship_to,flow_control,sales_order,ordered_by,flow_control,done
                            if pos(type$="QC") then on i0 goto purch_addr,flow_control,flow_control,flow_control,flow_control,dt_recv,flow_control,flow_control,flow_control,flow_control,flow_control,flow_control,flow_control,flow_control,flow_control,flow_control,packing_list,done


start_done:
                            let i0=i0_done

done: rem --- Is The Above Information Correct?

                        if validate then let validate=0

                                else

                            gosub display_fields
                            v4$="Is the above information correct (Y/N/Delete/<F1>=Reprint)?"
                            reprint$="Y"
                            if pos(type$="RP")=0 or existsreprint=0 then let v4$="Is the above information correct (Y/N/Delete)?",reprint$="N"
                            v0$="S"
                            v1$="CER",v2$="Y",v3$="",v0=6,v1=0,v2=22,exists=0,control_id=i0-i0_done+1
                       
done_v3:
                            on v3 goto done_test,re_print,done,done,cancel,validate_input,cancel,delete_record,done

re_print:
                            if reprint$="N" then goto start_done else let v$="Y",passreprint$="Y"

done_test:
                            if v$<>"DELETE" then 
                                 on pos(v$="YN") goto flow_control,validate_input,do_nonkey1
validate_input:
                                 validate=1
                                 old_control_id=0
do_nonkey1:
                                 i0=i0_nonkey1
                                 v3=0; goto next_field
                            endif
delete_record:
                            o0=3; goto std_exit
cancel:
                            o0=6; goto std_exit
                      endif      

end_input: rem --- User Input Completed

                        a$[0]=a0$
                        a$[1]=a1$
                        if passreprint$="Y" then let fkey=1
                        goto std_exit

display_fields: rem --- Format ribbon information

                        dim rvalues$[rcontrols]
                        dim x$(150),promised$(8),before$(8),receipt$(8)
                        rem dim x0$(10),x1$(160),phone$(pm),fax$(pm)
                        dim phone$(pm),fax$(pm)
                        packing$=""
                        if cvs(a1$(11,6),2)<>"" then let promised$=fndate$(a1$(11,6))
                        if cvs(a1$(17,6),2)<>"" then let before$=fndate$(a1$(17,6))
                        if pos(type$="PQC") then if cvs(a1$(29,6),2)<>"" then let receipt$=fndate$(a1$(29,6))
                        if pos(type$="QC") then let packing$=a1$(119,15)
                        call pgmdir$+"syc_df.bbx",(a1$(37,1)="Y"),3014,my_context,ignore_status

rem --- Retrieve code descriptions

                        apm10c.FIRM_ID$=firm_id$
                        apm10c.RECORD_ID_C$="C"
                        apm10c.TERMS_CODEAP$=a1$(38,2)

                        ivm10c.FIRM_ID$=firm_id$
                        ivm10c.RECORD_ID_C$="C"
                        ivm10c.WAREHOUSE_ID$=a1$(1,2)

                        find record (apm10_dev,key=apm10c.FIRM_ID$+apm10c.RECORD_ID_C$+apm10c.TERMS_CODEAP$,dom=*next) apm10c$
                        find record (ivm10_dev,key=ivm10c.FIRM_ID$+ivm10c.RECORD_ID_C$+ivm10c.WAREHOUSE_ID$,dom=*next) ivm10c$
                        w$=ivm10c.ADDR_LINE_1$+ivm10c.ADDR_LINE_2$+ivm10c.ADDR_LINE_3$+ivm10c.CITY$+fill(24)+ivm10c.STATE_CODE$+ivm10c.ZIP_CODE$
                        call pgmdir$+"adc_address.aon",w$,24,5,9,30
                        pom04a.FIRM_ID$=firm_id$
                        pom04a.PO_MSG_CODE$=a1$(109,3)
                        pom04a.FIRM_ID$=""
                        find record (pom04_dev,key=pom04a.FIRM_ID$+pom04a.PO_MSG_CODE$,dom=*next) pom04a$
                        v$=a1$(3,2)
                        v1=68,v2=3

rem --- Display ribbon information

                        gosub do_purch_addr
                        if ui$="W" then 
                            rvalues$[4]=fndate$(a1$(5,6))
                            rvalues$[5]=fndate$(a1$(23,6)),rvalues$[6]=promised$
                            rvalues$[7]=before$
                            rvalues$[8]=receipt$,rvalues$[9]=a1$(59,15)
                            rvalues$[10]=a1$(44,15)
                            rvalues$[11]=a1$(38,2),rvalues$[12]=apm10c.CODE_DESC$
                            rvalues$[13]=a1$(94,15)
                            rvalues$[14]=a1$(74,20),rvalues$[15]=a1$(109,3)
                            rvalues$[16]=pom04a.CODE_DESC$
                            rvalues$[17]=a1$(1,2),rvalues$[18]=""
                            rvalues$[19]=a1$(141,7)
                            rvalues$[20]=a1$(151,10)
                            if a1$(37,1)="Y" then let rvalues$[21]=custname$ else let rvalues$[21]=ivm10c.SHORT_NAME$
                            rvalues$[22]=w$(1,30)
                            rvalues$[23]=w$(31,30),rvalues$[24]=w$(61,30)
                            if pos(type$="QC") then let rvalues$[28]=packing$
                            rvalues$[25]=w$(91,30)
                            rvalues$[26]=w$(121,30)
                            if type$="R" then let rvalues$[8]=a1$(35,1)
                            call pgmdir$+"syc_rd.bbx","",my_context,0,rcontrols,rcontrols[all],rvalues$[all],rvalues[all],rmasks$[all],status
                            return
                        endif

character_interface: rem --- ChUI

                        print @(18,l0),fndate$(a1$(5,6)),@(18,l0+1),fndate$(a1$(23,6)),
:                             @(18,l0+2),promised$,@(18,l0+3),before$,@(18,l0+4),receipt$,
:                             @(18,l1),a1$(59,15),@(18,l1+1),a1$(44,15),
:                             @(18,l1+2),a1$(38,2)," ",apm10c.CODE_DESC$,@(18,l1+3),a1$(94,15),
:                             @(18,l1+4),a1$(74,20),@(50,l1+3),a1$(151,10),
:                             @(47,l2+2),@(42,l2+3),a1$(141,7)
                        if type$="R" then print @(18,l1+5),a1$(35,1),
                        print @(47,l0),packing$,@(47,l2),a1$(109,3)," ",pom04a.CODE_DESC$,
:                             @(47,l2+1),a1$(1,2)," ",ivm10c.SHORT_NAME$,@(50,l2+2),w$(1,30),
:                             @(50,l2+3),w$(31,30),@(50,l2+4),w$(61,30),@(50,l2+5),w$(91,30),
:                             @(50,l2+6),w$(121,30),
                        print @(50,l2+1),custname$

                        return

do_purch_addr: rem --- Purchase address

                    if cvs(v$,2)="" then 
                            status=0
                            if ui$<>"W" then print @(v1,v2),'cl',"Same",@(50,v2+1),'cl',@(50,v2+2),'cl',@(50,v2+3),'cl',@(50,v2+4),'cl',@(50,v2+5),'cl',; return
                            call pgmdir$+"syc_rs.bbx","",parent_context,2008,fill(2),0,"",status
                            call pgmdir$+"syc_rs.bbx","",parent_context,2009,"Same",0,"",status
                            call pgmdir$+"syc_rs.bbx","",parent_context,2010,fill(30),0,"",status
                            call pgmdir$+"syc_rs.bbx","",parent_context,2011,fill(30),0,"",status
                            call pgmdir$+"syc_rs.bbx","",parent_context,2012,fill(30),0,"",status
                            call pgmdir$+"syc_rs.bbx","",my_context,3000,fill(2),0,"",status
                            return
                    endif

d_purch_addr: rem --- Retrieve and display purchase address

                    apm05a.FIRM_ID$=firm_id$
                    apm05a.VENDOR_ID$=a0$(3,6)
                    apm05a.PURCH_ADDR$=v$
                    apm05a.NAME$="",phone$(1)="",fax$(1)="",status=11
                    find record (apm05_dev,key=apm05a.FIRM_ID$+apm05a.VENDOR_ID$+apm05a.PURCH_ADDR$,dom=create_purch_addr) apm05a$

        while more

                    x$=apm05a.ADDR_LINE_1$+apm05a.ADDR_LINE_2$+apm05a.CITY$+apm05a.STATE_CODE$+fill(24)+apm05a.ZIP_CODE$
                    status=0
                    call pgmdir$+"adc_address.aon",x$,24,4,9,30
                    call stbl("+DIR_SYP")+"bac_getmask.bbj","T",cvs(apm05a.phone_no$,2),"",phone_mask$
                    phone$=cvs(apm05a.phone_no$,2)
                    phone$=str(phone$:phone_mask$,err=*next)
                    rvalues$[2]=phone$
                    call stbl("+DIR_SYP")+"bac_getmask.bbj","T",cvs(apm05a.fax_no$,2),"",fax_mask$
                    fax$=cvs(apm05a.fax_no$,2)
                    fax$=str(fax$:fax_mask$,err=*next)
                    rvalues$[3]=fax$
                    if ui$<>"W" then
                        print @(9,l0-2),apm05a.CONTACT_NAME$,
:                             @(42),phone$,@(66),fax$,@(v1,v2),apm05a.PURCH_ADDR$,'cl',
:                             @(50,v2+1),apm05a.NAME$,@(50,v2+2),x$(1,30),
:                             @(50,v2+3),x$(31,30),@(50,v2+4),x$(61,30),
:                             @(50,v2+5),x$(91,30),; break
                    call pgmdir$+"syc_rs.bbx","",parent_context,2008,apm05a.PURCH_ADDR$,0,"",status
                    call pgmdir$+"syc_rs.bbx","",parent_context,2009,apm05a.NAME$,0,"",status
                    call pgmdir$+"syc_rs.bbx","",parent_context,2010,x$(1,30),0,"",status
                    call pgmdir$+"syc_rs.bbx","",parent_context,2011,x$(31,30),0,"",status
                    call pgmdir$+"syc_rs.bbx","",parent_context,2012,x$(61,30),0,"",status
                    rvalues$[0]=apm05a.PURCH_ADDR$
                    rvalues$[1]=apm05a.CONTACT_NAME$
                    call pgmdir$+"syc_rd.bbx","",my_context,0,3,rcontrols[all],rvalues$[all],rvalues[all],rmasks$[all],status
                    break

create_purch_addr: rem --- Create new purchase address?


                    call pgmdir$+"adc_yesno.aon",1,"Create A New Purchase Address",2,v$,v3
                    on v3 goto on_position,create_purch_addr,return_back2,create_purch_addr,return_back2,on_position,return_back2


on_position:
                    on pos(v$="YN") goto create_purch_addr,call_pgm7,return_back2

call_pgm7: 
                    call pgmdir$+"apc_pa.bbx","W",apm05_dev,apm05a.FIRM_ID$+apm05a.VENDOR_ID$+apm05a.PURCH_ADDR$,6,l0-2,my_context
                    find record (apm05_dev,key=apm05a.FIRM_ID$+apm05a.VENDOR_ID$+apm05a.PURCH_ADDR$,dom=return_back2) apm05a$
                    let v$=apm05a.PURCH_ADDR$

       wend

return_back2:
                    return

lu_terms: rem --- Terms Code Lookup

                    let channel=apm10_dev,title$="AP Terms Code Lookup",record$="C"
                    let field[0]=1,position[0]=4,length[0]=2,description$[0]="Code"
                    let field[1]=1,position[1]=6,length[1]=20,description$[1]="Description"
                    let column=79-length[0]-length[1]-2-number*4,v$="SKIP",row=v2+2
                    call pgmdir$+"syc_lk.bbx",channel,record$,number,title$,description$[all],field[all],position[all],length[all],column,row,v$
                    return

set_controls: rem " --- Ribbon Controls

                    let rcontrols=28
                    dim rcontrols[rcontrols],rvalues$[rcontrols],rvalues[rcontrols],rmasks$[rcontrols]
                    let rcontrols[0]=3000
                    let rcontrols[1]=2001,rcontrols[2]=2003,rcontrols[3]=2005
                    let rcontrols[4]=3001,rcontrols[5]=3002
                    let rcontrols[6]=3003,rcontrols[7]=3004,rcontrols[8]=3005
                    let rcontrols[9]=3006,rcontrols[10]=3007,rcontrols[11]=3008
                    let rcontrols[12]=13008,rcontrols[13]=3009,rcontrols[14]=3010
                    let rcontrols[15]=3011,rcontrols[16]=13011,rcontrols[17]=3012
                    let rcontrols[18]=3013,rcontrols[19]=3014,rcontrols[20]=3015
                    let rcontrols[21]=2006,rcontrols[22]=2007,rcontrols[23]=2008
                    let rcontrols[24]=2009,rcontrols[25]=2010,rcontrols[26]=2011
                    let rcontrols[27]=2012,rcontrols[28]=3016
                    if type$="R" then let rcontrols[8]=3010,rcontrols[9]=3005,rcontrols[10]=3006,rcontrols[11]=3007,rcontrols[12]=13007,rcontrols[13]=3008,rcontrols[14]=3009
                    return

rem #include std_functions.src
rem --- Standard AddonSoftware functions (01Mar2006)
rem --- Functions used to retrieve form values

    def fnstr_pos(q0$,q1$,q1)=int((pos(q0$=q1$,q1)+q1-1)/q1)
    def fnget_rec_date$(q0$)=rd_rec_data$[fnstr_pos(cvs(q0$,1+2+4)+"."+
:                            cvs(q0$,1+2+4),rd_rec_data$[0,0],40),0]
    def fnget_fld_data$(q0$,q1$)=cvs(rd_rec_data$[fnstr_pos(cvs(q0$,1+2+4)+"."+
:                                cvs(q1$,1+2+4),rd_rec_data$[0,0],40),0],2)
    def fnget_table$(q0$)=rd_alias_id$

rem --- Miscellaneous functions

    def fncenter(q$,q)=int((q-len(q$))/2)

rem --- Format inventory item description

    def fnitem$(q$,q1,q2,q3)=cvs(q$(1,q1)+" "+q$(q1+1,q2)+" "+q$(q1+q2+1,q3),32)

rem --- Date/time handling functions

    def fndate$(q$)
        q1$=""
        q1$=date(jul(num(q$(1,4)),num(q$(5,2)),num(q$(7,2)),err=*next),err=*next)
        if q1$="" q1$=q$
        return q1$
    fnend
    
    def fnyy$(q$)=q$(3,2)
    def fnclock$(q$)=date(0:"%hz:%mz %p")
    def fntime$(q$)=date(0:"%Hz%mz")

rem --- fnmask$: Alphanumeric Masking Function (formerly fnf$)

    def fnmask$(q1$,q2$)
        if q2$="" q2$=fill(len(q1$),"0")
        return str(-num(q1$,err=*next):q2$,err=*next)
        q=1
        q0=0
        while len(q2$(q))
              if pos(q2$(q,1)="-()") q0=q0+1 else q2$(q,1)="X"
              q=q+1
        wend
        if len(q1$)>len(q2$)-q0 q1$=q1$(1,len(q2$)-q0)
        return str(q1$:q2$)
    fnend

rem --- fnbasename$: Strip path and optionally the suffix from a file name

    def fnbasename$(q$,q0$)
        q=max(pos("/"=q$,-1),pos(":"=q$,-1),pos(">"=q$,-1),pos("\"=q$,-1))
        if q then q$=q$(q+1)
        if q0$<>"" then q=mask(q$,q0$); if q q$=q$(1,q-1)
    return q$

rem --- fnglobal: Return numeric value of passed stbl variable

    def fnglobal(q$,q1)
        q1$=stbl(q$,err=*next),q1=num(q1$,err=*next)
        return q1
    fnend

rem --- fnglobal$: Return string value of passed STBL variable

    def fnglobal$(q$,q1$)
        q1$=stbl(q$,err=*next)
        return q1$
    fnend

rem #endinclude std_functions.src

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    call stbl("+DIR_SYP")+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:                                str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src
rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:                                   str(err:"000"),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_exit.src

std_exit: rem --- Standard called program exit (01Mar2006)

    exit
rem #endinclude std_exit.src

    end
