rem --- Purchase Order Receipt Register Update
rem --- Program pou_da v8.0.0 26Dec2007 (pou_da)
rem --- Created by c:\codeport_bbj\adx_codeport.bbj v1.1.5 (12/26/2007 12:14:58)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright (c) 1981-2007 AddonSoftware
rem --- All Rights Reserved

    setesc std_error
    seterr std_error

rem --- Retrieve the program path

    pgmdir$=stbl("+dir_pgm",err=*next)

rem --- Retrieve sysinfo data

    sysinfo_template$=stbl("+sysinfo_tpl",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+sysinfo",err=*next)
    milestone=num(stbl("+milestone",err=*next),err=*next)
    firm_id$=sysinfo.firm_id$

rem --- Open/Lock files

    files=53,begfile=1,endfile=files
    dim files$[files],options$[files],ids$[files],templates$[files],channels[files]
    files$[1]="apm-01",ids$[1]="APM_VENDMAST"
    files$[2]="apm-06",ids$[2]="APM_VENDREPL"
    files$[3]="apc_typecode",ids$[3]="APC_TYPECODE"
    files$[4]="aps-01a",ids$[4]=""
    files$[5]="arc_distcode",ids$[5]="ARC_DISTCODE"
    files$[6]="glm-01",ids$[6]="GLM_ACCT"
    files$[7]="glt-04",ids$[7]="GLE_DAILYDETAIL"
    files$[8]="glt-14",ids$[8]=""
    files$[9]="ivm-01",ids$[9]="IVM_ITEMMAST"
    files$[10]="ivm-02",ids$[10]="IVM_ITEMWHSE"
    files$[11]="ivm-03",ids$[11]="IVX_ITEMPROD"
    files$[12]="ivm-04",ids$[12]="IVM_ITEMTIER"
    files$[13]="ivm-05",ids$[13]="IVM_ITEMVEND"
    files$[14]="ivm-07",ids$[14]="IVM_LSMASTER"
    files$[15]="ivm-08",ids$[15]="IVX_LSXREF"
    files$[16]="ivm-12",ids$[16]="IVM_ITEMACT"
    files$[17]="ivm-17",ids$[17]="IVM_LSACT"
    files$[18]="ivs_params",ids$[18]="IVS_PARAMS"
    files$[19]="ivt-01",ids$[19]="IVT_LSTRANS"
    files$[20]="ivt-02",ids$[20]="IVX_LSCUST"
    files$[21]="ivt-03",ids$[21]="IVX_LSVEND"
    files$[22]="ivt-04",ids$[22]="IVT_ITEMTRAN"
    files$[23]="mhe-_0",ids$[23]=""
    files$[24]="mhm-_0",ids$[24]=""
    files$[25]="poe-02",ids$[25]="POE_POHDR"
    files$[26]="poe-04",ids$[26]="POE_RECHDR"
    files$[27]="poe-12",ids$[27]="POE_PODET"
    files$[28]="poe-14",ids$[28]="POE_RECDET"
    files$[29]="poe-24",ids$[29]="POE_RECLSDET"
    files$[30]="poe-32",ids$[30]="POE_POBYPO"
    files$[31]="poe-34",ids$[31]="POE_RECBYPO"
    files$[32]="poe-42",ids$[32]="POE_POBYITEM"
    files$[33]="poe-44",ids$[33]="POE_RECBYITM"
    files$[34]="poe-52",ids$[34]="POE_POBYREQ"
    files$[35]="poe-54",ids$[35]="POE_POBYREC"
    files$[36]="pom-02",ids$[36]="POC_LINECODE"
    files$[37]="pot-04",ids$[37]="POT_RECHDR"
    files$[38]="pot-14",ids$[38]="POT_RECDET"
    files$[39]="pot-24",ids$[39]="POT_RECBYITM"
    files$[40]="pot-34",ids$[40]="POT_RECBYDAT"
    files$[41]="pot-44",ids$[41]="POT_RECBYVEN"
    files$[42]="sfe-01",ids$[42]="SFE_WOMASTR"
    files$[43]="sfe-13",ids$[43]="SFE_WOMATHDR"
    files$[44]="sfe-14",ids$[44]="SFE_WOLSISSU"
    files$[45]="sfe-15",ids$[45]="SFE_WOMATISH"
    files$[46]="sfe-22",ids$[46]="SFE_WOMATL"
    files$[47]="sfe-23",ids$[47]="SFE_WOMATDTL"
    files$[48]="sfe-25",ids$[48]="SFE_WOMATISD"
    files$[49]="sfe-32",ids$[49]="SFE_WOSUBCNT"
    files$[50]="sfm-07",ids$[50]="SFX_WOTRANXR"
    files$[51]="sfm-10",ids$[51]="SFC_WOTYPECD"
    files$[52]="sft-21",ids$[52]="SFT_OPNMATTR"
    files$[53]="sft-31",ids$[53]="SFT_OPNSUBTR"
    call pgmdir$+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],
:                                   ids$[all],templates$[all],channels[all],batch,status
    if status goto std_exit
    apm01_dev=channels[1]
    apm06_dev=channels[2]
    apm10_dev=channels[3]
    aps01a_dev=channels[4]
    arm10_dev=channels[5]
    glm01_dev=channels[6]
    glt04_dev=channels[7]
    glt14_dev=channels[8]
    ivm01_dev=channels[9]
    ivm02_dev=channels[10]
    ivm03_dev=channels[11]
    ivm04_dev=channels[12]
    ivm05_dev=channels[13]
    ivm07_dev=channels[14]
    ivm08_dev=channels[15]
    ivm12_dev=channels[16]
    ivm17_dev=channels[17]
    ivs01a_dev=channels[18]
    ivt01_dev=channels[19]
    ivt02_dev=channels[20]
    ivt03_dev=channels[21]
    ivt04_dev=channels[22]
    mhe_0_dev=channels[23]
    mhm_0_dev=channels[24]
    poe02_dev=channels[25]
    poe04_dev=channels[26]
    poe12_dev=channels[27]
    poe14_dev=channels[28]
    poe24_dev=channels[29]
    poe32_dev=channels[30]
    poe34_dev=channels[31]
    poe42_dev=channels[32]
    poe44_dev=channels[33]
    poe52_dev=channels[34]
    poe54_dev=channels[35]
    pom02_dev=channels[36]
    pot04_dev=channels[37]
    pot14_dev=channels[38]
    pot24_dev=channels[39]
    pot34_dev=channels[40]
    pot44_dev=channels[41]
    sfe01_dev=channels[42]
    sfe13_dev=channels[43]
    sfe14_dev=channels[44]
    sfe15_dev=channels[45]
    sfe22_dev=channels[46]
    sfe23_dev=channels[47]
    sfe25_dev=channels[48]
    sfe32_dev=channels[49]
    sfm07_dev=channels[50]
    sfm10_dev=channels[51]
    sft21_dev=channels[52]
    sft31_dev=channels[53]

rem --- Dimension string templates

    dim apm01a$:templates$[1],apm06a$:templates$[2],apm10a$:templates$[3],
:       aps01a$:templates$[4],arm10a$:templates$[5],glm01a$:templates$[6],
:       glt04a$:templates$[7],glt14a$:templates$[8],ivm01a$:templates$[9],
:       ivm02a$:templates$[10],ivm03a$:templates$[11],ivm04a$:templates$[12],
:       ivm05a$:templates$[13],ivm07a$:templates$[14],ivm08a$:templates$[15],
:       ivm12a$:templates$[16],ivm17a$:templates$[17],ivs01a$:templates$[18],
:       ivt01a$:templates$[19],ivt02a$:templates$[20],ivt03a$:templates$[21],
:       ivt04a$:templates$[22],mhe_0a$:templates$[23],mhm_0a$:templates$[24],
:       poe02a$:templates$[25],poe04a$:templates$[26],poe12a$:templates$[27],
:       poe14a$:templates$[28],poe24a$:templates$[29],poe32a$:templates$[30],
:       poe34a$:templates$[31],poe42a$:templates$[32],poe44a$:templates$[33],
:       poe52a$:templates$[34],poe54a$:templates$[35],pom02a$:templates$[36],
:       pot04a$:templates$[37],pot14a$:templates$[38],pot24a$:templates$[39],
:       pot34a$:templates$[40],pot44a$:templates$[41],sfe01a$:templates$[42],
:       sfe13a$:templates$[43],sfe14a$:templates$[44],sfe15a$:templates$[45],
:       sfe22a$:templates$[46],sfe23a$:templates$[47],sfe25a$:templates$[48],
:       sfe32a$:templates$[49],sfm07a$:templates$[50],sfm10a$:templates$[51],
:       sft21a$:templates$[52],sft31a$:templates$[53]

rem --- Retrieve parameter records

    aps01a_key$=firm_id$+"AP00"
    find record (aps01a_dev,key=aps01a_key$,err=std_missing_params) aps01a$
    ivs01a_key$=firm_id$+"IV00"
    find record (ivs01a_dev,key=ivs01a_key$,err=std_missing_params) ivs01a$

rem --- Open/Lock Files

    close (printer_dev,err=*next)
    files=36
    dim files$[files],options$[files],channels[files]
    files$[1]="poe-02"
    files$[2]="poe-12",files$[3]="poe-32"
    files$[4]="poe-34"
    files$[5]="poe-42",files$[6]="poe-44"
    files$[7]="poe-52"
    files$[8]="poe-54",files$[9]="pot-04"
    files$[10]="pot-14"
    files$[11]="pot-24",files$[12]="pot-34"
    files$[13]="pot-44"
    files$[14]="apm-06",files$[15]="apm-10"
    files$[16]="ivm-03"
    files$[17]="ivm-05",files$[18]="ivm-12"
    files$[19]="ivt-04"
    call pgmdir$+"adc_fileopen.aon",1,1,19,files$[all],options$[all],channels[all],batch,status
    if status then goto std_exit
    poe02_dev=channels[1]
    poe12_dev=channels[2],poe32_dev=channels[3]
    poe34_dev=channels[4]
    poe42_dev=channels[5],poe44_dev=channels[6]
    poe52_dev=channels[7]
    poe54_dev=channels[8],pot04_dev=channels[9]
    pot14_dev=channels[10]
    pot24_dev=channels[11],pot34_dev=channels[12]
    pot44_dev=channels[13]
    apm06_dev=channels[14],apm10_dev=channels[15]
    ivm03_dev=channels[16]
    ivm05_dev=channels[17],ivm12_dev=channels[18]
    ivt04_dev=channels[19]

rem --- escape gosub 10000; rem "OPEN ADDITIONAL FILES
rem --- Initializations

    precision i[1]
    more=1

rem --- escape gosub 10200; rem additional initializations

    dim message$[2]
    dim files[44],params[10],params$[10],item$[3],refs$[20],refs[20]
    dim glfiles[20],glparams$[20],glparams[20],w$[10]
    item$[0]=firm_id$
    params[0]=g[0],params$[0]=sysinfo.system_date$,params$[1]=sysinfo.user_id$
    params$[2]=i2$
    params$[3]=i3$,params$[4]=i4$,action$="RC"
    if replenishment$="Y" then call pgmdir$+"adc_perioddates.aon",sys01_dev,i[7],g[0],x1$,yearend$,status
    qty=0
    cost=0,po_extension=0

rem --- Additional File Opens
rem --- escape let files$[37]="pot-54

    if ls$<>"N"
        files$[20]="ivm-07"
        files$[21]="ivm-08",files$[22]="ivm-17"
        files$[23]="ivt-01"
        files$[24]="ivt-03"
    endif

    if gl$<>"N" then 
        files$[25]="glt-04"
        files$[26]="glt-14"
    endif

    if sf$<>"N" then 

        rem --- IF ISSUES=0 THEN IF SUBCONTRACTS=0 THEN GOTO 0675

        files$[27]="sfm-07"

        rem --- if subcontracts=0 then goto 0655

        files$[28]="sfe-32"
        files$[29]="sft-31"

        rem --- IF ISSUES=0 THEN GOTO 0675

        files$[30]="sfe-13"
        files$[31]="sfe-15",files$[32]="sfe-22"
        files$[33]="sfe-23"
        files$[34]="sfe-25",files$[35]="sft-21"
        if ls$="Y" then let files$[36]="sfe-14"

    endif

        call pgmdir$+"adc_fileopen.aon",1,20,files,files$[all],options$[all],channels[all],batch,status
        if status then goto std_exit
        ivm07_dev=channels[20]
        ivm08_dev=channels[21],ivm17_dev=channels[22]
        ivt01_dev=channels[23]
        ivt03_dev=channels[24],glt04_dev=channels[25]
        glt14_dev=channels[26]
        sfm07_dev=channels[27],sfe32_dev=channels[28]
        sft31_dev=channels[29]
        sfe13_dev=channels[30],sfe15_dev=channels[31]
        sfe22_dev=channels[32]
        sfe23_dev=channels[33],sfe25_dev=channels[34]
        sft21_dev=channels[35]
        sfe14_dev=channels[36]

rem --- escape let pot54_dev=channels[37]
rem --- Background

    call pgmdir$+"syc_cn.bbx","",0,7,'ce',status

rem --- Lot/serial number differences?

    if lotser<>0 then
        message$[0]="There Were "+str(lotser)+" Purchase Order Lines With Lot/Serial"
        message$[1]="Number Differences. These Differences Must Be Corrected"
        message$[2]="Before The Update Can Be Run (<Enter>=Continue)"
        call pgmdir$+"adc_stdmessage.aon",2,message$[all],2,-1,-1,v$,v3
        if v$<>"SPECIAL" then goto std_exit
    endif

    rem --- Any unreleased work orders?

    if wo<>0 then 
        message$[0]="There Were "+str(wo)+" Purchase Order Lines With Special Orders For"
        message$[1]="Unreleased Work Orders. These Work Orders Must Be Released"
        message$[2]="Before The Update Can Be Run (<Enter>=Continue)"
        call pgmdir$+"adc_stdmessage.aon",2,message$[all],2,-1,-1,v$,v3
        if v$<>"SPECIAL" then goto std_exit
    endif

rem --- Run update?

    msg_id$="AON_UPDT_QUERY"
    dim x$:stbl("+SYSINFO_TPL")
    dim msg_tokens$[1]
    x$=stbl("+SYSINFO")                                                            
    msg_tokens$[1]=x.task_desc$
    gosub disp_message
    if msg_opt$<>"Y" then goto std_exit
    files[0]=sys01_dev
    files[1]=ivm01_dev,files[2]=ivm02_dev
    files[3]=ivm03_dev
    files[4]=ivm04_dev,files[5]=ivm05_dev
    files[7]=ivm07_dev
    files[8]=ivm08_dev,files[12]=ivm12_dev
    files[17]=ivm17_dev
    files[41]=ivt01_dev,files[42]=ivt02_dev
    files[43]=ivt03_dev
    files[44]=ivt04_dev

rem --- Position file

    call pgmdir$+"adc_progress.aon","N","","","","",0,poe04_dev,1,meter_num,status
    exit_ctl=1
    read (poe04_dev,key=firm_id$,dom=*next)

next_receipt: rem --- Read next receipt header

    while more

        poe04a_key$=key(poe04_dev,end=done)
        if pos(firm_id$=k$)<>1 then goto done
        read record (poe04_dev) poe04a$
        call pgmdir$+"adc_progress.aon","S","","","","",0,0,1,meter_num,status
        if poe04a.firm_id$+poe04a.vendor_id$<>apm01a.firm_id$+apm01a.vendor_id$ then 
            apm01a.firm_id$=poe04a.firm_id$
            apm01a.vendor_id$=poe04a.vendor_id$
            apm01a.vendor_name$=nf$
            find record (apm01_dev,key=apm01a.firm_id$+apm01a.vendor_id$,dom=*next) apm01a$
        endif

        rem --- Initializations for current receipt

        x1$=poe04a.ord_date$
        x2$=poe04a.recpt_date$,received$=fndate$(fndate$(x2$)),when$=x2$,leadtime=0
        call pgmdir$+"adc_daydates.aon",x1$,x2$,leadtime
        leadtime=max(0,leadtime)
        deleted=1
        read (poe14_dev,key=poe04a.firm_id$+poe04a.vendor_id$,dom=*next)

        rem --- Read next receipt detail

        while more

            k$=key(poe14_dev,end=*break)
            if pos(poe04a.firm_id$+poe04a.vendor_id$=k$)<>1 then break
            read record (poe14_dev) poe14a$

        rem --- escape if w1$(24,6)<>fill(6) and w[7]<>0 and w1$(30,4)=fill(4) then let job$="Y
        rem --- escape let job085$=""; if w1$(24,6)<>fill(6) and w1$(30,4)=fill(4) then let job085$="Y
        rem --- escape if job$="Y" then read (cvf150,key=firm_id$+w1$(24,6),dom=1238); goto 1240
        rem --- escape let job$="

            onorder=poe14a.qty_ordered-(poe14a.qty_prev_rec+poe14a.qty_received)
            if poe14a.conv_factor=0 then let poe14a.conv_factor=1

        rem --- Determine line type

            if firm_id$+pot14a.po_line_code$<>pom02a.firm_id$+pom02a.po_line_code$
                pom02a.firm_id$=firm_id$
                pom02a.po_line_code$=pot14a.po_line_code$
                find record (pom02_dev,key=pom02a.firm_id$+pom02a.po_line_code$,dom=remove_receipt) pom02a$
            endif

        rem --- Branch based on line type

            if pos(pom02a.line_type$="MOV") then goto upd_rec_history
            if pom02a.line_type$<>"N" then 

        rem --- Retrieve inventory item

                ivm01a.firm_id$=firm_id$
                ivm01a.item_id$=poe14a.item_id$
                ivm02a.firm_id$=firm_id$
                ivm02a.warehouse_id$=poe14a.warehouse_id$
                ivm02a.item_id$=poe14a.item_id$,code$=""
                find record (ivm01_dev,key=ivm01a.firm_id$+ivm01a.item_id$,dom=remove_receipt) ivm01a$
                find record (ivm02_dev,key=ivm02a.firm_id$+ivm02a.warehouse_id$+ivm02a.item_id$,dom=remove_receipt) ivm02a$
                buyer$=ivm01a.buyer_code$
                stocking$=ivm01a.vendor_id$,code$=ivm02a.ap_dist_code$
                if ivm01a.stock_level$="W" then let buyer$=ivm02a.buyer_code$,stocking$=ivm02a.vendor_id$

            endif

        rem --- Calculate extension and branch based on line type

            precision 2
            po_extension=poe14a.unit_cost*poe14a.qty_received
            iv_extension=0
            if pom02a.line_type$="S" then let iv_extension=ivm02a.unit_cost*poe14a.qty_received*poe14a.conv_factor
            precision i[1]
            on pos(pom02a.line_type$="SN") goto remove_receipt,update_inventory,update_work_ord

            action=pos(pom02a.line_type$="SN")
            switch action

                case 1
                
                update_inventory: rem --- Update Inventory

                    while more

                        lineqty=poe14a.qty_received*poe14a.conv_factor
                        linecost=poe14a.unit_cost/poe14a.conv_factor,qty=lineqty,cost=linecost
                        if ls$="Y" then 
                            if ivm01a.lotser_item$+ivm01a.inventoried$<>"YY" then 
                                if qty<>0 then gosub receipt_quantity
                            endif
                        endif

                        break

                    rem --- Position lot/serial file

                        dim u0$(28),u1$(20),u[1]
                        read (poe24_dev,key=poe14a.firm_id$+poe14a.vendor_id$+poe14a.receiver_no$+poe14a.po_no$+poe14a.po_line_no$,dom=*next)

                    rem --- Update Lotted/Serialized Inventory

                        while more

                            k$=key(poe24_dev,end=*break)
                            if pos(poe14a.firm_id$+poe14a.vendor_id$+poe14a.receiver_no$+poe14a.po_no$+poe14a.po_line_no$=k$)<>1 then break
                            read record (poe24_dev) poe24a$
                            item$[3]=poe24a.lotser_no$
                            qty=pom24a.qty_received,cost=pom24a.unit_cost
                            if qty<>0 then gosub receipt_quantity

                        wend

                    rem --- Done with lot/serial number entries

                        item$[3]=""
                        qty=0
                        cost=linecost
                        gosub receipt_quantity
                        qty=lineqty
                        cost=linecost

                        break

                    wend

                rem --- Update Replenishment

                    if pom02a.dropship$<>"Y"

                        while more

                            if replenishment$<>"Y" then break
                            if poe04a.vendor_id$<>stocking$ then break
                            apm06a.firm_id$=poe04a.firm_id$
                            apm06a.vendor_id$=poe04a.vendor_id$
                            apm06a.buyer_code$=buyer$
                            x=4
                            find record (apm06_dev,key=apm06a.firm_id$+apm06a.vendor_id$+apm06a.buyer_code$,dom=*next) apm06a$
                            if received$<=yearend$
                                apm06a.ytd_rec_amt=apm06a.ytd_rec_amt+po_extension
                                apm06a.ytd_rec_lbs=apm06a.ytd_rec_lbs+(qty*ivm01a.weight),apm06a.ytd_rec_unts=apm06a.ytd_rec_unts+qty
                                if received$>cvs(apm06a.lst_rec_date,2) then let apm06a.lst_rec_date=received$      
                                write record (apm06_dev,key=poe24a.firm_id$+poe24a.vendor_id$+apm06a.buyer_code$) apm06a$
                            else
                                let x=7
                                apm06a.nyr_rec_amt=apm06a.nyr_rec_amt+po_extension
                                apm06a.nyr_rec_lbs=apm06a.nyr_rec_lbs+(qty*ivm01a.weight),apm06a.nyr_rec_unts=apm06a.nyr_rec_unts+qty
                                if received$>cvs(apm06a.lst_rec_date,2) then let apm06a.lst_rec_date=received$      
                                write record (apm06_dev,key=poe24a.firm_id$+poe24a.vendor_id$+apm06a.buyer_code$) apm06a$
                            fi

                        wend
                    
                    endif

                case 2
                
                    if pom02a.dropship$<>"Y"

                        while more

                        update_work_ord: rem --- Update Work Orders

                            if sf$<>"Y" then break
                            if cvs(poe14a.wo_no$,2)="" then break
                            if poe04a.rec_complete$<>"Y" and poe14a.qty_received=0 then break
                            if pom02a.line_type$="S" then if ivm02a.special_ord$<>"Y" then break
                            sfe01a.firm_id$=firm_id$
                            sfe01a.wo_location$="  "
                            sfe01a.wo_no$=pot14a.wo_no$
                            find record (sfe01_dev,key=sfe01a.firm_id$+sfe01a.wo_location$+sfe01a.wo_no$,dom=*break) sfe01a$
                            if cvs(sfe01a.lstact_date$,2)="" then let sfe01a.lstact_date$=received$
                            if received$>sfe01a.lstact_date$ then let sfe01a.lstact_date$=received$
                            write record (sfe01_dev,key=sfe01a.firm_id$+sfe01a.wo_location$+sfe01a.wo_no$) sfe01a$

                        rem --- Update link to WO subcontract line/Generate transaction detail

                            oldwo$=poe14a.wo_no$+pote4a.sequence_no$
                            newwo$=oldwo$
                            call pgmdir$+"poc_wa.bbx",sfe22_dev,sfe32_dev,firm_id$,poe14a.po_no$+poe14a.po_line_no$,"C",y1$,oldwo$,newwo$,i[1],status
                            if pom02a.line_type$="S"
                                sft31a.firm_id$=sfe01a.firm_id$
                                sft31a.wo_location$=sfe01a.wo_location$
                                sft31a.wo_no$=sfe01a.wo_no$
                                sft31a.trans_date$=received$
                                sft31a.record_id_s$="S"
                                channel=sft31_dev
                                gosub seq_number
                                if status then break
                                sft31a.subcont_seq$=poe14a.seq_no$
                                sft31a.vendor_id$=poe14a.vendor_id$
                                sft31a.po_no$=poe14a.po_no$
                                sft31a.po_line_no$=poe14a.po_line_no$
                                sft31a.reserved_str$=poe14a.order_memo$
                                sft31a_units=pot14a.qty_received*pot14a.conv_factor
                                sft31a_unit_cost=pot14a.unit_cost/pot14a.conv_factor,sft31a_ext_cost=po_extension
                                write record (sft31_dev,key=sft31a.firm_id$+sft31a.wo_location$+sft31a.wo_no$+sft31a.trans_date$+sft31a.record_id_s$+sft31a.trans_seq$) sft31a$
                                write record (sfm07_dev,key=sft31a.firm_id$+sft31a.wo_location$+sft31a.wo_no$+sft31a.trans_date$+sft31a.record_id_s$+sft31a.trans_seq$) sfm07a$
                            endif

                            break

                        wend

                    endif

                    rem --- Generate GL Recap Postings

                    if gl$<>"N" then 
                        glfiles[1]=arm10_dev
                        glfiles[2]=sfe01_dev,glfiles[3]=sfm10_dev
                        glfiles[4]=glm01_dev
                        glfiles[5]=glt04_dev,glfiles[6]=glt14_dev
                        w$[0]=poe14a.firm_id$+poe14a.vendor_id$+poe14a.receiver_no$+poe14a.po_no$+poe14a.po_line_no$
                        w$[1]=w1$,w$[2]=w2$,w$[3]=pot14a.warehouse_id$+pot14a.item_id$,w$[4]=pot14a.order_memo$,glparams$[0]=gl$
                        glparams$[1]=poe04a.recpt_date$
                        glparams$[2]=apm01a.vendor_id$(3,vendlen),glparams$[3]=m0$
                        glparams$[4]=g4$
                        glparams$[5]=fnitem$(ivm01a.item_desc$,i[3],i[4],i[5])
                        glparams$[6]=y1$
                        glparams$[7]=ivm01a.gl_inv_acct$+ivm01a.gl_cogs_acct$+ivm01a.gl_pur_acct$+ivm01a.gl_ppv_acct$+ivm01a.gl_inv_adj$+ivm01a.gl_cogs_adj$+ivm01a.reserved_str$,glparams$[8]=distcode$
                        glparams$[9]=code$
                        glparams$[10]=firm_id$,glparams$[11]=sf$
                        glparams[0]=po_extension
                        glparams[1]=g[4],glparams[2]=i[0]
                        glparams$[12]=i3$(8,1)
                        glparams[3]=iv_extension
                        call pgmdir$+"poc_ga.bbx",glfiles[all],w$[all],w[all],glparams$[all],glparams[all],status
                        if status then goto std_exit
                    endif

                    upd_rec_history: rem --- Update Receipt History & X-refs

                    while more

                        if pom02a.line_type$="M" and p3$(72,1)<>"Y" break; rem "Don't retain message lines in history
                        if pom02a.line_type$="V" and p3$(73,1)<>"Y" break; rem "Don't retain vendor part lines in history
                        pot14a.firm_id$=pot14a.firm_id$
                        pot14a.vendor_id$=pot14a.vendor_id$
                        pot14a.po_no$=pot14a.po_no$
                        pot14a.receiver_no$=pot14a.receiver_no$
                        pot14a.po_line_no$=pot14a.po_line_no$
                        write record (pot14_dev,key=pot14a.firm_id$+pot14a.vendor_id$+pot14a.po_no$+pot14a.receiver_no$+pot14a.po_line_no$) pot14a$
                        pot44a.firm_id$=pot14a.firm_id$
                        pot44a.vendor_id$=pot14a.vendor_id$
                        pot44a.recpt_date$=poe04a.recpt_date$
                        pot44a.po_no$=pot14a.po_no$
                        pot44a.receiver_no$=pot14a.receiver_no$
                        pot44a.po_line_no$=pot14a.po_line_no$
                        write record (pot44_dev,key=pot44a.firm_id$+pot44a.vendor_id$+pot44a.recpt_date$+pot44a.po_no$+pot44a.receiver_no$+pot44a.po_line_no$) pot44a$

                    rem --- Only write S-type lines to pot-24 and pot-34

                        if y1$(21,1)="S"
                            pot24a.firm_id$=pot14a.firm_id$
                            pot24a.item_id$=pot14a.item_id$
                            pot24a.warehouse_id$=pot14a.warehouse_id$
                            pot24a.vendor_id$=pot14a.vendor_id$
                            pot24a.recpt_date$=poe04a.recpt_date$
                            pot24a.po_no$=pot14a.po_no$
                            pot24a.receiver_no$=pot14a.receiver_no$
                            pot24a.po_line_no$=pot14a.po_line_no$
                            write record (pot24_dev,key=pot44a.firm_id$+pot44a.item_id$+pot44a.warehouse_id$+pot44a.vendor_id$+pot44a.recpt_date$+pot44a.po_no$+pot44a.receiver_no$+pot34a.po_line_no$) pot24a$
                            pot34a.firm_id$=pot14a.firm_id$
                            pot34a.item_id$=pot14a.item_id$
                            pot34a.warehouse_id$=pot14a.warehouse_id$
                            pot34a.recpt_date$=poe04a.recpt_date$
                            pot34a.vendor_id$=pot14a.vendor_id$
                            pot34a.po_no$=pot14a.po_no$
                            pot34a.receiver_no$=pot14a.receiver_no$
                            pot34a.po_line_no$=pot14a.po_line_no$
                            write record (pot34_dev,key=pot44a.firm_id$+pot44a.item_id$+pot44a.warehouse_id$+pot44a.recpt_date$+pot44a.vendor_id$+pot44a.po_no$+pot44a.receiver_no$+pot34a.po_line_no$) pot34a$
                        endif

                        break

                    wend
                    
                case default
                    
                    break

            swend

            remove_receipt: rem --- Remove receipt detail

            rem --- escape if job$="Y" then gosub 10300; rem "ACS JOB UPDATES
            rem --- escape if job085$="Y" then gosub 12000; rem "ACS PO085 UPDATE
            remove (poe14_dev,key=poe14a.firm_id$+poe14a.vendor_id$+poe14a.receiver_no$+poe14a.po_no$+poe14a.po_line_no$,dom=*next)

            x4$=firm_id$+poe14a.item_id$+poe14a.po_no$+poe14a.po_line_no$+poe14a.vendor_id$+poe14a.receiver_no$
            remove (poe44_dev,key=x4$,dom=*next)

            rem --- Remove Receipt Lot/Serial Detail

                read (poe24_dev,key=poe14a.firm_id$+poe14a.vendor_id$+poe14a.receiver_no$+poe14a.po_no$+poe14a.po_line_no$,dom=*next)

            while more

                k$=key(poe24_dev,end=*break)
                if pos(poe14a.firm_id$+poe14a.vendor_id$+poe14a.receiver_no$+poe14a.po_no$+poe14a.po_line_no$=k$)<>1 then break
                remove (poe24_dev,key=k$)

            wend

            rem --- Update PO detail

            while more

                poe12a.firm_id$=poe14a.firm_id$
                poe12a.vendor_id$=poe14a.vendor_id$
                poe12a.po_no$=poe14a.po_no$
                poe12a.po_line_no$=poe14a.po_line_no$
                if pos(pom02a.line_type$="SNO") then if onorder<=0 then break
                if pot04a.rec_complete$="Y" then break
                if pos(pom02a.line_type$="MV") then if deleted then break
                find record (poe12_dev,key=poe12a.firm_id$+poe12a.vendor_id$+poe12a.po_no$+poe12a.po_line_no$,dom=*continue) poe12a$
                poe12a.qty_received=poe12a.qty_received+pot14a.qty_received
                deleted=0
                write record (poe12_dev,key=poe12a.firm_id$+poe12a.vendor_id$+poe12a.po_no$+poe12a.po_line_no$) poe12a$
                break

            wend

            continue; rem --- Loop back for next detail

            rem --- Remove PO detail

                if pom02a.line_type$="S" then
                    find record (poe12_dev,key=poe12a.firm_id$+poe12a.vendor_id$+poe12a.po_no$+poe12a.po_line_no$,dom=label1) poe12a$
                    qty=-(poe12a.qty_ordered*poe12a.conv_factor-(pot14a.qty_prev_rec+pot14a.qty_received)*pot14a.conv_factor)
                    action$="OO"
                    if qty<>0 then gosub std_inventory
                endif

                remove (poe12_dev,key=poe12a.firm_id$+poe12a.vendor_id$+poe12a.po_no$+poe12a.po_line_no$,dom=*next)

            label1:

                x4$=pot14a.firm_id$+pot14a.item_id$+poe14a.po_no$+poe14a.po_line_no$+poe14a.vendor_id$
                deleted=1
                remove (poe42_dev,key=x4$,dom=*next)

            rem --- Loop back for next detail

        wend

    rem --- Done with detail lines - Remove receipt header

        pot04a.firm_id$=poe04a.firm_id$
        pot04a.vendor_id$=poe04a.Vendor_id$
        pot04a.receiver_no$=poe04a.receiver_no$
        pot04a.po_no$=poe04a.po_no$
        write record (pot04_dev,key=pot04a.firm_id$+pot04a.vendor_id$+pot04a.receiver_no$+pot04a.po_no$) pot04a$
        remove (poe04_dev,key=pot04a.firm_id$+pot04a.vendor_id$+pot04a.receiver_no$+pot04a.po_no$,dom=*next)

        x3$=firm_id$+pot04a.po_no$+pot04a.vendor_id$+pot04a.receiver_no$
        x5$=firm_id$+pot04a.receiver_no$+pot04a.vendor_id$+pot04a.po_no$
        remove (poe34_dev,key=x3$,dom=*next)
        remove (poe54_dev,key=x5$,dom=*next)

    rem --- escape let pot54$=firm_id$+a0$(16,7)+a0$(3,6)+a1$(29,6)+a0$(9,7)

    rem --- escape write (pot54_dev,key=pot54$)pot54$
    rem --- Done with details - Update PO Header

        poe02a.firm_id$=pot04a.firm_id$
        poe02a.vendor_id$=pot04a.vendor_id$
        poe02a.po_no$=pot04a.po_no$
        gosub verify_po
        if lines then let pot04a.rec_complete$="N"
        if !(pot04a.rec_complete$="Y" or lines=0) then 
            find record (poe02_dev,key=poe02a.firm_id$+poe02a.vendor_id$+poe02a.po_no$,dom=next_receipt) poe02a$
            poe02a.recpt_date$=pot04a.recpt_date$
            write record (poe02_dev,key=poe02a.firm_id$+poe02a.vendor_id$+poe02a.po_no$) poe02a$
            continue
        endif

    rem --- Received complete - Delete PO

    remove (poe02_dev,key=poe02a.firm_id$+poe02a.vendor_id$+poe02a.po_no$,dom=*next)

        x3$=firm_id$+pot04a.po_no$+pot04a.vendor_id$
        x5$=firm_id$+pot04a.req_no$+pot04a.vendor_id$+pot04a.po_no$
        remove (poe32_dev,key=x3$,dom=*next)
        remove (poe52_dev,key=x5$,dom=*next)

    rem --- Loop back for next header

    wend

done: rem --- All done

rem --- escape gosub 11000; rem "ACS60 CLEAR PO080

    goto std_exit

seq_number: rem --- Find next available sequence number for SFT files

    x=len(sft31a.firm_id$+sft31a.wo_location$+sft31a.wo_no$+sft31a.trans_date$+sft31a.record_id_s$+sft31a.trans_seq$)-2
    sft31a.trans_seq$="001",status=0
    read (channel,key=sft31a.firm_id$+sft31a.wo_location$+sft31a.wo_no$+sft31a.trans_date$+sft31a.trans_seq$+$ff$,dom=*next)
    k$=keyp(channel,end=label2)
    if pos(sft31a.firm_id$+sft31a.wo_location$+sft31a.wo_no$+sft31a.trans_date$+sft31a.trans_seq$=k$)<>1 then return

    if k$(16,3)<>"999" then 
        sft31a.trans_seq$=str(num(k$(16,3))+1:"000")
        return
    endif

    status=2

label2:
    return

receipt_quantity: rem --- Update inventory with receipt quantity

    action$="RC"
    gosub std_inventory

rem --- escape if job$<>"Y" then goto 6190
rem --- escape let action$="CO
rem --- escape gosub 6200
rem --- escape let qty=qty*-1
rem --- escape let action$="WI
rem --- escape gosub 6200

    return

std_inventory: rem --- Call standard inventory update program

    item$[0]=firm_id$
    item$[1]=pot14a.warehouse_id$,item$[2]=pot14a.item_id$
    ref3$=poe14a.po_line_no$
    refs$[0]=pot04a.recpt_date$,refs$[1]=poe14a.vendor_id$,refs$[2]=poe14a.po_no$
    refs$[3]=poe14a.receiver_no$
    refs$[4]="",refs$[5]=ref3$,refs$[6]=pot14a.po_line_code$
    refs$[8]=ivacct$
    refs$[9]="",refs$[10]="",refs$[11]=""
    let refs$[12]=pom02a.line_type$,refs[0]=qty,refs[1]=cost,refs[2]=d[9]
    let refs[3]=leadtime,refs[4]=cost,refs[5]=0

rem --- escape if job$="Y" then let refs$[9]="J"+w1$(24,6)

    call pgmdir$+"ivc_ua.bbx",action$,files[all],params[all],params$[all],item$[all],refs$[all],refs[all],status
    return

rem --- Verify PO Has No Detail In poe-12

verify_po:

    let lines=0
    read (poe12_dev,key=poe02a.firm_id$+poe02a.vendor_id$+poe02a.po_no$,dom=*next)
    let poe12k$=key(poe12_dev,end=label3)
    if pos(poe02a.firm_id$+poe02a.vendor_id$+poe02a.po_no$=poe12k$)<>1 then return
    let lines=1

label3:

    return

rem --- Standard G/L Posting Routine

glpost:

    if gl$="Y"
        call pgmdir$+"glc_glpost.aon",glm01_dev,glt04_dev,glt14_dev,account$,when$,ref1$,ref2$,ref3$,memo$,amount,units,status
    endif
    return

rem --- GL
rem --- escape let account$=v0$,when$=x2$,amount=v0,units=v1
rem --- escape let ref1$=w0$(3,6),ref2$=w0$(16,7)
rem --- escape let ref3$="JOB "+w1$(24,6),memo$=vname$
rem --- escape gosub glpost
rem    return

rem #include std_functions.src
rem --- Standard AddonSoftware functions (01Mar2006)

rem --- Format inventory item description

    def fnitem$(q$,q1,q2,q3)=cvs(q$(1,q1)+" "+q$(q1+1,q2)+" "+q$(q1+q2+1,q3),32)

rem --- Date/time handling functions

    def fndate$(q$)
        q1$=""
        q1$=date(jul(num(q$(1,4)),num(q$(5,2)),num(q$(7,2)),err=*next),err=*next)
        if q1$="" q1$=q$
        return q1$
    fnend
    
rem #endinclude std_functions.src

rem #include disp_message.src

disp_message:rem --- Display Message Dialog

    call stbl("+DIR_SYP")+"bac_message.bbj",msg_id$,msg_tokens$[all],msg_opt$,table_chans$[all]
return
	
rem #endinclude disp_message.src

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    call stbl("+DIR_SYP")+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:                                str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src
rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:                                   str(err:"000"),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    call pgmdir$+"adc_progress.aon","D","","","","",0,0,0,meter_num,status
    run stbl("+DIR_SYP")+"bas_process_end.bbj",err=*next
    release
rem #endinclude std_end.src

    end
