rem --- Purchase Order Invoice Entry Register Update
rem --- Program pou_ea v8.0.0 26Dec2007 (pou_ea)
rem --- Created by c:\codeport_bbj\adx_codeport.bbj v1.1.5 (12/26/2007 12:15:17)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright (c) 1981-2007 AddonSoftware
rem --- All Rights Reserved

    seterr std_error
    setesc std_error

rem --- Retrieve the program path

    pgmdir$=stbl("+dir_pgm",err=*next)

rem --- Retrieve sysinfo data

    sysinfo_template$=stbl("+sysinfo_tpl",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+sysinfo",err=*next)
    milestone=num(stbl("+milestone",err=*next),err=*next)
    firm_id$=sysinfo.firm_id$

rem --- Open/Lock files

    files=31,begfile=1,endfile=files
    dim files$[files],options$[files],ids$[files],templates$[files],channels[files]
    files$[1]="apm-01",ids$[1]="APM_VENDMAST"
    files$[2]="apm-02",ids$[2]="APM_VENDHIST"
    files$[3]="apc_distribution",ids$[3]="APC_DISTRIBUTION"
    files$[4]="aps-01a",ids$[4]=""
    files$[5]="apt-01",ids$[5]="APT_INVOICEHDR"
    files$[6]="apt-02",ids$[6]="APT_INVOICEDIST"
    files$[7]="apt-03",ids$[7]=""
    files$[8]="apt-03b",ids$[8]=""
    files$[9]="apt-03c",ids$[9]=""
    files$[10]="apt-11",ids$[10]="APT_INVOICEDET"
    files$[11]="arc_distcode",ids$[11]="ARC_DISTCODE"
    files$[12]="glm-01",ids$[12]="GLM_ACCT"
    files$[13]="glt-04",ids$[13]="GLE_DAILYDETAIL"
    files$[14]="glt-14",ids$[14]=""
    files$[15]="ivm-01",ids$[15]="IVM_ITEMMAST"
    files$[16]="ivm-02",ids$[16]="IVM_ITEMWHSE"
    files$[17]="ivs_params",ids$[17]="IVS_PARAMS"
    files$[18]="poe-05",ids$[18]="POE_INVHDR"
    files$[19]="poe-12",ids$[19]="POE_PODET"
    files$[20]="poe-15",ids$[20]="POE_INVSEL"
    files$[21]="poe-25",ids$[21]="POE_INVDET"
    files$[22]="poe-35",ids$[22]="POE_INVGL"
    files$[23]="pom-02",ids$[23]="POC_LINECODE"
    files$[24]="pot-05",ids$[24]="POT_INVHDR"
    files$[25]="pot-14",ids$[25]="POT_RECDET"
    files$[26]="pot-15",ids$[26]="POT_INVSEL"
    files$[27]="pot-25",ids$[27]="POT_INVDET"
    files$[28]="pot-35",ids$[28]="POT_INVBYPO"
    files$[29]="pow-17",ids$[29]="POW_INVLAND"
    files$[30]="sfe-01",ids$[30]="SFE_WOMASTR"
    files$[31]="sfm-10",ids$[31]="SFC_WOTYPECD"
    call pgmdir$+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],
:                                   ids$[all],templates$[all],channels[all],batch,status
    if status goto std_exit
    apm01_dev=channels[1]
    apm02_dev=channels[2]
    apm10_dev=channels[3]
    aps01a_dev=channels[4]
    apt01_dev=channels[5]
    apt02_dev=channels[6]
    apt03_dev=channels[7]
    apt03b_dev=channels[8]
    apt03c_dev=channels[9]
    apt11_dev=channels[10]
    arm10_dev=channels[11]
    glm01_dev=channels[12]
    glt04_dev=channels[13]
    glt14_dev=channels[14]
    ivm01_dev=channels[15]
    ivm02_dev=channels[16]
    ivs01a_dev=channels[17]
    poe05_dev=channels[18]
    poe12_dev=channels[19]
    poe15_dev=channels[20]
    poe25_dev=channels[21]
    poe35_dev=channels[22]
    pom02_dev=channels[23]
    pot05_dev=channels[24]
    pot14_dev=channels[25]
    pot15_dev=channels[26]
    pot25_dev=channels[27]
    pot35_dev=channels[28]
    pow17_dev=channels[29]
    sfe01_dev=channels[30]
    sfm10_dev=channels[31]

rem --- Dimension string templates

    dim apm01a$:templates$[1],apm02a$:templates$[2],apm10a$:templates$[3],
:       aps01a$:templates$[4],apt01a$:templates$[5],apt02a$:templates$[6],
:       apt03a$:templates$[7],apt03b$:templates$[8],apt03c$:templates$[9],
:       apt11a$:templates$[10],arm10a$:templates$[11],glm01a$:templates$[12],
:       glt04a$:templates$[13],glt14a$:templates$[14],ivm01a$:templates$[15],
:       ivm02a$:templates$[16],ivs01a$:templates$[17],poe05a$:templates$[18],
:       poe12a$:templates$[19],poe15a$:templates$[20],poe25a$:templates$[21],
:       poe35a$:templates$[22],pom02a$:templates$[23],pot05a$:templates$[24],
:       pot14a$:templates$[25],pot15a$:templates$[26],pot25a$:templates$[27],
:       pot35a$:templates$[28],pow17a$:templates$[29],sfe01a$:templates$[30],
:       sfm10a$:templates$[31]

rem --- Retrieve parameter records

    aps01a_key$=firm_id$+"AP00"
    find record (aps01a_dev,key=aps01a_key$,err=std_missing_params) aps01a$
    ivs01a_key$=firm_id$+"IV00"
    find record (ivs01a_dev,key=ivs01a_key$,err=std_missing_params) ivs01a$

rem --- Open/Lock Files

    if gl$<>"Y" then close (printer_dev,err=*next)

rem --- Initializations

    precision i[1]
    dim a0$(20),a1$(64),a[8],b0$(23),b1$(32),b[4],c0$(23),c1$(64),c[4]
    dim d0$(23),d1$(32),d[4],ha$(23),hb$(26),hc$(26),x0$(32),x1$(4*g[4])
    dim y0$(4),y1$(32),y2$(2*g[4]),xa$(24),xb$(31),xc$(21),hd$(40)
    dim files[44],params[10],params$[10],item$[6],refs$[20],refs[20]
    item$[0]=firm_id$
    params[0]=g[0],params$[0]=sysinfo.system_date$,params$[1]=sysinfo.user_id$
    params$[2]=i2$
    params$[3]=i3$,params$[4]=i4$
    files[0]=sys01_dev
    files[1]=ivm01_dev,files[2]=ivm02_dev
    more=1
    count=1

rem --- escape dim job$(28)
rem --- Background

    call pgmdir$+"syc_cn.bbx","",0,7,'ce',status

rem --- Run Update?

    msg_id$="AON_UPDT_QUERY"
    dim x$:stbl("+SYSINFO_TPL")
    dim msg_tokens$[1]
    x$=stbl("+SYSINFO")                                                            
    msg_tokens$[1]=x.task_desc$
    gosub disp_message
    if msg_opt$<>"Y" then goto std_exit

rem --- Disallow 'M'enu option in Error Routine

    exit_ctrl=1

rem --- Position file

    x=m0+11
    if aptype then let x=x+3
    call pgmdir$+"adc_progress.aon","N","","","","",0,poe05_dev,1,meter_num,status
    read (poe05_dev,key=firm_id$,dom=*next)

rem --- Read next header

    while more

        k$=key(poe05_dev,end=*break)
        if pos(firm_id$=k$)<>1 then break
        read record (poe05_dev) poe05a$
        x$=fnmask$(poe05a.vendor_id$,m0$)+" "+poe05a.ap_inv_no$
        if aptype then let x$=poe05a.ap_type$+" "+x$
        call pgmdir$+"adc_progress.aon","S","","","","",0,0,1,meter_num,status

    rem --- Additional reads

        dim h0$(8),h1$(30),x0$(32),x1$(4*g[4])
        apm10b.firm_id$=firm_id$
        apm10b.record_id_b$="B"
        apm10b.dist_code$=poe05a.dist_code$
        apm01a.firm_id$=firm_id$
        apm01a.vendor_id$=poe05a.vendor_id$
        find record (apm01_dev,key=apm01a.firm_id$+apm01a.vendor_id$,dom=*next) apm01a$
        find record (apm10_dev,key=apm10b.firm_id$+apm10b.record_id_b$+apm10b.dist_code$,dom=*next) apm10b$
        apacct$=apm10b.gl_ap_acct$
        retacct$=apm10b.gl_ret_acct$,apcode$=poe05a.dist_code$
        gldate$=poe05a.acct_date$
        vendor$=apm01a.vendor_id$,name$=apm01a.vendor_name$

    rem --- Create apt-01 record

        apt01a.firm_id$=poe05a.firm_id$
        apt01a.ap_type$=poe05a.ap_type$
        apt01a.vendor_id$=poe05a.vendor_id$
        apt01a.ap_inv_no$=poe05a.ap_inv_no$
        apt01a.sequence_00$="00"
        apt01a.dist_code$=poe05a.dist_code$,apt01a.payment_grp$=poe05a.payment_grp$
        apt01a.terms_code$=poe05a.hold_flag$+poe05a.terms_code$
        apt01a.invoice_date$=fndate$(fndate$(poe05a.inv_date$))
        apt01a.accting_date$=fndate$(fndate$(poe05a.acct_date$))
        apt01a.inv_due_date$=fndate$(fndate$(poe05a.due_date$))
        apt01a.disc_date$=fndate$(fndate$(poe05a.po_disc_date$))
        apt01a.reference$=poe05a.reference$
        apt01a.ap_inv_memo$=poe05a.ap_inv_memo$
        apt01a.hold_flag$=poe05a.hold_flag$,apt01t.invoice_amt=poe05a.invoice_amt,apt01t.discount_amt=poe05a.discount_amt,apt01t.retention=poe05a.retention
        write record (apt01_dev,key=apt01a.firm_id$+apt01a.ap_type$+apt01a.vendor_id$+apt01a.ap_inv_no$+apt01a.sequence_00$,dom=current_invoice) apt01a$

    rem --- Generate apt-03 xrefs

        apt03a.firm_id$=firm_id$
        apt03a.record_id_a$="A"
        apt03a.ap_type$=poe05a.ap_type$
        apt03a.vendor_id$=poe05a.vendor_id$
        apt03a.invoice_date$=fndate$(fndate$(poe05a.inv_date$))
        apt03a.ap_inv_no$=poe05a.ap_inv_no$
        apt03b.firm_id$=firm_id$
        apt03b.record_id_b$="B"
        apt03b.ap_type$=poe05a.ap_type$
        apt03b.vendor_id$=poe05a.vendor_id$
        apt03b.reference$=poe05a.reference$
        apt03b.ap_inv_no$=poe05a.ap_inv_no$
        apt03c.firm_id$=firm_id$
        apt03c.record_id_c$="C"
        apt03c.ap_inv_no$=poe05a.ap_inv_no$
        apt03c.ap_type$=poe05a.ap_type$
        apt03c.vendor_id$=poe05a.vendor_id$
        apt03c.ap_inv_no$=poe05a.ap_inv_no$
        write record (apt03_dev,key=apt03a.firm_id$+apt03a.record_id_a$+apt03a.ap_type$+apt03a.vendor_id$+apt03a.invoice_date$+apt03a.ap_inv_no$) apt03a$
        write record (apt03_dev,key=apt03b.firm_id$+apt03b.record_id_b$+apt03b.ap_type$+apt03b.vendor_id$+apt03b.reference$+apt03b.ap_inv_no$) apt03b$
        write record (apt03_dev,key=apt03c.firm_id$+apt03c.record_id_c$+apt03c.ap_inv_no$+apt03c.ap_type$+apt03c.vendor_id$+apt03c.ap_inv_no$) apt03c$
        count=0

        if count=1

            current_invoice: rem --- Adjustment to current invoice

                apt11a.firm_id$=apt01a.firm_id$
                apt11a.ap_type$=apt01a.ap_type$
                apt11a.vendor_id$=apt01a.vendor_id$
                apt11a.ap_inv_no$=apt01a.ap_inv_no$
                apt11a.sequence_num$=apt01a.sequence_00$
                apt11a.trans_type$="A"
                apt11a.trans_date$=apt01a.accting_date$
                apt11a.trans_ref$=h0$(41,7) 
                apt11a.trans_amt=apt01a.invoice_amt
                apt11a.trans_disc=apt01a.discount_amt
                apt11a.trans_ret=apt01a.retention
                channel=apt11_dev,x$=apt11a.firm_id$+apt11a.ap_type$+apt11a.vendor_id$+apt11a.ap_inv_no$,k=20
                gosub next_seq
                apt11a.sequence_num$=str(seq:"00")
                write record (apt11_dev,key=apt11a.firm_id$+apt11a.ap_type$+apt11a.vendor_id$+apt11a.ap_inv_no$+apt11a.sequence_num$) apt11a$

        endif

    rem --- Update apm-02 vendor totals

        apm02a.firm_id$=firm_id$
        apm02a.vendor_id$=poe05a.vendor_id$
        apm02a.ap_type$=poe05a.ap_type$
        x$=poe05a.acct_date$
        call pgmdir$+"adc_peryear.aon",firm_id$,sys01_dev,x$,period$,year$
        find record (apm02_dev,key=apm02a.firm_id$+apm02a.vendor_id$+apm02a.ap_type$,dom=*next) apm02a$
        apm02a.lst_inv_date$=fndate$(fndate$(poe05a.inv_date$))
        apm02a.open_invs=apm02a.open_invs+poe05a.invoice_amt
        apm02a.open_ret=apm02a.open_ret+poe05a.retention
        if year$<=p4$(3,2) then let apm02a.ytd_purch=apm02a.ytd_purch+poe05a.invoice_amt
        if year$>p4$(3,2) then let apm02a.nyr_purch=apm02a.nyr_purch+poe05a.invoice_amt
        write record (apm02_dev,key=apm02a.firm_id$+apm02a.vendor_id$+apm02a.ap_type$) apm02a$

    rem --- Generate pot-05 sequence number and position poe-15 PO Detail

        pot05a.firm_id$=poe05a.firm_id$
        pot05a.ap_type$=poe05a.ap_type$
        pot05a.vendor_id$=poe05a.vendor_id$
        pot05a.ap_inv_no$=poe05a.ap_inv_no$
        channel=pot05_dev
        x$=pot05a.firm_id$+pot05a.ap_type$+pot05a.vendor_id$+pot05a.ap_inv_no$+pot05a.sequence_no$
        k=20
        gosub next_seq
        pot05a.sequence_no$=str(seq:"000")
        read (poe15_dev,key=poe05a.firm_id$+poe05a.ap_type$+poe05a.vendor_id$+poe05a.ap_inv_no$,dom=*next)

    rem --- Read next PO record

        while more

            k$=key(poe15_dev,end=*break)
            if pos(poe05a.firm_id$+poe05a.ap_type$+poe05a.vendor_id$+poe05a.ap_inv_no$=k$)<>1 then break
            read record (poe15_dev) poe15a$

        rem --- Position line item file

            read (poe25_dev,key=poe05a.firm_id$+poe05a.ap_type$+poe05a.vendor_id$+poe05a.ap_inv_no$,dom=*next)

        rem --- Read next line item

            while more

                k$=key(poe25_dev,end=*break)
                if pos(poe05a.firm_id$+poe05a.ap_type$+poe05a.vendor_id$+poe05a.ap_inv_no$=k$)<>1 then break
                read record (poe25_dev) poe25a$
                if poe25a.po_no$<>poe05a.po_no$ then continue
                if cvs(poe05a.receiver_no$,2)<>"" then if poe25a.receiver_no$<>poe05a.receiver_no$ then continue

            rem --- Update history detail record

                pot14a.firm_id$=firm_id$
                pot14a.vendor_id$=poe05a.vendor_id$
                pot14a.po_no$=poe25a.po_no$
                pot14a.receiver_no$=poe25a.receiver_no$
                pot14a.po_line_no$=poe25a.po_line_no$
                found=0
                find record (pot14_dev,key=pot14a.firm_id$+pot14a.vendor_id$+pot14a.po_no$+pot14a.receiver_no$+pot14a.po_line_no$,dom=label1) pot14a$
                poe25a.qty_invoiced=poe25a.qty_invoiced+poe25a.qty_received
                found=1
                write record (pot14_dev,key=pot14a.firm_id$+pot14a.vendor_id$+pot14a.po_no$+pot14a.receiver_no$+pot14a.po_line_no$) pot14a$

            label1:

                pom02a.firm_id$=firm_id$
                pom02a.po_line_code$=poe25a.po_line_code$
                pom02a.code_desc$=""
                pom02a.line_type$=""
                pom02a.drop_ship$=""
                pom02a.lead_tim_flg$=""
                pom02a.land_cst_flg$=""
                pom02a.add_options$=""
                pom02a.reserved_str$=""
                pom02a.gl_exp_acct$=""
                find record (pom02_dev,key=pom02a.firm_id$+pom02a.po_line_code$,dom=*next) pom02a$
                apm01a.firm_id$=pom02a.firm_id$
                apm01a.vendor_id$=pom02a.po_line_code$
                h0$(1)=y0$
                h1$(1)=y1$,h2$(1)=y2$(1)

            rem --- Update PO line item

                while more

                    poe12a.firm_id$=firm_id$
                    poe12a.vendor_id$=poe05a.vendor_id$  
                    poe12a.po_no$=poe25a.po_no$
                    poe12a.po_line_no$=poe25a.po_line_no$
                    find record (poe12_dev,key=poe12a.firm_id$+poe12a.vendor_id$+poe12a.po_no$+poe12a.po_line_no$,dom=*break) poe12a$
                    pom02a.firm_id$=firm_id$
                    pom02a.po_line_code$=poe12a.firm_id$
                    find record (pom02_dev,key=pom02a.firm_id$+pom02a.po_line_code$,dom=*next) pom02a$
                    if found then if pom02a.line_type$<>h1$(21,1) then break
                    if found then if poe25a.warehouse_id$+poe25a.item_id$<>poe12a.warehouse_id$+poe12a.item_id$ then break
                    poe12a.qty.invoiced=poe12a.qty.invoiced+poe25a.qty_received
                    write record (poe12_dev,key=poe12a.firm_id$+poe12a.vendor_id$+poe12a.po_no$+poe12a.po_line_no$) poe12a$

                    break

                wend

            rem --- Calculate extension and retrieve line code

                y0$(1)=h0$
                y1$(1)=h1$,y2$(1)=h2$
                precision 2
                extension=poe25a.unit_cost*poe25a.qty_received
                poextension=poe25a.receipt_cost*poe25a.qty_received
                precision i[1]

            rem --- Read inventory item and warehouse

                if pom02a.line_type$="S" then 
                    ivm01a.firm_id$=firm_id$
                    ivm01a.item_id$=poe25a.item_id$
                    ivm02a.firm_id$=firm_id$
                    ivm02a.warehouse_id$=poe25a.warehouse_id$
                    ivm02a.item_id$=poe25a.item_id$
                    find record (ivm01_dev,key=ivm01a.firm_id$+ivm01a.item_id$,dom=*next) ivm01a$
                    find record (ivm02_dev,key=ivm02a.firm_id$+ivm02a.warehouse_id$+ivm02a.item_id$,dom=*next) ivm02a$
                endif

            rem --- Generate GL Recap

                if gl$="N" then goto loop_back
                action$=""
                account$=""
                item$[0]=ivm01a.item_id$
                item$[1]=ivm01a.item_desc$
                item$[6]=ivm01a.gl_inv_acct$+ivm01a.gl_cogs_acct$+ivm01a.gl_pur_acct$+ivm01a.gl_ppv_acct$+ivm01a.gl_inv_adj$+ivm01a.gl_cogs_adj$+ivm01a.reserved_str$
                values[0]=extension
                values[1]=poextension,values[2]=poe25a.qty_received
                values[3]=ivm02a.qty_on_hand
                arcode$=ivm02a.dist_code$,w$[0]=poe25a.firm_id$+poe25a.ap_type$+poe25a.vendor_id$+poe25a.ap_inv_no$+poe25a.line_no$,w$[1]=poe25a.po_no$+poe25a.po_line_no$+poe25a.receiver_no$+poe25a.po_line_code$+poe25a.order_memo$+poe25a.reserved_str$
                y$[0]=pom02a.firm_id$+pom02a.po_line_code$
                y$[1]=pom02a.code_desc$+pom02a.line_type$+pom02a.drop_ship$+pom02a.lead_tim_flg$+pom02a.land_cst_flg$+pom02a.add_options$+pom02a.reserved_str$,y$[2]=pom02a.gl_exp_acct$
                gosub post_routine

            rem --- Get WIP account for Non-Stocks

                if pom02a.line_type$="N"

                    if sf$<>"N"
                        if cvs(poe25a.wo_no$,2)<>""

                            dim woe01$(75),wom10$(9*g[4])
                            find record (sfe01_dev,key=firm_id$+"  "+poe25a.wo_no$,dom=gen_apt02_recs) sfe01a$
                            find record (sfm10_dev,key=firm_id$+"A"+sfe01a.wo_type$,dom=gen_apt02_recs) sfm10a$
                            distaccnt$=wom10$(1,g[4]); rem "Distribution account = WIP account

                        endif

                    endif

                endif

            gen_apt02_recs: rem --- Generate apt-02 records

                gosub gen_rec

            loop_back: rem --- Loop back for next line item

                pot25a.firm_id$=pot05a.firm_id$
                pot25a.ap_type$=pot05a.ap_type$
                pot25a.vendor_id$=pot05a.vendor_id$
                pot25a.ap_inv_no$=pot05a.ap_inv_no$
                pot25a.sequence_no$=pot05a.sequence_no$
                x$=pot05a.firm_id$+pot05a.ap_type$+pot05a.vendor_id$+pot05a.ap_inv_no$+pot05a.sequence_no$
                pot25a.line_no$=poe25a.line_no$
                write record (pot25_dev,key=pot25a.firm_id$+pot25a.ap_type$+pot25a.vendor_id$+pot25a.ap_inv_no$+pot25a.sequence_no$+pot25a.line_no$) pot25a$
                pot35a.firm_id$=firm_id$
                pot35a.vendor_id$=pot25a.vendor_id$
                pot35a.po_no$=poe25a.po_no$
                pot35a.receiver_no$=poe25a.receiver_no$
                pot35a.ap_type$=pot25a.ap_type$
                pot35a.ap_inv_no$=pot25a.ap_inv_no$
                pot35a.sequence_no$=pot25a.sequence_no$
                pot35a.line_no$=pot25a.line_no$
                write record (pot35_dev,key=pot35a.firm_id$+pot35a.vendor_id$+pot35a.po_no$+pot35a.receiver_no$+pot35a.ap_type$+pot35a.ap_inv_no$+pot35a.sequence_no$+pot35a.line_no$) pot35a$
                remove (poe25_dev,key=poe25a.firm_id$+poe25a.ap_type$+poe25a.vendor_id$+poe25a.ap_inv_no$+poe25a.line_no$,dom=*continue)

            wend

        rem --- Loop back for next PO record

            pot15a.firm_id$=pot05a.firm_id$
            pot15a.ap_type$=pot05a.ap_type$
            pot15a.vendor_id$=pot05a.vendor_id$
            pot15a.ap_inv_no$=pot05a.ap_inv_no$
            pot15a.sequence_no$=pot05a.sequence_no$
            x$=pot05a.firm_id$+pot05a.ap_type$+pot05a.vendor_id$+pot05a.ap_inv_no$+pot05a.sequence_no$
            pot15a.line_no$=poe15a.line_no$
            write record (pot15_dev,key=pot15a.firm_id$+pot15a.ap_type$+pot15a.vendor_id$+pot15a.ap_inv_no$+pot15a.sequence_no$+pot15a.line_no$) pot15a$
            remove (poe15_dev,key=poe15a.firm_id$+poe15a.ap_type$+poe15a.vendor_id$+poe15a.ap_inv_no$+poe15a.line_no$,dom=*continue)

        wend

    rem --- Position GL distribution file

        if gl$="Y"

            dim item$[6],values[4],w$[10],y$[10]
            distribution=0
            read (poe35_dev,key=poe05a.firm_id$+poe05a.ap_type$+poe05a.vendor_id$+poe05a.ap_inv_no$,dom=*next)

        rem --- Read next GL distribution record

            while more

                k$=key(poe35_dev,end=*break)
                if pos(poe05a.firm_id$+poe05a.ap_type$+poe05a.vendor_id$+poe05a.ap_inv_no$=k$)<>1 then break
                read record (poe35_dev) poe35a$

            rem --- Generate GL recap postings and loop back for next record

                account$=poe35a.gl_account$
                amount=-poe35a.gl_post_amt,values[0]=amount,w$[0]=poe35a.firm_id$+poe35a.ap_type$+poe35a.vendor_id$+poe35a.ap_inv_no$+poe35a.line_no$,w$[1]=poe35a.gl_acct$+poe35a.reserved_str$
                action$="D"
                distribution=distribution+amount
                gosub post_routine

            rem --- Generate apt-02 record

                gosub gen_rec

            rem --- Loop back for next distribution record
                remove (poe35_dev,key=k$,dom=*continue)

            wend

        rem --- Generate GL recap postings for the invoice

            if distribution<>0 then 

                action$="D"
                account$=apacct$,values[0]=-distribution,w$[0]=poe05a.firm_id$+poe05a.ap_type$+poe05a.vendor_id$+poe05a.ap_inv_no$
                if values[0] then gosub post_routine

            endif

        endif

        next_header: rem --- Loop back for next header

        write record (pot05_dev,key=pot05a.firm_id$+pot05a.ap_type$+pot05a.vendor_id$+pot05a.ap_inv_no$+pot05a.sequence_no$) pot05a$
        remove (poe05_dev,key=poe05a.firm_id$+poe05a.ap_type$+poe05a.vendor_id$+poe05a.ap_inv_no$,dom=*continue)

    wend

done: rem --- Update landed cost?

    while more

        if pos(r3$(55,1)="QC")<>0

            call pgmdir$+"syc_cn.bbx","",0,7,'ce',status
            call pgmdir$+"adc_progress.aon","S","","","","",0,0,1,meter_num,status
            read (pow17_dev,key=firm_id$,dom=*next)

        rem --- Read next landed cost record

            while more

                pow17a_key$=key(pow17_dev,end=*break)
                if pos(firm_id$=pow17a_key$)=1

                    read record (pow17_dev) pow17a$
                    call pgmdir$+"adc_progress.aon","S","","","","",0,0,1,meter_num,status

                rem --- Call standard inventory update program

                    action$="PI"
                    item$[0]=firm_id$,item$[1]=pow17a.warehouse_id$
                    item$[2]=pow17a.item_id$
                    refs[4]=pow17a.landed_cost
                    call pgmdir$+"ivc_ua.bbx",action$,files[all],params[all],params$[all],item$[all],refs$[all],refs[all],status

                endif

                break

            wend

        endif

    wend

rem --- All done

    goto std_exit

gen_rec: rem --- Generate apt-02 record

    if cvs(distaccnt$,2)<>""

        apt02a.firm_id$=poe05a.firm_id$
        apt02a.ap_type$=poe05a.ap_type$
        apt02a.vendor_id$=poe05a.vendor_id$
        apt02a.invoice_type$="I"
        apt02a.reference$=poe05a.ap_inv_no$
        apt02a.gl_account$=distaccnt$
        apt02a.acct_date$=fndate$(fndate$(gldate$))
        extract record (apt02_dev,key=apt02a.firm_id$+apt02a.ap_type$+apt02a.vendor_id$+apt02a.invoice_type$+apt02a.reference$+apt02a.gl_account$+apt02a.acct_date$,dom=*next) apt02a$
        apt02a.gl_post_amt=apt02a.gl_post_amt+distamnt
        apt02a.units=apt02a.units+distqty
        write record (apt02_dev,key=apt02a.firm_id$+apt02a.ap_type$+apt02a.vendor_id$+apt02a.invoice_type$+apt02a.reference$+apt02a.gl_account$+apt02a.acct_date$) apt02a$

    endif
    return

next_seq: rem --- Find next sequence number

    seq=0
    read (channel,key=x$(1,k)+$ff$,dom=*next)
    k$=keyp(channel,end=*next)
    if pos(x$(1,k)=k$)=1 then let seq=num(k$(k+1))+1
    return

post_routine: rem --- Call GL Posting Routine

    glfiles[1]=glm01_dev
    glfiles[2]=glt04_dev,glfiles[3]=glt14_dev
    glfiles[4]=apm10_dev
    glfiles[5]=arm10_dev,glparams$[0]=firm_id$
    glparams$[1]=apcode$
    glparams$[2]=arcode$,glparams$[3]=distcode$
    glparams$[4]=gldate$
    glparams$[5]=vendor$,glparams$[6]=name$
    glparams$[7]=m0$
    glparams$[8]=g4$,glparams$[9]=i3$(8,1)
    glparams$[10]=account$
    glparams[0]=i[0],glparams[1]=i[1]
    glparams[2]=g[4]
    glparams[3]=i[3],glparams[4]=i[4],glparams[5]=i[5]
    dim glaccounts$[5],glamounts[5],glqtys[5]
    call pgmdir$+"poc_gb.bbx",action$,glfiles[all],glparams$[all],glparams[all],item$[all],w$[all],y$[all],values[all],glaccounts$[all],glamounts[all],glqtys[all],status
    let distaccnt$=glaccounts$[1],distamnt=-glamounts[0],distqty=-glqtys[0]; rem "Distribution account = PO account, Distribution amount and quantity = -(AP amount and quantity)
    if pom02a.line_type$="S" distaccnt$=glaccounts$[4]; rem "For S-line types, Distribution account = IV account, Distribution amount and quantity = -(AP amount and quantity)
    if action$="D" distaccnt$=glaccounts$[0],distamnt=-distamnt,distqty=-distqty; rem "For GL distribution, Distribution account = AP account, Distribution amount and quantity = AP amount and quantity

    return

rem #include std_functions.src
rem --- Standard AddonSoftware functions (01Mar2006)
rem --- Date/time handling functions

    def fndate$(q$)
        q1$=""
        q1$=date(jul(num(q$(1,4)),num(q$(5,2)),num(q$(7,2)),err=*next),err=*next)
        if q1$="" q1$=q$
        return q1$
    fnend
    
rem --- fnmask$: Alphanumeric Masking Function (formerly fnf$)

    def fnmask$(q1$,q2$)
        if q2$="" q2$=fill(len(q1$),"0")
        return str(-num(q1$,err=*next):q2$,err=*next)
        q=1
        q0=0
        while len(q2$(q))
              if pos(q2$(q,1)="-()") q0=q0+1 else q2$(q,1)="X"
              q=q+1
        wend
        if len(q1$)>len(q2$)-q0 q1$=q1$(1,len(q2$)-q0)
        return str(q1$:q2$)
    fnend

rem #endinclude std_functions.src

rem #include disp_message.src

disp_message:rem --- Display Message Dialog

    call stbl("+DIR_SYP")+"bac_message.bbj",msg_id$,msg_tokens$[all],msg_opt$,table_chans$[all]
return
	
rem #endinclude disp_message.src

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    call stbl("+DIR_SYP")+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:                                str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src
rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:                                   str(err:"000"),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    call pgmdir$+"adc_progress.aon","D","","","","",0,0,0,meter_num,status
    run stbl("+DIR_SYP")+"bas_process_end.bbj",err=*next
    release
rem #endinclude std_end.src

    end
