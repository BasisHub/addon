rem --- Display Vendor Information and Comments
rem --- Program poc_va v8.0.0 27Dec2007 (poc_va)
rem --- Created by c:\codeport_bbj\adx_codeport.bbj v1.1.5 (12/27/2007 10:36:35)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright (c) 1981-2007 AddonSoftware
rem --- All Rights Reserved

    seterr std_error
    setesc std_error
    enter action$,vendor$,vendlen,m0$,apm01_dev,apm09_dev,p3$,l0,status

rem --- Retrieve the program path

    pgmdir$=stbl("+dir_pgm",err=*next)

rem --- Retrieve sysinfo data

    sysinfo_template$=stbl("+sysinfo_tpl",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+sysinfo",err=*next)
    milestone=num(stbl("+milestone",err=*next),err=*next)
    firm_id$=sysinfo.firm_id$

rem --- Open/Lock files

    files=4,begfile=1,endfile=files
    dim files$[files],options$[files],ids$[files],templates$[files],channels[files]
    files$[1]="apm-01",ids$[1]="APM_VENDMAST"
    files$[2]="apm-09",ids$[2]="APM_VENDCMTS"
    files$[3]="aps-01a",ids$[3]=""
    files$[4]="ivs_params",ids$[4]="IVS_PARAMS"
    call pgmdir$+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],
:                                   ids$[all],templates$[all],channels[all],batch,status
    if status goto std_exit
    apm01_dev=channels[1]
    apm09_dev=channels[2]
    aps01a_dev=channels[3]
    ivs01a_dev=channels[4]

rem --- Dimension string templates

    dim apm01a$:templates$[1],apm09a$:templates$[2],aps01a$:templates$[3],
:       ivs01a$:templates$[4]

rem --- Retrieve parameter records

    aps01a_key$=firm_id$+"AP00"
    find record (aps01a_dev,key=aps01a_key$,err=std_missing_params) aps01a$
    ivs01a_key$=firm_id$+"IV00"
    find record (ivs01a_dev,key=ivs01a_key$,err=std_missing_params) ivs01a$

rem --- Determine interface

    call pgmdir$+"syc_dg.bbx",sysgui_dev,event$,event_len,sysfin$,sysfin,ui$,status
    if status then goto std_exit

rem --- Initializations

    controls=5
    dim control[controls],value$[controls],value[controls],mask$[controls]
    control[0]=3000
    control[1]=2001,control[2]=2003,control[3]=2004,control[4]=2005,control[5]=2006
    apm01a.vendor_id$=vendor$
    status=11,pm$="(###) 000-0000",row=l0
    if ui$="W" then let my_context=sysfin.current_context

rem --- Retrieve and display vendor

    find record (apm01_dev,key=apm01a.firm_id$+apm01a.vendor_id$,dom=done) apm01a$
    address$=apm01a.addr_line1$+apm01a.addr_line2$+apm01a.city$+apm01a.state_code$+apm01a.zip_code$
    status=0
    call pgmdir$+"adc_address.aon",address$,24,3,9,30
    call stbl("+DIR_SYP")+"bac_getmask.bbj","T",cvs(apm01a.phone_no$,2),"",phone_mask$
    phone$=cvs(apm01a.phone_no$,2)
    phone$=str(phone$:phone_mask$,err=*next)
    call stbl("+DIR_SYP")+"bac_getmask.bbj","T",cvs(apm01a.fax_no$,2),"",fax_mask$
    fax$=cvs(apm01a.fax_no$,2)
    fax$=str(fax$:fax_mask$,err=*next)
    if ui$<>"W"

      print @(9,3),fnmask$(apm01a.vendor_id$,m0$),@(9,4),apm01a.vendor_name$,@(9,5),address$(1,30),@(9,6),address$(31,30),@(9,7),address$(61,30),@(9,8),address$(91,30),
      if pos("N"=action$)=0 then print @(9,l0-2),apm01a.contact_name$,@(42),phone$,@(66),fax$,

    else

rem --- GUI

        value$[0]=fnmask$(apm01a.vendor_no$,m0$)
        value$[1]=apm01a.vendor_name$,value$[2]=address$(1,30),value$[3]=address$(31,30),value$[4]=address$(61,30),value$[5]=address$(91,30)

rem --- escape can't do phone numbers yet

    call pgmdir$+"syc_rd.bbx","",my_context,0,controls,control[all],value$[all],value[all],mask$[all],ignore_status

    fi

rem --- Display comments

    if pos("V"=action$)<>0

        if p3$(2,1)="Y"

            read (apm09_dev,key=apm01a_key.firm_id$+apm01a_key.vendor_no$+p3$(59,2),dom=label1)
            goto label2

        label1:

            k$=key(apm09_dev,end=done)
            if pos(apm01a.firm_id$+apm01a.vendor_no$=k$)<>1 then goto std_exit
            if num(p3$(61,2),err=done)<>0 then if k$(9,2)>p3$(61,2) then goto std_exit

        label2:
            call pgmdir$+"syc_cm.bbx","W",apm01a.firm_id$,apm01a.vendor_no$,p3$(59,2),p3$(61,2),apm09_dev,48,12,1,row

        endif

    endif

done: rem --- All done

    goto std_exit

rem #include std_functions.src
rem --- Standard AddonSoftware functions (01Mar2006)

rem --- fnmask$: Alphanumeric Masking Function (formerly fnf$)

    def fnmask$(q1$,q2$)
        if q2$="" q2$=fill(len(q1$),"0")
        return str(-num(q1$,err=*next):q2$,err=*next)
        q=1
        q0=0
        while len(q2$(q))
              if pos(q2$(q,1)="-()") q0=q0+1 else q2$(q,1)="X"
              q=q+1
        wend
        if len(q1$)>len(q2$)-q0 q1$=q1$(1,len(q2$)-q0)
        return str(q1$:q2$)
    fnend

rem #endinclude std_functions.src

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    call stbl("+DIR_SYP")+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:                                str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src
rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:                                   str(err:"000"),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_exit.src

std_exit: rem --- Standard called program exit (01Mar2006)

    exit
rem #endinclude std_exit.src

    end
