rem --- rem Replenishment Report Program (Input Overlay)
rem --- Program por_replen.aon v8.0.0 06Jul2007 (por_fa)
rem --- Created by adx_codeport.bbx v1.1.5 (07/06/2007 12:35:00)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright (c) 1981-2007 AddonSoftware
rem --- All Rights Reserved

    setesc std_error
    seterr std_error

rem --- Retrieve the program path

    pgmdir$=stbl("+DIR_PGM",err=*next)

rem --- Retrieve sysinfo data

    sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=*next)
    milestone=num(stbl("+MILESTONE",err=*next),err=*next)
    firm_id$=sysinfo.firm_id$

rem --- Open/Lock files

    files=27,begfile=1,endfile=files
    dim files$[files],options$[files],ids$[files],templates$[files],channels[files]
    files$[2]="apm-01",ids$[2]="APM_VENDMAST"
    files$[3]="apm-02",ids$[3]="ARM_CUSTMAST"
    files$[4]="apm-05",ids$[4]="APM_VENDADDR"
    files$[5]="apm-06",ids$[5]="APM_VENDREPL"
    files$[6]="ivm-01",ids$[6]="IVM_ITEMMAST"
    files$[7]="ivc_prodcode",ids$[7]="IVC_PRODCODE";rem "ivm-10a"
    files$[8]="poe-01",ids$[8]="POE_REQHDR"
    files$[9]="poe-02",ids$[9]="POE_POHDR"
    files$[10]="poe-06",ids$[10]="POE_ORDHDR"
    files$[11]="poe-07",ids$[11]="POE_REPSEL"
    files$[12]="poe-11",ids$[12]="POE_REQDET"
    files$[13]="poe-16",ids$[13]="POE_ORDDET"
    files$[14]="poe-17",ids$[14]="POE_REPXREF"
    files$[15]="poe-21",ids$[15]="POE_REQPRINT"
    files$[16]="poe-26",ids$[16]="POE_ORDTOT"
    files$[17]="poe-31",ids$[17]="POE_REQBYREQ"
    files$[18]="poe-36",ids$[18]="POE_REPSURP"
    files$[19]="poe-41",ids$[19]="POE_REQBYITM"
    files$[20]="poe-52",ids$[20]="POE_POBYREQ"
    files$[21]="pom-02",ids$[21]="POC_LINECODE"
    files$[22]="pos-10",ids$[22]="POS_NUMBERS"
    files$[23]="aps_params",ids$[23]="APS_PARAMS"
    files$[24]="gls_params",ids$[24]="GLS_PARAMS"
    files$[25]="ivs_params",ids$[25]="IVS_PARAMS"
    files$[26]="ivs_abcparam",ids$[26]="IVS_ABCPARAM"
    files$[27]="ivc_buycode",ids$[27]="IVC_BUYCODE";rem "ivm-10f

    call pgmdir$+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],
:                                   ids$[all],templates$[all],channels[all],batch,status
    if status goto std_exit
    apm01_dev=channels[2]
    apm02_dev=channels[3]
    apm05_dev=channels[4]
    apm06_dev=channels[5]
    ivm01a_dev=channels[6]
    ivm10a_dev=channels[7]
    ivm10f_dev=channels[27]
    poe01_dev=channels[8]
    poe02_dev=channels[9]
    poe06_dev=channels[10]
    poe07_dev=channels[11]
    poe11_dev=channels[12]
    poe16_dev=channels[13]
    poe17_dev=channels[14]
    poe21_dev=channels[15]
    poe26a_dev=channels[16]
    poe31_dev=channels[17]
    poe36_dev=channels[18]
    poe41_dev=channels[19]
    poe52_dev=channels[20]
    pom02_dev=channels[21]
    pos10_dev=channels[22]
    aps01a_dev=channels[23]
    gls01a_dev=channels[24]
    ivs01a_dev=channels[25]
    ivs01c_dev=channels[26]

rem --- Dimension string templates

    dim apm01a$:templates$[2],apm02a$:templates$[3],apm05a$:templates$[4],
:       apm06a$:templates$[5],ivm01a$:templates$[6],ivm10a$:templates$[7],
:       poe01a$:templates$[8],poe02a$:templates$[9],poe06a$:templates$[10],
:       poe07a$:templates$[11],poe11a$:templates$[12],poe16a$:templates$[13],
:       poe17a$:templates$[14],poe21a$:templates$[15],poe26a$:templates$[16],
:       poe31a$:templates$[17],poe36a$:templates$[18],poe41a$:templates$[19],
:       poe52a$:templates$[20],pom02a$:templates$[21],pos10a$:templates$[22],
:       aps01a$:templates$[23],gls01a$:templates$[24],ivs01a$:templates$[25],
:       ivs01c$:templates$[26],ivm10f$:templates$[27]

rem --- Assign form input values to local variables

    includewhse$=option!.getOptionData("whse_detail")
    suggonly$=option!.getOptionData("sugg_itemsonly")

rem --- Retrieve parameter records

    aps01a_key$=firm_id$+"AP00"
    find record (aps01a_dev,key=aps01a_key$,err=std_missing_params) aps01a$
    gls01a_key$=firm_id$+"GL00"
    find record (gls01a_dev,key=gls01a_key$,err=std_missing_params) gls01a$
    ivs01a_key$=firm_id$+"IV00"
    find record (ivs01a_dev,key=ivs01a_key$,err=std_missing_params) ivs01a$
    ivs01c_key$=firm_id$+"IV00"
    find record (ivs01c_dev,key=ivs01c_key$,err=std_missing_params) ivs01c$

rem --- masks

    call stbl("+DIR_PGM")+"adc_getmask.aon","","IV","A","",m1$,0,0
    call stbl("+DIR_PGM")+"adc_getmask.aon","","IV","U","",m2$,0,0
    call stbl("+DIR_PGM")+"adc_getmask.aon","","IV","C","",m3$,0,0

    call stbl("+DIR_PGM")+"adc_getmask.aon","","AP","I","",vendomask$,0,vendlen

rem --- Parameters

    dim desc[3],abcp[25],factors[25]
    n1$=sysinfo.firm_name$
    n2$="AP"
    n3$=sysinfo.task_desc$
    find record (aps01a_dev,key=firm_id$+n2$+"00",dom=std_missing_params) aps01a$
    find record (ivs01c_dev,key=firm_id$+"IV02",dom=std_missing_params) ivs01c$
    find record (ivs01a_dev,key=firm_id$+"IV00",dom=std_missing_params) ivs01a$
    ivprecision=num(ivs01a.preceision$)
    itemlen=ivs01a.item_id_len
    defaultwhse$=ivs01a.warehouse_id$
    curper$=ivs01a.current_per$
    curyr$=ivs01a.current_year$
    curper=num(curper$)
    curyr=fnyy_year(curyr$)
    call pgmdir$+"adc_perioddates.aon",sys01_dev,curper,curyr,begper$,endper$,status

    desclen[1]=num(ivs01a.desc_len_01$)
    desclen[2]=num(ivs01a.desc_len_02$)
    desclen[3]=num(ivs01a.desc_len_03$)     

    find record (gls01a_dev,key=firm_id$+"GL00",dom=std_missing_params) gls01a$
    precision ivprecision

rem --- Init Data

    dim dashes$(132,"-"),o[14],h[14],hsel[9]
    call pgmdir$+"adc_sizemask.aon",m2$,m2,8,10
    m6$="###0.00-";rem weight
    m9$="##0";rem lead time & cycle days
    phnmsk$="(###) ###-####"

    while more
        m1=len(m1$)
        m3=len(m3$)
        m6=len(m6$)
        m9=len(m9$)
        totmlen=m1+(10*m2)+m3+m6+m9+7
        if totmlen<=130 break
        if m1>12 call pgmdir$+"adc_sizemask.aon",m1$,m1,12,m1-1; continue
        if m3>9 call pgmdir$+"adc_sizemask.aon",m3$,m3,9,m3-1; continue
        if m2>8 call pgmdir$+"adc_sizemask.aon",m2$,m2,8,m2-1; continue
    break

    o[0]=132-(totmlen)
    o[1]=o[0]+4
    o[2]=o[1]+m2
    o[3]=o[2]+m2
    o[4]=o[3]+m2
    o[5]=o[4]+m9
    o[6]=o[5]+m2
    o[7]=o[6]+m2
    o[8]=o[7]+m2
    o[9]=o[8]+m2
    o[10]=o[9]+m2
    o[11]=o[10]+m2
    o[12]=o[11]+m3+1
    o[13]=o[12]+m2+1
    o[14]=o[13]+m6+1

rem --- Column headers

    h[0]=o[0]-1
    h[1]=o[1]+m2-8
    h[2]=o[2]+m2-8
    h[3]=o[3]+m2-7
    h[4]=o[4]+m9-4
    h[5]=o[5]+m2-6
    h[6]=o[6]+m2-6
    h[7]=o[7]+m2-7
    h[8]=o[8]+m2-6
    h[9]=o[9]+m2-5
    h[10]=o[10]+m2-6
    h[11]=o[11]+m3-6
    h[12]=o[12]+m2-10
    h[13]=o[13]+m6-7
    h[14]=o[14]+m1-9

rem --- Selections column headers

    hsel[0]=24
    hsel[1]=30
    hsel[2]=38
    hsel[3]=46
    hsel[4]=55
    hsel[5]=64
    hsel[6]=75
    hsel[7]=86
    hsel[8]=93
    hsel[9]=100

rem --- Run report overlay

    run pgmdir$+"por_replenreg_o1"

rem #include std_functions.src
rem --- Standard AddonSoftware functions (01Mar2006)
rem --- Functions used to retrieve form values

    def fnstr_pos(q0$,q1$,q1)=int((pos(q0$=q1$,q1)+q1-1)/q1)
    def fnget_rec_date$(q0$)=rd_rec_data$[fnstr_pos(cvs(q0$,1+2+4)+"."+
:                            cvs(q0$,1+2+4),rd_rec_data$[0,0],40),0]
    def fnget_fld_data$(q0$,q1$)=cvs(rd_rec_data$[fnstr_pos(cvs(q0$,1+2+4)+"."+
:                                cvs(q1$,1+2+4),rd_rec_data$[0,0],40),0],2)
    def fnget_table$(q0$)=rd_alias_id$

rem --- Miscellaneous functions

    def fncenter(q$,q)=int((q-len(q$))/2)

rem --- Format inventory item description

    def fnitem$(q$,q1,q2,q3)=cvs(q$(1,q1)+" "+q$(q1+1,q2)+" "+q$(q1+q2+1,q3),32)

rem --- Date/time handling functions

    def fnyy$(q$)=q$(3,2)
    def fnclock$(q$)=date(0:"%hz:%mz %p")
    def fntime$(q$)=date(0:"%Hz%mz")

rem --- fnmask$: Alphanumeric Masking Function (formerly fnf$)

    def fnmask$(q1$,q2$)
        if q2$="" q2$=fill(len(q1$),"0")
        return str(-num(q1$,err=*next):q2$,err=*next)
        q=1
        q0=0
        while len(q2$(q))
              if pos(q2$(q,1)="-()") q0=q0+1 else q2$(q,1)="X"
              q=q+1
        wend
        if len(q1$)>len(q2$)-q0 q1$=q1$(1,len(q2$)-q0)
        return str(q1$:q2$)
    fnend

rem --- fnbasename$: Strip path and optionally the suffix from a file name

    def fnbasename$(q$,q0$)
        q=max(pos("/"=q$,-1),pos(":"=q$,-1),pos(">"=q$,-1),pos("\"=q$,-1))
        if q then q$=q$(q+1)
        if q0$<>"" then q=mask(q$,q0$); if q q$=q$(1,q-1)
    return q$

rem --- fnglobal: Return numeric value of passed stbl variable

    def fnglobal(q$,q1)
        q1$=stbl(q$,err=*next),q1=num(q1$,err=*next)
        return q1
    fnend

rem --- fnglobal$: Return string value of passed STBL variable

    def fnglobal$(q$,q1$)
        q1$=stbl(q$,err=*next)
        return q1$
    fnend

rem #endinclude std_functions.src

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_SYP",err=std_error_exit)
    call pgmdir$+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:                                str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src

rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:                                   str(err:"000"),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    run stbl("+DIR_SYP")+"bas_process_end.bbj",err=*next
    release
rem #endinclude std_end.src

    end
