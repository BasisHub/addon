rem --- Line Item Additional Options Entry
rem --- Program poc_ao v8.0.0 11Dec2007 (poc_ao)
rem --- Created by c:\codeport_bbj\adx_codeport.bbj v1.1.5 (12/11/2007 09:57:46)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright BASIS International Ltd.  All Rights Reserved.
rem --- All Rights Reserved

    seterr std_error
    setesc std_error
    enter type$,channels[all],params$[all],line,status

rem --- Retrieve the program path

    pgmdir$=stbl("+dir_pgm",err=*next)

rem --- Retrieve sysinfo data

    sysinfo_template$=stbl("+sysinfo_tpl",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+sysinfo",err=*next)
    rem milestone=num(stbl("+milestone",err=*next),err=*next)
    firm_id$=sysinfo.firm_id$

rem --- Open/Lock files

    files=6,begfile=1,endfile=files
    dim files$[files],options$[files],ids$[files],templates$[files],channels[files]
    files$[1]="aps-01a",ids$[1]=""
    files$[2]="ivs_params",ids$[2]="IVS_PARAMS"
    files$[3]="pom-04",ids$[3]="POC_MSGCODE"
    files$[4]="sfe-01",ids$[4]="SFE_WOMASTR"
    files$[5]="sfe-22",ids$[5]="SFE_WOMATL"
    files$[6]="sfe-32",ids$[6]="SFE_WOSUBCNT"
    call pgmdir$+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],
:                                   ids$[all],templates$[all],channels[all],batch,status
    if status goto std_exit
    aps01a_dev=channels[1]
    ivs01a_dev=channels[2]
    pom04_dev=channels[3]
    sfe01_dev=channels[4]
    sfe22_dev=channels[5]
    sfe32_dev=channels[6]

rem --- Dimension string templates

    dim aps01a$:templates$[1],ivs01a$:templates$[2],pom04a$:templates$[3],
:       sfe01a$:templates$[4],sfe22a$:templates$[5],sfe32a$:templates$[6]

rem --- Retrieve parameter records

    aps01a_key$=firm_id$+"AP00"
    find record (aps01a_dev,key=aps01a_key$,err=std_missing_params) aps01a$
    ivs01a_key$=firm_id$+"IV00"
    find record (ivs01a_dev,key=ivs01a_key$,err=std_missing_params) ivs01a$

rem --- Open/Lock Files

    pom04_dev=channels[1]
    sfe01_dev=channels[2]
    sfe22_dev=channels[3]
    sfe32_dev=channels[4]

rem --- Determine interface

    call pgmdir$+"syc_dg.bbx",sysgui_dev,event$,event_len,sysfin$,sysfin,ui$,status
    if status then goto std_exit

rem --- Parameters

    w0$=params$[0]
    w1$=params$[1],w2$=params$[2]
    y1$=params$[3]
    sf$=params$[4],so$=params$[5]

rem --- Initializations

    call pgmdir$+"syc_rg.bbx::save",globalvars$,ignore_status
    status=0
    dim a0$(75),b0$(15),d0$(5),d1$(32),message$[1]
    width=52
    height=8,win_x=28,win_y=line-height
    firm_id$=w0$(1,2)
    title$="Additional Options",wo$="N"
    if sf$<>"N" and pos(y1$(21,1)="SN")>0
        if y1$(21,1)<>"S" or so$="Y" then wo$="Y"
    endif
    more=1

display_resource: rem --- Display Resource

    dim resparams$[20],resparams[20]
    resparams$[0]=pgm(-2)
    resparams$[1]=pgm(-2)
    resparams$[6]=title$
    if ui$<>"W" then call pgmdir$+"syc_wa.bbx",0,width,height,win_x,win_y,title$,char_win$
    call pgmdir$+"syc_ra.bbx","O",resparams$[all],resparams[all],vmenu$[all],vmenu[all],vtool$[all],vtool[all],status
    if status then goto std_exit
    if sf$="N" then call pgmdir$+"syc_df.bbx",0,3003,my_context,status; call pgmdir$+"syc_df.bbx",0,3004,my_context,status
    gosub display_fields

    while more

        if ui$="W" then break

    date_promised:

        v4$="Delivery Was Promised By This Date"
        v0$="D"
        v1$="C6N",v2$=w1$(9,6),v3$="",v0=6,v1=18,v2=0,i0=0,control_id=3000

        on v3 goto label1,date_promised,date_promised,date_promised,flow_control,label1,flow_control

    label1:
        w1$(9,6)=v$
        break

    not_before_date:

        v4$="Delivery Can Not Be Made Before This Date"
        v0$="D"
        v1$="C6N",v2$=w1$(15,6),v3$="",v0=6,v1=18,v2=1,control_id=3001

        on v3 goto label2,not_before_date,flow_control,not_before_date,flow_control,label2,flow_control

    label2:
        w1$(15,6)=v$
        break

    lbl_message:

        v4$="Message To Print With This Line (<F3>=Lookup)"
        v0$="S"
        v1$="C",v2$=w1$(38,3),v3$="",v0=3,v1=18,v2=2,control_id=3002

        on v3 goto label4,lbl_message,flow_control,label3,flow_control,label4,flow_control

    label3:
        call pgmdir$+"poc_lk.bbx",2,v1,v2,v$

    label4:
        pom04a.FIRM_ID$=firm_id$
        pom04a.PO_MSG_CODE$=v$
        pom04a.CODE_DESC$=""
        pom04a.MESSAGE_TYPE$=""
        if cvs(v$,2)<>"" then find record (pom04_dev,key=pom04a_key.firm_id$+pom04a_key.po_msg_code$,dom=lbl_message) pom04a$
        call pgmdir$+"syc_rs.bbx","",my_context,3002,pom04a.po_msg_code$,0,"",status; call pgmdir$+"syc_rs.bbx","",my_context,13002,pom04a.code_desc$,0,"",status
        w1$(38,3)=v$
        break

    work_order_number:

        if sf$="N" then break
        v4$="Work Order For This Item (<F1>=None/<F3>=Lookup)"
        v0$="Z"
        v1$="C",v2$=w2$(1,7),v3$="",v0=7,v1=18,v2=3,control_id=3003

        on v3 goto label6,no_work_order,flow_control,label5,flow_control,label6,flow_control

    label5:
        call pgmdir$+"syc_lw.bbx",v$,""
        if v$="" then goto work_order_number

    label6:
        if v$<>"" 

            sfe01a_key.FIRM_ID$=firm_id$
            sfe01a_key.WO_LOCATION$=""
            sfe01a_key.WO_N0$=v$
            find record (sfe01_dev,key=sfe01a_key.FIRM_ID$+sfe01a_key.WO_LOCATION$+sfe01a_key.WO_N0$,dom=work_order_number) sfe01a$
            if pos(sfe01a.WO_STATUS$="QC")>0 

                 message$[0]="This Work Order Is A Quote Or Closed (<Enter>=Continue)"
                 call pgmdir$+"adc_stdmessage.aon",2,message$[all],0,win_y+height,win_x,v$,v3
                 if v$<>"SPECIAL" then goto work_order_number

            endif 
            w2$(1,7)=sfe01a_key.WO_N0$
            call pgmdir$+"syc_rs.bbx","",my_context,3003,w2$(1,7),0,"",status
            break

       endif

    no_work_order:
        w2$(1,10)=""
        if ui$<>"W" then print @(v1,v2),'cl',
        break

    rem --- Work Order Materials/Subcontract Line

    work_order_materials:

        if sf$="N" then break
        if cvs(w2$(1,7),2)="" then break
        v4$="Materials"
        x$="B",channel=sfe22_dev
        if y1$(21,1)="N" then let v4$="Subcontracts",x$="C",channel=sfe32_dev
        v4$="Work Order "+v4$+" Line For This Item"
        v0$="Z"
        v1$="CR",v2$=w2$(8,3),v3$="",v0=3,v1=26,v2=3,control_id=3004

        on v3 goto label7,work_order_materials,flow_control,work_order_materials,flow_control,label7,flow_control

    label7:
        b0$=firm_id$+"  "+w2$(1,7)+x$+v$
        find (channel,key=b0$,dom=work_order_materials)
        w2$(8,3)=v$
        break 

    wend

flow_control: rem --- Flow Control

    while more

        on v3 goto incr_i0,incr_i0,decr_i0,incr_i0,set_i0_done,done_v3

        while more

        decr_i0:
            if i0<i0_nonkey1 then let i0=max(0,i0-1) else let i0=max(i0_nonkey1,i0-1)
            break
        incr_i0:
            i0=i0+1; break
        set_i0_done:
            i0=i0_done
            break

        wend

        on i0 goto date_promised,not_before_date,lbl_message,work_order_number,work_order_materials,done

    cancel:
        goto abort

    done: rem --- Correct?

        while more

            flag=0
            if validate then let validate=0; break
            gosub display_fields
            v0$="Y"
            v1$="KC",v2$="Y",v3$="",v4$="ITAC=Y",v0=1,v1=0,v2=22,control_id=i0-i0_done+1


        done_v3:

            on v3 goto done_test,done,done,done,cancel,validate_input,cancel,done,done,done

        done_test:

            action=pos(v$="YN")
            switch(action)
                case 1
                    goto validate_input
                    break
                case 2
                    goto do_nonkey1
                    break
                case default
                    flag=1
                    break
            swend
            if flag then break

        validate_input:

            validate=1
            old_control_id=0

        do_nonkey1:

            v3=0
            i0=i0_nonkey1-1
            flag=1
            break

        wend
        if flag then continue

        rem --- Make sure that work orders have valid line

        while more

            flag=0
            if wo$="N" then break
            if cvs(w2$(1,7),2)="" then break
            b0$(1)=firm_id$+"  "+w2$(1,7)+"B"+w2$(8,3)
            channel=sfe22_dev
            if y1$(21,1)="N" then let b0$(12,1)="C",channel=sfe32_dev
            find (channel,key=b0$,dom=missing_key)
            break

        missing_key:

            message$[0]="Detail Line Number Is Required When A Work Order"
            message$[1]="Is Specified (<Enter>=Continue)"
            v3=0,i0=3
            call pgmdir$+"adc_stdmessage.aon",2,message$[all],1,win_y+height,win_x,v$,v3
            if v$<>"SPECIAL" then flag=1;break
            break
            endif

        wend
        if flag then continue

    rem --- Return updated record

        params$[1]=w1$
        params$[2]=w2$
        goto std_exit

    wend

abort: rem --- Abort

    status=999
    goto std_exit

display_fields: rem --- Display Fields

    promised$=""
    before$="",workorder$=""
    if cvs(w1$(9,6),2)<>"" then let promised$=fndate$(w1$(9,6))
    if cvs(w1$(15,6),2)<>"" then let before$=fndate$(w1$(15,6))
    if sf$<>"N" then if cvs(w2$(1,7),2)<>"" then workorder$=w2$(1,7)

rem --- if cvs(w2$(8,3),2)<>"" then let workorder$=workorder$+" "+w2$(8,3)

    pom04a.firm_id$=firm_id$
    pom04a.po_msg_code$=w1$(38,3)
    pom04a.code_desc$=""
    pom04a.message_type$=""

    find record (pom04_dev,key=pom04a_key.firm_id$+pom04a_key.po_msg_code$,dom=*next) pom04a$
    call pgmdir$+"syc_rs.bbx","",my_context,3000,promised$,0,"",status
    call pgmdir$+"syc_rs.bbx","",my_context,3001,before$,0,"",status
    call pgmdir$+"syc_rs.bbx","",my_context,3002,pom04a.po_msg_code$,0,"",status
    call pgmdir$+"syc_rs.bbx","",my_context,13002,pom04a.code_desc$,0,"",status
    call pgmdir$+"syc_rs.bbx","",my_context,3003,workorder$,0,"",status
    call pgmdir$+"syc_rs.bbx","",my_context,3004,w2$(8,3),0,"",status
    return

rem #include std_functions.src
rem --- Standard AddonSoftware functions (01Mar2006)

rem --- Date/time handling functions

    def fndate$(q$)
        q1$=""
        q1$=date(jul(num(q$(1,4)),num(q$(5,2)),num(q$(7,2)),err=*next),err=*next)
        if q1$="" q1$=q$
        return q1$
    fnend

rem #endinclude std_functions.src

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    call stbl("+DIR_SYP")+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:                                str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src
rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:                                   str(err:"000"),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_exit.src

std_exit: rem --- Standard called program exit (01Mar2006)

    exit
rem #endinclude std_exit.src

    end
