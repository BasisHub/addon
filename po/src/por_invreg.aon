rem --- Purchase Order Invoice Register (Invoices)
rem --- Program por_invreg v8.0.0 23Jun2009 (por_ea)
rem --- Created by adx_codeport.bbj v1.1.5 (06/23/2009 05:54:54)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright (c) 1981-2007 AddonSoftware
rem --- All Rights Reserved

    seterr std_error
    setesc std_error

rem --- Retrieve the program path

    pgmdir$=stbl("+DIR_PGM",err=*next)

rem --- Retrieve sysinfo data

    sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=*next)
    milestone=num(stbl("+MILESTONE",err=*next),err=*next)
    firm_id$=sysinfo.firm_id$

rem --- Document initializations
    OutVect!=bbjAPI().getSysGui().makeVector()
    HdrVect!=bbjAPI().getSysGui().makeVector()
    BrkVect!=bbjAPI().getSysGui().makeVector()
    TotVect!=bbjAPI().getSysGui().makeVector()
    rep_date$=date(0:"%Mz/%Dz/%Yd")
    rep_date_stamp$=date(0:"%Yd%Mz%Dz")
    rep_time$=date(0:"%hz:%mz %p")
    rep_time_stamp$=date(0:"%Hz%mz%sz")

rem --- Assign form input values to local variables

    level$=Option!.getOptionData("REPORT_SEQUENCE")

rem --- Open/Lock Files

    files=35,begfile=1,endfile=files
    dim files$[files],options$[files],ids$[files],templates$[files],channels[files]

    files$[1]="aps_params",ids$[1]="APS_PARAMS"
    files$[2]="ars_params",ids$[2]="ARS_PARAMS"
    files$[3]="gls_params",ids$[3]="GLS_PARAMS"
    files$[4]="ivs_params",ids$[4]="IVS_PARAMS"
    files$[5]="pos_params",ids$[5]="POS_PARAMS"
    files$[6]="poe-02",ids$[6]="POE_POHDR"
    files$[7]="poe-05",ids$[7]="POE_INVHDR"
    files$[8]="poe-12",ids$[8]="POE_PODET"
    files$[9]="poe-15",ids$[9]="POE_INVSEL"
    files$[10]="poe-25",ids$[10]="POE_INVDET"
    files$[11]="poe-35",ids$[11]="POE_INVGL"
    files$[12]="pom-02",ids$[12]="POC_LINECODE"
    files$[13]="pot-04",ids$[13]="POT_RECHDR"
    files$[14]="pot-05",ids$[14]="POT_INVHDR"
    files$[15]="pot-14",ids$[15]="POT_RECDET"
    files$[16]="pot-15",ids$[16]="POT_INVSEL"
    files$[17]="pot-25",ids$[17]="POT_INVDET"
    files$[19]="apm-01",ids$[19]="APM_VENDMAST"
    files$[20]="apm-02",ids$[20]="APM_VENDHIST"
    files$[21]="apm-09",ids$[21]="APM_VENDCMTS"
    files$[22]="apc_typecode",ids$[22]="APC_TYPECODE"
    files$[23]="apc_distribution",ids$[23]="APC_DISTRIBUTION"
    files$[24]="apc_termscode",ids$[24]="APC_TERMSCODE"
    files$[25]="apt-01",ids$[25]="APT_INVOICEHDR"
    files$[26]="apt-02",ids$[26]="APT_INVOICEDIST"
    files$[27]="apt-11",ids$[27]="APT_INVOICEDET"
    files$[28]="ivm-01",ids$[28]="IVM_ITEMMAST"
    files$[29]="ivm-02",ids$[29]="IVM_ITEMWHSE"

    call pgmdir$+"adc_fileopen.aon",action,begfile,29,files$[all],options$[all],
:                                   ids$[all],templates$[all],channels[all],batch,status

    if status goto std_exit

    aps01_dev=channels[1]
    ars01_dev=channels[2]
    gls01_dev=channels[3]
    ivs01_dev=channels[4]
    pos01_dev=channels[5]
    poe02_dev=channels[6]
    poe05_dev=channels[7]
    poe12_dev=channels[8]
    poe15_dev=channels[9]
    poe25_dev=channels[10]
    poe35_dev=channels[11]
    pom02_dev=channels[12]
    pot04_dev=channels[13]
    pot05_dev=channels[14]
    pot14_dev=channels[15]
    pot15_dev=channels[16]
    pot25_dev=channels[17]
    apm01_dev=channels[19]
    apm02_dev=channels[20]
    apm09_dev=channels[21]
    apm10a_dev=channels[22]
    apm10b_dev=channels[23]
    apm10c_dev=channels[24]
    apt01_dev=channels[25]
    apt02_dev=channels[26]
    apt11_dev=channels[27]
    ivm01_dev=channels[28]
    ivm02_dev=channels[29]

rem --- Dimension string templates

    dim aps01a$:templates$[1],ars01a$:templates$[2],gls01a$:templates$[3],
:       ivs01a$:templates$[4],pos01a$:templates$[5],
:       poe02a$:templates$[6],poe05a$:templates$[7],poe12a$:templates$[8],
:       poe15a$:templates$[9],poe25a$:templates$[10],poe35a$:templates$[11],
:       pom02a$:templates$[12],pot04a$:templates$[13],
:       pot05a$:templates$[14],pot14a$:templates$[15],pot15a$:templates$[16],
:       pot25a$:templates$[17],
:       apm01a$:templates$[19],apm02a$:templates$[20],apm09a$:templates$[21],
:       apm10a$:templates$[22],apm10b$:templates$[23],apm10c$:templates$[24],
:       apt01a$:templates$[25],apt02a$:templates$[26],
:       apt11a$:templates$[27],      
:       ivm01a$:templates$[28],ivm02a$:templates$[29]

rem --- Retrieve parameter records

    aps01a_key$=firm_id$+"AP00"
    find record (aps01_dev,key=aps01a_key$,err=std_missing_params) aps01a$
    ars01a_key$=firm_id$+"AR00"
    find record (ars01_dev,key=ars01a_key$,err=std_missing_params) ars01a$
    gls01a_key$=firm_id$+"GL00"
    find record (gls01_dev,key=gls01a_key$,err=std_missing_params) gls01a$
    ivs01a_key$=firm_id$+"IV00"
    find record (ivs01_dev,key=ivs01a_key$,err=std_missing_params) ivs01a$
    pos01a_key$=firm_id$+"PO00"
    find record (pos01_dev,key=pos01a_key$,err=std_missing_params) pos01a$

rem --- masks

    call stbl("+DIR_PGM")+"adc_getmask.aon","","IV","A","",m1$,0,0
    call stbl("+DIR_PGM")+"adc_getmask.aon","","IV","U","",m2$,0,0
    call stbl("+DIR_PGM")+"adc_getmask.aon","","IV","C","",m3$,0,0

    call stbl("+DIR_PGM")+"adc_getmask.aon","","AP","I","",m0$,0,vendlen
    call stbl("+DIR_PGM")+"adc_getmask.aon","CUSTOMER_ID","","","",customask$,0,custlen
    call stbl("+DIR_PGM")+"adc_getmask.aon","","GL","I","",glacctmask$,0,glmasklen

rem --- Parameters

    dim i[6],p[3],g[4],info$[20]
    n2$="PO"
    gl$="N"
    ar$="N"
    sf$="N"
    status=0
    source$=pgm(-2)
    p[0]=num(aps01a.vendor_size$)
    i[0]=ivs01a.item_id_len
    i[1]=num(ivs01a.precision$)
    i[2]=ivs01a.ls_no_len
    i[3]=num(ivs01a.desc_len_01$)
    i[4]=num(ivs01a.desc_len_02$)
    i[5]=num(ivs01a.desc_len_03$)
    i[6]=ivs01a.vendor_prd_len
    distcode$="N"
    cash=aps01a.cash_basis$="Y"
    g[0]=num(gls01a.total_pers$)
    g[1]=num(gls01a.current_per$)
    g[2]=num(gls01a.current_year$)
    g[3]=num(gls01a.acct_length$)
    g[4]=num(gls01a.max_acct_len$)
    if cash goto l500
    call pgmdir$+"glc_ctlcreate.aon",err=l500,source$,n2$,glw11$,gl$,status
    if status goto std_exit
    process_id$=stbl("+PROCESS_ID")
    batch_no$=stbl("+BATCH_NO")
    
    if gl$<>"Y" goto l500
    call pgmdir$+"adc_application.aon","SF",info$[all]
    sf$=info$[20]
    call pgmdir$+"adc_application.aon","AR",info$[all]
    ar$=info$[20]
    if ar$="N" goto l500
    distcode$=ars01a.dist_by_item$

l500: rem --- Initializations

    precision i[1]
    dim a0$(20),a1$(64),a[8],b0$(8),b1$(30),xa$(32),headings$[3]
    dim oi[10],og[2],vendor[3],type[3],report[3],totals[3],desc$[3]
    dim op[7],ol[8],xc$(26),xc[2],y0$(4),y1$(32),y2$(2*g[4]),x0$(32)
    dim d0$(24),d1$(32),d[4],w0$(24),w1$(96),w[4],item$[6],x1$(4*g[4])
    dim glfiles[20],glparams$[20],glparams[20],w$[10],y$[10],values[20]
    dim tpls$[20]
    a0$(1)=firm_id$
    l0=11
    increment=10
    hl=3
    aptype$=""
    retention$=""
    nf$=Translate!.getTranslation("AON_(NOT_ON_FILE)")
    rh1$=Translate!.getTranslation("AON_DISCOUNT")
    rh2$=Translate!.getTranslation("AON_AMOUNT")
    m0=len(m0$)
    aptype=0
    retention=0
    headings=2
    t0$=""
    t1$=""
    errors=0
    width=132
    page=0
    l9=59
    l=l9+1
    clock$=""
    when$=sysinfo.system_date$
    desc$[1]=Translate!.getTranslation("AON_BY_INVOICE")
    desc$[2]=Translate!.getTranslation("AON_BY_PURCHASE_ORDER")
    glstatus=0
    desc$[3]=Translate!.getTranslation("AON_BY_LINE_ITEM")
    headings$[0]=sysinfo.firm_name$
    headings$[1]=sysinfo.task_desc$
    headings$[2]="[HEADER]"
    if aps01a.multi_types$="Y" aptype=1,headings=3
    if aps01a.ret_flag$="Y" retention=1,rh1$=Translate!.getTranslation("AON_DISCOUNT/"),rh2$=Translate!.getTranslation("AON_RETENTION")


rem --- Print positions

    call pgmdir$+"adc_sizemask.aon",m1$,m1,10,15
    call pgmdir$+"adc_sizemask.aon",m2$,m2,9,12
    call pgmdir$+"adc_sizemask.aon",m3$,m3,6,12
    oi[10]=width-m1
    oi[9]=oi[10]-m1
    oi[8]=oi[9]-16
    oi[7]=oi[8]-10
    oi[6]=oi[7]-10
    oi[5]=oi[6]-5
    oi[4]=oi[5]-6
    oi[3]=oi[4]-4
    oi[2]=oi[3]-5
    oi[1]=oi[2]-11
    dw=oi[1]-1
    if dw>m0+31 dw=m0+32,oi[1]=dw

rem --- Headings and print positions
rem --- because of the non-columnar nature of this report, it has been converted to DocOut
rem --- using a single column, and print lines are built by constructing pbuf$, then an entire
rem --- line is added to OutVect! (OutVect!.addItem(pbuf$))

    dim columns$[0,10]
    columns$[0,0]="  ",columns$[0,1]="C",columns$[0,2]=str(width)

rem --- Additional file opens

    if distcode$="Y"
        files$[30]="arc_distcode",ids$[30]="ARC_DISTCODE"
        call pgmdir$+"adc_fileopen.aon",action,30,30,files$[all],options$[all],
:                                   ids$[all],templates$[all],channels[all],batch,status
        if status goto std_exit
        arm10d_dev=channels[30]
        dim arm10d$:templates$[30]
    endif

    if pos(pos01a.land_method$="QC")
        files$[31]="pow-17",ids$[31]="POW_INVLAND",options$[31]="C"
        call pgmdir$+"adc_fileopen.aon",action,31,31,files$[all],options$[all],
:                                   ids$[all],templates$[all],channels[all],batch,status
        if status goto std_exit
        pow17_dev=channels[31]
        dim pow17a$:templates$[31]
    endif
    
    if gl$="Y"
        files$[32]="glm-01",ids$[32]="GLM_ACCT"
        files$[33]="glw-11",ids$[33]="GLW_DAILYDETAIL";REM --- not used as of batch implementation; ,options$[33]="CL"
        files$[34]="glt-04",ids$[34]="GLE_DAILYDETAIL"

        call pgmdir$+"adc_fileopen.aon",action,32,34,files$[all],options$[all],
:                                   ids$[all],templates$[all],channels[all],batch,status
        if status goto std_exit
        glm01_dev=channels[32]
        glw11_dev=channels[33]
        glt04_dev=channels[34]
        dim glm01a$:templates$[32]
        dim glt04a$:templates$[34]
        xref_dev=0
        
        rem --- Clear trans for this firm/process/batch from glw-11 work file (if not batching, batch_no$ is zero, and will clear all recs this firm/process)
        rec_pfx$=firm_id$+process_id$+batch_no$
        call stbl("+DIR_PGM")+"adc_clearpartial.aon","N",glw11_dev,rec_pfx$,status
        
    endif

    if sf$="Y"
        files$[34]="sfe-01",ids$[34]="SFE_WOMASTR"
        files$[35]="sfm-10",ids$[35]="SFC_WOTYPECD"
        call pgmdir$+"adc_fileopen.aon",action,34,35,files$[all],options$[all],
:                                   ids$[all],templates$[all],channels[all],batch,status
        if status goto std_exit
        sfe01_dev=channels[34]
        sfm10_dev=channels[35]
        dim sfe01a$:templates$[34],sfm10a$:templates$[35]
    endif

l850: rem --- Run Report

    x$=Translate!.getTranslation("AON_DETAIL")
    if level$="I" x$=Translate!.getTranslation("AON_SUMMARY")
    v=pos(level$="SIL")
    headings$[1]=x$+" "+headings$[1]+" "+desc$[v]

rem --- Remaining print positions

    op[0]=oi[1]
    op[1]=op[0]+4
    op[2]=op[1]+8
    op[3]=op[2]+8
    op[4]=op[3]+9
    op[5]=op[4]+9
    op[7]=op[5]+23
    ol[0]=oi[1]
    ol[1]=ol[0]+4
    ol[2]=ol[1]+3
    ol[3]=ol[2]+3
    ol[4]=ol[3]+max(10,i[0])
    ol[5]=ol[4]+9
    ol[6]=ol[5]+m2
    ol[7]=ol[6]+2
    ol[8]=ol[7]+m3
    og[0]=oi[1]
    og[1]=og[0]+4
    og[2]=oi[9]-m1
    if level$="P" og[2]=op[7]
    if level$="L" og[2]=ol[8]
    tw=min(op[7]-op[5],23)
    gw=og[2]-og[1]-1
    recs=0

rem --- Position file

    x=m0+11
    if aptype x=x+3
    if status goto std_exit
    call pgmdir$ + "adc_progress.aon","N","","","","",0,poe05_dev,1,meter_num,status
    read (poe05_dev,key=firm_id$,dom=*next)

l1000: rem --- Read next header

    k$=key(poe05_dev,end=done)
    if pos(firm_id$=k$)<>1 goto done
    read record (poe05_dev) poe05a$
    x$=fnmask$(poe05a.vendor_id$(1,p[0]),m0$)+" "+poe05a.ap_inv_no$
    if aptype x$=poe05a.ap_type$+" "+x$
    call pgmdir$+"adc_progress.aon","S","","","","",0,0,1,meter_num,status

rem --- Level breaks?

    if poe05a.ap_type$<>t0$ gosub l6000
    if poe05a.vendor_id$<>t1$ gosub l6200

rem --- Additional reads

    dim x0$(32),x1$(4*g[4])
    dim apm10b$:fattr(apm10b$)
    apcode$=poe05a.ap_dist_code$
    find record (apm10b_dev,key=firm_id$+"B"+poe05a.ap_dist_code$,dom=*next) apm10b$
    apacct$=apm10b.gl_ap_acct$(1,g[4])
    retacct$=apm10b.gl_ret_acct$(1,g[4])

rem --- Format invoice fields

    retention$=""
    hold$=Translate!.getTranslation("AON_NO")
    total=0
    if retention retention$=str(poe05a.retention:m1$)
    if poe05a.hold_flag$="Y" hold$=Translate!.getTranslation("AON_YES")

rem --- Print invoice header

    if l+3>l9 gosub report_heading
    dim pbuf$(width)
    OutVect!.addItem(pbuf$)

    dim pbuf$(width)
    pbuf$(oi[0]+1)=vendor$
    pbuf$(oi[1]+1)=poe05a.ap_inv_no$
    pbuf$(oi[2]+1)=poe05a.ap_dist_code$
    pbuf$(oi[3]+1)=poe05a.payment_grp$
    pbuf$(oi[4]+1)=poe05a.ap_terms_code$
    pbuf$(oi[5]+1)=hold$
    pbuf$(oi[6]+1)=fndate$(poe05a.inv_date$)
    pbuf$(oi[7]+1)=fndate$(poe05a.acct_date$)
    pbuf$(oi[8]+1)=poe05a.reference$
    pbuf$(oi[9]+1)=str(poe05a.invoice_amt:m1$)
    pbuf$(oi[10]+1)=str(poe05a.discount_amt:m1$)
    OutVect!.addItem(pbuf$)
    
    dim pbuf$(width)
    pbuf$(oi[6]+1)=fndate$(poe05a.due_date$)
    pbuf$(oi[7]+1)=fndate$(poe05a.po_disc_date$)
    pbuf$(oi[8]+1)=poe05a.ap_inv_memo$
    pbuf$(oi[10]+1)=retention$
    OutVect!.addItem(pbuf$)
    l=l+3
    recs=recs+1
    glskip=0
    if cvs(poe05a.ap_inv_memo$,3)<>"" glskip=1

rem --- Check GL posting date

    gldate$=poe05a.acct_date$
    if gl$="Y" call pgmdir$+"glc_datecheck.aon",gldate$,"N",period$,year$,glstatus
    if glstatus call pgmdir$+"glc_datewarn.aon",printer_dev,gldate$,glstatus,l,errors,status

    if stbl("+DTWARN_MSG",err=*endif)<>""
        dim pbuf$(width)
        pbuf$(1)=stbl("+DTWARN_MSG")
        OutVect!.addItem(pbuf$)
    endif

rem --- Position poe-15 PO Detail

    first=1
    glskip=1
    read (poe15_dev,key=poe05a.firm_id$+poe05a.ap_type$+poe05a.vendor_id$+poe05a.ap_inv_no$,dom=*next)

l2000: rem --- Read next PO record

    k$=key(poe15_dev,end=l3200)
    if pos(poe05a.firm_id$+poe05a.ap_type$+poe05a.vendor_id$+poe05a.ap_inv_no$=k$)<>1 goto l3200
    read record (poe15_dev) poe15a$
    dim receivers[99]
    number=1
    receivers$=poe15a.po_no$+poe15a.receiver_no$
    receivers[1]=poe15a.total_amount
    seq$=poe15a.line_no$
    if cvs(poe15a.po_no$,3)="" goto l2100
    if cvs(poe15a.receiver_no$,3)="" gosub l6500

l2100: rem --- Read history header and original terms

    for receiver=1 to number
        dim c0$(22),c1$(160),c[8],xc$(26),terms$(tw)
        dim pot04a$:fattr(pot04a$)
        dim apm10c$:fattr(apm10c$)
        receipt$=receivers$(((receiver-1)*14)+1,14)
        find record (pot04_dev,key=firm_id$+receipt$,dom=*next) pot04a$
    l2150:
        ordered$=""
        received$=""
        find record (apm10c_dev,key=firm_id$+"C"+pot04a.ap_terms_code$,dom=*next) apm10c$
    l2170:
        terms$(1)=apm10c.terms_codeap$+" "+apm10c.code_desc$
        if cvs(pot04a.ord_date$,3)<>"" ordered$=fndate$(pot04a.ord_date$)
        if cvs(pot04a.recpt_date$,3)<>"" received$=fndate$(pot04a.recpt_date$)
    
        rem --- Print PO detail record
    
        if level$<>"P" goto l2300
        if first gosub l5100
        if l+1>l9 gosub report_heading; gosub l5100
        po$=receipt$(1,7)
        rec$=receipt$(8,7)
        if cvs(po$,2)="" po$=Translate!.getTranslation("AON_OTHER_CHGS"),rec$="",terms$=""
        dim pbuf$(width)
        pbuf$(op[0]+1)=seq$
        pbuf$(op[1]+1)=po$
        pbuf$(op[2]+1)=rec$
        pbuf$(op[3]+1)=ordered$
        pbuf$(op[4]+1)=received$
        pbuf$(op[5]+1)=terms$
        pbuf$(op[7]+1)=str(receivers[receiver]:m1$)
        OutVect!.addItem(pbuf$)
        l=l+1
        recs=recs+1
        first=0
        glskip=1
        seq$=""
    
    l2300: rem --- Position line item file
    
        read (poe25_dev,key=poe05a.firm_id$+poe05a.ap_type$+poe05a.vendor_id$+poe05a.ap_inv_no$,dom=*next)
    
    l2400: rem --- Read next line item
   
        k$=key(poe25_dev,end=l3000)
        if pos(poe05a.firm_id$+poe05a.ap_type$+poe05a.vendor_id$+poe05a.ap_inv_no$=k$)<>1 goto l3000
        read record (poe25_dev) poe25a$
        if poe25a.po_no$<>pot04a.po_no$ goto l2900
        if cvs(pot04a.receiver_no$,3)<>"" if poe25a.receiver_no$<>pot04a.receiver_no$ goto l2900
  
        rem --- Read history detail record and line code
    
        dim l0$(25),l1$(64),l2$(32),l3$(22),l4$(40),l[12],description$(dw)
        qty=poe25a.qty_received
        lc$=poe25a.po_line_code$
        description$(1)=poe25a.order_memo$
        dim pot14a$:fattr(pot14a$)
        find record (pot14_dev,key=firm_id$+poe25a.po_no$+poe25a.receiver_no$+poe25a.po_int_seq_ref$,dom=l2540) pot14a$
        lc$=pot14a.po_line_code$
    l2540:
        if cvs(poe25a.po_no$+poe25a.po_int_seq_ref$+poe25a.receiver_no$,3)="" then qty=1
        precision 2
        extension=poe25a.unit_cost*qty
        poextension=poe25a.receipt_cost*qty
        precision i[1]
        if y0$(1,4)=firm_id$+lc$ goto l2600
        y0$(1)=firm_id$+lc$
        y1$(1)=""
        y2$(1)=""
        if cvs(poe25a.po_no$,3)="" y0$(1)=firm_id$+poe25a.po_line_code$
        find record (pom02_dev,key=y0$,dom=*next) pom02a$
    
    l2600: rem --- Read inventory item and warehouse
    
        dim s0$(22),s1$(60),s2$(64),s3$(40),s4$(21),s6$(g[4]*9),s[12]
        dim u0$(24),u1$(64),u[20]
        dim ivm01a$:fattr(ivm01a$)
        dim ivm02a$:fattr(ivm02a$)
        if pom02a.line_type$<>"S" goto l2700
        s0$(1)=firm_id$+pot14a.item_id$
        u0$(1)=firm_id$+pot14a.warehouse_id$+pot14a.item_id$
        find record (ivm01_dev,key=s0$,dom=*next) ivm01a$
    l2660:
        description$(1)=fnitem$(ivm01a.item_desc$,i[3],i[4],i[5])
        find record (ivm02_dev,key=u0$,dom=*next) ivm02a$
    
    l2700: rem --- Print line item
    
        if level$<>"L" goto l2800
        gosub l5500
    
    l2800: rem --- Generate GL Recap
  
        if gl$="N" goto l2900
        action$=""
        account$=""
        item$[0]=ivm01a$
        item$[1]=s1$;rem not used anymore (sending entire rec)
        item$[6]=s6$;rem not used anymore
        values[0]=extension
        values[1]=poextension
        values[2]=poe25a.qty_received
        values[3]=ivm02a.qty_on_hand
        arcode$=ivm02a.ar_dist_code$
        w$[0]=poe25a$
        w$[1]="";rem not used anymore (sending entire poe25a$ rec in w$[0], used to send w1$ here)
        y$[0]=pom02a$
        y$[1]=y1$;rem not used anymore (sending entire rec)
        y$[2]=y2$;rem not used anymore
        total=total+extension
        gosub l6900
    
    l2900: rem --- Loop back for next line item
   
        goto l2400
    
    l3000: rem --- Loop back for next PO record
    
    next receiver
    goto l2000

l3200: rem --- Position GL distribution file

    dim z0$(23),z1$(32),z[4],s0$(12),s1$(35),g$(gw)
    dim item$[6],values[4],w$[10],y$[10]
    if gl$<>"Y" goto l3800
    first=1
    distribution=0
    arcode$=""
    apcode$=""
    read (poe35_dev,key=poe05a.firm_id$+poe05a.ap_type$+poe05a.vendor_id$+poe05a.ap_inv_no$,dom=*next)

l3300: rem --- Read next GL distribution record

    k$=key(poe35_dev,end=l3600)
    if pos(poe05a.firm_id$+poe05a.ap_type$+poe05a.vendor_id$+poe05a.ap_inv_no$=k$)<>1 goto l3600
    read record (poe35_dev) poe35a$
    find record (glm01_dev,key=firm_id$+poe35a.gl_account$,dom=*next) glm01a$
    g$(1)=fnmask$(glm01a.gl_account$(1,g[3]),glacctmask$)+" "+glm01a.gl_acct_desc$

rem --- Print it

    if first gosub l5300
    if l+1>l9 gosub report_heading; gosub l5300
    dim pbuf$(width)
    pbuf$(og[0]+1)=poe35a.line_no$
    pbuf$(og[1]+1)=g$
    pbuf$(og[2]+1)=str(poe35a.gl_post_amt:m1$)
    OutVect!.addItem(pbuf$)
    l=l+1
    recs=recs+1
    first=0
    glskip=1

rem --- Generate GL recap postings and loop back for next record

    account$=glm01a.gl_account$
    amount=-poe35a.gl_post_amt
    values[0]=amount
    w$[0]=poe35a$
    w$[1]="";rem not used anymore (sending entire poe35a$ record in w$[0], used to send z1$ here)
    action$="D"
    distribution=distribution+amount
    total=total+poe35a.gl_post_amt
    gosub l6900
    goto l3300

l3600: rem --- Generate any additional GL recap postings for the invoice

    if distribution=0 goto l3700
    action$="D"
    account$=apacct$
    values[0]=-distribution
    w$[0]=poe05a.firm_id$+poe05a.ap_type$+poe05a.vendor_id$+poe05a.ap_inv_no$;rem used to be a0$
    gosub l6900

l3700: rem --- Does GL total match invoice header?

    if total=poe05a.invoice_amt goto l3900
    if l+1>l9 gosub report_heading
    dim pbuf$(width)
    pbuf$(1)=Translate!.getTranslation("AON_--->_ERROR:_INVOICE_TOTAL_DOES_NOT_MATCH_SUM_OF_LINE_ITEMS_AND/OR_DISTRIBUTION")
    OutVect!.addItem(pbuf$)
    l=l+1
    errors=errors+1
l3800:

l3900: rem --- Loop back for next header

    totals[0]=1
    totals[1]=poe05a.invoice_amt
    totals[2]=poe05a.discount_amt
    totals[3]=poe05a.retention
    type[all]=type[all]+totals[all]
    vendor[all]=vendor[all]+totals[all]
    report[all]=report[all]+totals[all]
    goto l1000

done: rem --- All done

    if recs=0
        msg_id$="DOC_OUTPUT_NODATA"
        gosub disp_message
        goto std_exit_no_report
    endif

    done=1
    gosub l6000
    if l+3>l9 gosub report_heading
    print (printer_dev)""
    total$=Translate!.getTranslation("AON_REGISTER")
    totals[all]=report[all]
    gosub l6800
    run pgmdir$+"por_invreg_o1.aon"

report_heading: rem --- Report Heading

    l=headings+3
rem    call pgmdir$+"adc_rpthead.aon",printer_dev,headings$[all],headings,page,width,when$,clock$,status
rem    if status exitto std_exit

    HdrVect!.addItem("")
    BrkVect!.addItem(str(OutVect!.size()))
    dim pbuf$(width)
    pbuf$(oi[2]+1)=Translate!.getTranslation("AON_DIST")
    pbuf$(oi[3]+1)=Translate!.getTranslation("AON_PAY")
    pbuf$(oi[6]+1)=Translate!.getTranslation("AON_INV_DATE")
    pbuf$(oi[7]+1)=Translate!.getTranslation("AON_ACCT_DATE")
    pbuf$(oi[8]+1)=Translate!.getTranslation("AON_REF/")
    pbuf$(oi[9]+m1-8+1)=Translate!.getTranslation("AON_INVOICE")
    pbuf$(oi[10]+m1-(len(rh1$)+1)+1)=rh1$
    OutVect!.addItem(pbuf$)

    dim pbuf$(width)
    pbuf$(oi[0]+1)=Translate!.getTranslation("AON_VENDOR")
    pbuf$(oi[1]+1)=Translate!.getTranslation("AON_INVOICE")
    pbuf$(oi[2]+1)=Translate!.getTranslation("AON_CODE")
    pbuf$(oi[3]+1)=Translate!.getTranslation("AON_GRP")
    pbuf$(oi[4]+1)=Translate!.getTranslation("AON_TERMS")
    pbuf$(oi[5]+1)=Translate!.getTranslation("AON_HOLD")
    pbuf$(oi[6]+1)=Translate!.getTranslation("AON_DUE_DATE")
    pbuf$(oi[7]+1)=Translate!.getTranslation("AON_DISC_DATE")
    pbuf$(oi[8]+1)=Translate!.getTranslation("AON_MEMO")
    pbuf$(oi[9]+m1-8+1)=Translate!.getTranslation("AON_AMOUNT")
    pbuf$(oi[10]+m1-(len(rh1$)+1)+1)=rh2$
    OutVect!.addItem(pbuf$)
    return

l5100: rem --- Purchase Order Subheading

    if l+3>l9 gosub report_heading

    dim pbuf$(width)
    OutVect!.addItem(pbuf$)
 
    dim pbuf$(width)
    pbuf$(op[0]+1)=Translate!.getTranslation("AON_SEQ")
    pbuf$(op[1]+1)="PO #"
    pbuf$(op[2]+1)=Translate!.getTranslation("AON_REC_#")
    pbuf$(op[3]+1)=Translate!.getTranslation("AON_ORDERED")
    pbuf$(op[4]+1)=Translate!.getTranslation("AON_RECEIVED")
    pbuf$(op[5]+1)=Translate!.getTranslation("AON_ORIGINAL_TERMS")
    pbuf$(op[7]+m1-6+1)=Translate!.getTranslation("AON_TOTAL")
    OutVect!.addItem(pbuf$)
    l=l+2
    return

l5200: rem --- Line Item Subheading

    if l+5>l9 gosub report_heading

    dim pbuf$(width)
    OutVect!.addItem(pbuf$)

    dim pbuf$(width)
    pbuf$(ol[0]+1)=Translate!.getTranslation("AON_SEQ")
    pbuf$(ol[1]+1)=Translate!.getTranslation("AON_CD")
    pbuf$(ol[2]+1)=Translate!.getTranslation("AON_WH")
    pbuf$(ol[3]+1)=Translate!.getTranslation("AON_ITEM")
    pbuf$(ol[4]+1)=Translate!.getTranslation("AON_RECEIVED")
    pbuf$(ol[5]+m2-9+1)=Translate!.getTranslation("AON_QUANTITY")
    pbuf$(ol[6]+1)="UM"
    pbuf$(ol[7]+m3-5+1)=Translate!.getTranslation("AON_COST")
    pbuf$(ol[8]+m1-10+1)=Translate!.getTranslation("AON_EXTENSION")
    OutVect!.addItem(pbuf$)
    l=l+2
    return

l5300: rem --- GL Distribution Subheading

    needed=2+glskip
    if l+needed>l9 gosub report_heading
    if glskip 
        dim pbuf$(width)
        OutVect!.addItem(pbuf$)
    endif
    
    dim pbuf$(width)
    pbuf$(og[0]+1)=Translate!.getTranslation("AON_SEQ")
    pbuf$(og[1]+1)=Translate!.getTranslation("AON_GL_ACCOUNT")
    pbuf$(og[2]+m1-7+1)=Translate!.getTranslation("AON_AMOUNT")
    OutVect!.addItem(pbuf$)
    l=l+1+glskip
    return

l5500: rem --- Print detail line based on line type

    if first gosub l5200
    if l+3>l9 gosub report_heading; gosub l5200
    dim pbuf$(width)
    pbuf$(ol[0]+1)=poe25a.line_no$
    pbuf$(ol[1]+1)=pom02a.po_line_code$
    pbuf$(ol[2]+1)=pot14a.warehouse_id$
    on pos(pom02a.line_type$="SNVMO") goto l5990,l5600,l5700,l5990,l5990,l5800

l5600: rem --- Display Standard Line

    pbuf$(ol[3]+1)=pot14a.item_id$(1,i[0])
    pbuf$(ol[4]+1)=received$
    pbuf$(ol[5]+1)=str(poe25a.qty_received:m2$)
    pbuf$(ol[6]+1)=pot14a.unit_measure$
    pbuf$(ol[7]+1)=str(poe25a.unit_cost:m3$)
    pbuf$(ol[8]+1)=str(extension:m1$)
    OutVect!.addItem(pbuf$)
    recs=recs+1
    goto l5900

l5700: rem --- Display Non-Stock Line

    pbuf$(ol[3]+1)=pot14a.item_id$(1,i[0])
    pbuf$(ol[4]+1)=received$
    pbuf$(ol[5]+1)=str(poe25a.qty_received:m2$)
    pbuf$(ol[6]+1)=pot14a.unit_measure$
    pbuf$(ol[7]+1)=str(poe25a.unit_cost:m3$)
    pbuf$(ol[8]+1)=str(extension:m1$)
    OutVect!.addItem(pbuf$)
    recs=recs+1
    goto l5900

l5800: rem --- Display Other Line

    pbuf$(ol[4]+1)=received$
    pbuf$(ol[7]+1)=str(poe25a.unit_cost:m3$)
    pbuf$(ol[8]+1)=str(extension:m1$)
    OutVect!.addItem(pbuf$)
    recs=recs+1

l5900: rem --- Display PO and Receiver
    
    dim pbuf$(width)
    pbuf$(ol[3]+1)=description$
    OutVect!.addItem(pbuf$)
    let l=l+2,first=0
    if cvs(poe25a.po_no$,3)="" goto l5990
    dim pbuf$(width)
    rem --- taking out isn; pbuf$(ol[3]+1)="PO # "+poe25a.po_no$+"-"+poe25a.po_int_seq_ref$+Translate!.getTranslation("AON__REC_#_")+poe25a.receiver_no$
    pbuf$(ol[3]+1)="PO # "+poe25a.po_no$+ Translate!.getTranslation("AON__REC_#_")+poe25a.receiver_no$
    OutVect!.addItem(pbuf$)
    let l=l+1
    recs=recs+1
l5990:
    return

l6000: rem --- AP Type Break

    if t0$="" goto l6100
    gosub l6200
    let total$=Translate!.getTranslation("AON_AP_TYPE_")+t0$+" "+cvs(apm10a.code_desc$,3),totals[all]=type[all]
    if type[0]<>0 gosub l6800
l6100:
    if done goto l6190
    dim xa$(32),type[3]
    if aptype=0 goto l6190
    let t0$=poe05a.ap_type$,xa$(6,20)=nf$,l=l9+1,warehouse=0
    find record (apm10a_dev,key=firm_id$+"A"+t0$,dom=*next) apm10a$
    HdrVect!.addItem(Translate!.getTranslation("AON_FOR_AP_TYPE_")+t0$+" "+cvs(apm10a.code_desc$,3))
    BrkVect!.addItem(str(OutVect!.size()))
l6190:
    return

l6200: rem --- Vendor Break

    if t1$="" goto l6300
    let total$=Translate!.getTranslation("AON_VENDOR_")+vendor$,totals[all]=vendor[all]
    if vendor[0]<>0 gosub l6800
l6300:
    if done goto l6390
    dim b0$(8),b1$(30),vendor$(dw),vendor[3]
    let t1$=poe05a.vendor_id$,b0$(1)=firm_id$+t1$,b1$(1)=nf$
    find record (apm01_dev,key=firm_id$+t1$,dom=*next) apm01a$
    let vendor$(1)=fnmask$(apm01a.vendor_id$(1,p[0]),m0$)+" "+apm01a.vendor_name$
l6390:
    return

l6500: rem --- Find all receivers for a PO

    dim receivers[99]
    let number=0,receivers$=""
    read (poe25_dev,key=poe05a.firm_id$+poe05a.ap_type$+poe05a.vendor_id$+poe05a.ap_inv_no$,dom=*next)

l6600: rem --- Read next detail line

    let k$=key(poe25_dev,end=l6700)
    if pos(poe05a.firm_id$+poe05a.ap_type$+poe05a.vendor_id$+poe05a.ap_inv_no$=k$)<>1 goto l6700
    read record (poe25_dev) poe25a$
    if poe25a.po_no$<>poe15a.po_no$ goto l6600
    let x=pos(poe25a.po_no$+poe25a.receiver_no$=receivers$,14),x=x/14
    if x goto l6670
    let number=number+1,x=number,receivers$=receivers$+poe25a.po_no$+poe25a.receiver_no$
l6670:
    precision 2
    let receivers[number]=receivers[number]+round(poe25a.unit_cost*poe25a.qty_received,2)
    precision i[1]
    goto l6600

l6700: rem --- Done finding all receivers

    return

l6800: rem --- Print total line

    let needed=1
    if retention needed=2
    if l+needed>l9 gosub report_heading
    let l=l+needed,total$=Translate!.getTranslation("AON_TOTAL_FOR_")+cvs(total$,2)
    dim pbuf$(width)
    pbuf$(oi[9]-len(total$)+1)=total$
    pbuf$(oi[9]+1)=str(totals[1]:m1$)
    pbuf$(oi[10]+1)=str(totals[2]:m1$)
    OutVect!.addItem(pbuf$)

    if retention
        dim pbuf$(width)
        pbuf$(oi[10]+1)=str(totals[3]:m1$)
        OutVect!.addItem(pbuf$)
    endif
    return

l6900: rem --- Call GL Posting Routine

    let glfiles[1]=glm01_dev,glfiles[2]=glw11_dev,glfiles[3]=xref_dev
    let glfiles[4]=apm10b_dev,glfiles[5]=arm10d_dev,glparams$[0]=firm_id$
    let glparams$[1]=apcode$,glparams$[2]=arcode$,glparams$[3]=distcode$
    let glparams$[4]=gldate$,glparams$[5]=apm01a.vendor_id$(1,p[0]),glparams$[6]=apm01a.vendor_name$
    let glparams$[7]=m0$,glparams$[8]=gls01a$,glparams$[9]=ivs01a.cost_method$
    let glparams$[10]=account$,glparams[0]=i[0],glparams[1]=i[1]
    let glparams[2]=g[4],glparams[3]=i[3],glparams[4]=i[4],glparams[5]=i[5]
    dim glaccounts$[5],glamounts[5],glqtys[5]
    let tpls$[1]=fattr(ivm01a$),tpls$[2]=fattr(poe25a$),tpls$[3]=fattr(pom02a$),tpls$[4]=fattr(gls01a$),tpls$[5]=fattr(poe35a$),tpls$[6]=fattr(arm10d$),tpls$[7]=fattr(apm10b$)
    call pgmdir$+"poc_invglpost.aon",action$,glfiles[all],glparams$[all],glparams[all],item$[all],w$[all],y$[all],values[all],glaccounts$[all],tpls$[all],glamounts[all],glqtys[all],status
    return

rem #include std_functions.src
rem --- Standard AddonSoftware functions (01Mar2006)
rem --- Functions used to retrieve form values

    def fnstr_pos(q0$,q1$,q1)=int((pos(q0$=q1$,q1)+q1-1)/q1)
    def fnget_rec_date$(q0$)=rd_rec_data$[fnstr_pos(cvs(q0$,1+2+4)+"."+
:                            cvs(q0$,1+2+4),rd_rec_data$[0,0],40),0]
    def fnget_fld_data$(q0$,q1$)=cvs(rd_rec_data$[fnstr_pos(cvs(q0$,1+2+4)+"."+
:                                cvs(q1$,1+2+4),rd_rec_data$[0,0],40),0],2)
    def fnget_table$(q0$)=rd_alias_id$

rem --- Miscellaneous functions

    def fncenter(q$,q)=int((q-len(q$))/2)

rem --- Format inventory item description

    def fnitem$(q$,q1,q2,q3)=cvs(q$(1,q1)+" "+q$(q1+1,q2)+" "+q$(q1+q2+1,q3),32)

rem --- Format zip/postal code

    def fnzipcode$(q$)
        q$=cvs(q$,4)
        if len(cvs(q$,2))<>9 and len(cvs(q$,2))<>6 return q$
        if len(cvs(q$,2))=9
            q1$="[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]"
            q1=mask(cvs(q$,2),q1$)
            if q1=0 return q$
            if q1<>0
                if q$(6,4)="0000" return q$(1,5)
            return q$(1,5)+"-"+q$(6,4)
            endif
        endif
        if len(cvs(q$,2))=6
            q1$="[a-zA-Z][0-9][a-zA-Z][0-9][a-zA-Z][0-9]"
            q1=mask(cvs(q$,2),q1$)
            if q1=0 return q$ else return q$(1,3)+" "+q$(4,3)
        endif
    fnend

rem --- Date/time handling functions

    def fndate$(q$)
        q1$=""
        q1$=date(jul(num(q$(1,4)),num(q$(5,2)),num(q$(7,2)),err=*next),err=*next)
        if q1$="" q1$=q$
        return q1$
    fnend
    def fnyy$(q$)=q$(3,2)
    def fnclock$(q$)=date(0:"%hz:%mz %p")
    def fntime$(q$)=date(0:"%Hz%mz")

rem --- fnmask$: Alphanumeric Masking Function (formerly fnf$)

    def fnmask$(q1$,q2$)
        if q2$="" q2$=fill(len(q1$),"0")
        return str(-num(q1$,err=*next):q2$,err=*next)
        q=1
        q0=0
        while len(q2$(q))
              if pos(q2$(q,1)="-()") q0=q0+1 else q2$(q,1)="X"
              q=q+1
        wend
        if len(q1$)>len(q2$)-q0 q1$=q1$(1,len(q2$)-q0)
        return str(q1$:q2$)
    fnend

rem --- fnbasename$: Strip path and optionally the suffix from a file name

    def fnbasename$(q$,q0$)
        q=max(pos("/"=q$,-1),pos(":"=q$,-1),pos(">"=q$,-1),pos("\"=q$,-1))
        if q then q$=q$(q+1)
        if q0$<>"" then q=mask(q$,q0$); if q q$=q$(1,q-1)
    return q$

rem --- fnglobal: Return numeric value of passed stbl variable

    def fnglobal(q$,q1)
        q1$=stbl(q$,err=*next),q1=num(q1$,err=*next)
        return q1
    fnend

rem --- fnglobal$: Return string value of passed STBL variable

    def fnglobal$(q$,q1$)
        q1$=stbl(q$,err=*next)
        return q1$
    fnend

rem #endinclude std_functions.src

rem #include disp_message.src

disp_message:rem --- Display Message Dialog

    call stbl("+DIR_SYP")+"bac_message.bbj",msg_id$,msg_tokens$[all],msg_opt$,table_chans$[all]
    return

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    call stbl("+DIR_SYP")+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5)),
:                                str(err),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src

rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5)),
:                                   str(err),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    run stbl("+DIR_SYP")+"bas_process_end.bbj",err=*next
    release
rem #endinclude std_end.src

std_exit_no_report:

    call pgmdir$+"adc_progress.aon","D","","","","",0,0,0,0,status    
    OutVect!=null()
    goto std_exit

    end
