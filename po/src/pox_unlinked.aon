rem --- Remove Unlinked PO Detail Lines
rem --- Program pox_ba v8.0.0 06Jul2007 (pox_ba)
rem --- Created by adx_codeport.bbx v1.1.5 (07/06/2007 02:47:10)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright BASIS International Ltd.  All Rights Reserved.
rem --- All Rights Reserved

    seterr std_error
    setesc std_error

rem --- Retrieve the program path

    pgmdir$=stbl("+DIR_PGM",err=*next)

rem --- Retrieve sysinfo data

    rem --- If BUI, initialize Barista processes
    if info(3,6)="5" then
        use ::ado_util.src::util
        Translate!=util.initBUIProcess()
        if Translate!=null() then goto std_exit
    endif

    sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=*next)
    milestone=num(stbl("+MILESTONE",err=*next),err=*next)
    firm_id$=sysinfo.firm_id$

rem --- set rd_alias_id$, if needed, for DocOut Settings
    
    if rd_alias_id$=""
        rd_alias_id$=pgm(-2)
        rd_alias_id$=rd_alias_id$(max(pos("/"="/"+rd_alias_id$,-1),pos("\"="\"+rd_alias_id$,-1)))
        rd_alias_id$=rd_alias_id$(1,pos("."=rd_alias_id$+".")-1)
    endif

rem --- Get user approval to proceed

        msg_id$="AON_RUN_QUERY"
        dim x$:stbl("+SYSINFO_TPL")
        dim msg_tokens$[1]
        x$=stbl("+SYSINFO")                                                            
        msg_tokens$[1]=x.task_desc$
        gosub disp_message
        if msg_opt$<>"Y" then goto std_exit_no_update

rem --- Open/Lock files

    files=13,begfile=1,endfile=files
    dim files$[files],options$[files],ids$[files],templates$[files],channels[files]
    files$[2]="poe-01",ids$[2]="POE_REQHDR"
    files$[3]="poe-02",ids$[3]="POE_POHDR"
    files$[4]="poe-03",ids$[4]="POE_QAHDR"
    files$[5]="poe-04",ids$[5]="POE_RECHDR"
    files$[6]="poe-11",ids$[6]="POE_REQDET"
    files$[7]="poe-12",ids$[7]="POE_PODET"
    files$[8]="poe-13",ids$[8]="POE_QADET"
    files$[9]="poe-14",ids$[9]="POE_RECDET"
    files$[10]="poe-23",ids$[10]="POE_QALSDET"
    files$[11]="poe-24",ids$[11]="POE_RECLSDET"
    files$[12]="aps_params",ids$[12]="APS_PARAMS"
    files$[13]="ivs_params",ids$[13]="IVS_PARAMS"

    call pgmdir$+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],
:                                   ids$[all],templates$[all],channels[all],batch,status
    if status goto std_exit_no_update
    
    poe01_dev=channels[2]
    poe02_dev=channels[3]
    poe03_dev=channels[4]
    poe04_dev=channels[5]
    poe11_dev=channels[6]
    poe12_dev=channels[7]
    poe13_dev=channels[8]
    poe14_dev=channels[9]
    poe23_dev=channels[10]
    poe24_dev=channels[11]
    aps01a_dev=channels[12]
    ivs01a_dev=channels[13]

rem --- Dimension string templates

    dim poe01a$:templates$[2],poe02a$:templates$[3],poe03a$:templates$[4],
:       poe04a$:templates$[5],poe11a$:templates$[6],poe12a$:templates$[7],
:       poe13a$:templates$[8],poe14a$:templates$[9],poe23a$:templates$[10],
:       poe24a$:templates$[11],aps01a$:templates$[12],ivs01a$:templates$[13]

rem --- Retrieve parameter records

    aps01a_key$=firm_id$+"AP00"
    find record (aps01a_dev,key=aps01a_key$,err=std_missing_params) aps01a$
    ivs01a_key$=firm_id$+"IV00"
    find record (ivs01a_dev,key=ivs01a_key$,err=std_missing_params) ivs01a$

    call pgmdir$+"adc_progress.aon","N","","","","",0,0,1,meter_num,status
    more=1

rem --- Requisitions

    receipt=0
    x$=Translate!.getTranslation("AON_REQUISITIONS")
    type$="R"
    header_dev=poe01_dev
    detail_dev=poe11_dev
    call stbl("+DIR_SYP")+"bac_key_template.bbj","POE_REQHDR","PRIMARY",poe01_key_tpl$,rd_table_chans$[all],status$
    dim detail_key$:poe01_key_tpl$
    gosub check_detail

rem --- Purchase Orders

    receipt=0
    x$=Translate!.getTranslation("AON_PURCHASE_ORDERS")
    type$="O"
    header_dev=poe02_dev
    detail_dev=poe12_dev
    call stbl("+DIR_SYP")+"bac_key_template.bbj","POE_POHDR","PRIMARY",poe02_key_tpl$,rd_table_chans$[all],status$
    dim detail_key$:poe02_key_tpl$
    gosub check_detail

rem --- QA Receipts

    receipt=1
    x$=Translate!.getTranslation("AON_QUALITY_ASSURANCE_RECEIPTS")
    type$="Q"
    header_dev=poe03_dev
    detail_dev=poe13_dev
    call stbl("+DIR_SYP")+"bac_key_template.bbj","POE_QAHDR","PRIMARY",poe03_key_tpl$,rd_table_chans$[all],status$
    dim detail_key$:poe03_key_tpl$
    gosub check_detail

rem --- QA Receipts Lot/Serial Detail

    receipt=1
    x$=Translate!.getTranslation("AON_QUALITY_ASSURANCE_LOT/SERIAL_DETAIL")
    type$="q"
    header_dev=poe03_dev
    detail_dev=poe23_dev
    call stbl("+DIR_SYP")+"bac_key_template.bbj","POE_QAHDR","PRIMARY",poe03_key_tpl$,rd_table_chans$[all],status$
    dim detail_key$:poe03_key_tpl$
    gosub check_detail

rem --- PO Receipts

    receipt=1
    x$=Translate!.getTranslation("AON_PURCHASE_ORDER_RECEIPTS")
    type$="C"
    header_dev=poe04_dev
    detail_dev=poe14_dev
    call stbl("+DIR_SYP")+"bac_key_template.bbj","POE_RECHDR","PRIMARY",poe04_key_tpl$,rd_table_chans$[all],status$
    dim detail_key$:poe04_key_tpl$
    gosub check_detail
    
rem --- PO Receipts Lot/Serial Detail

    receipt=1
    x$=Translate!.getTranslation("AON_PURCHASE_ORDER_RECEIPTS_LOT/SERIAL")
    type$="c"
    header_dev=poe04_dev
    detail_dev=poe14_dev
    call stbl("+DIR_SYP")+"bac_key_template.bbj","POE_RECHDR","PRIMARY",poe04_key_tpl$,rd_table_chans$[all],status$
    dim detail_key$:poe04_key_tpl$
    gosub check_detail
    

done: rem --- All done

    goto std_exit

check_detail: rem --- Check for unlinked detail lines

    read (detail_dev,key=firm_id$,dom=*next)

rem --- Read next detail

    while more

        detail_key$=key(detail_dev,end=*break)
        if detail_key.firm_id$<>firm_id$ then break
        hdr_key$=""
        read (detail_dev)
        call pgmdir$+"adc_progress.aon","S","","","","",0,0,1,meter_num,status

        switch pos(type$="ROQqCc")
            case 1;rem Requisition
                hdr_key$=detail_key.firm_id$+detail_key.req_no$
            break
            case 2;rem PO
                hdr_key$=detail_key.firm_id$+detail_key.po_no$
            break
            case 3;rem QA receipt hdr
                hdr_key$=detail_key.firm_id$+detail_key.receiver_no$+detail_key.po_no$
            break
            case 4;rem QA receipt lot/serial
                hdr_key$=detail_key.firm_id$+detail_key.receiver_no$+detail_key.po_no$
            break
            case 5;rem Receipt
                hdr_key$=detail_key.firm_id$+detail_key.receiver_no$
            break
            case 6;rem Receipt lot/serial
                hdr_key$=detail_key.firm_id$+detail_key.receiver_no$
            break       
        swend
        find (header_dev,key=hdr_key$,dom=remove_detail)
        continue

remove_detail: rem --- Remove unlinked detail line
        remove (detail_dev,key=detail_key$)

    wend

rem --- Done with current file set
    return
    
disp_message:rem --- Display Message Dialog

    call stbl("+DIR_SYP")+"bac_message.bbj",msg_id$,msg_tokens$[all],msg_opt$,table_chans$[all]
    return
    

rem #include std_functions.src
rem --- Standard AddonSoftware functions (01Mar2006)
rem --- Functions used to retrieve form values

    def fnstr_pos(q0$,q1$,q1)=int((pos(q0$=q1$,q1)+q1-1)/q1)
    def fnget_fld_data$(q0$,q1$)=cvs(rd_rec_data$[fnstr_pos(cvs(q0$,1+2+4)+"."+
:                                cvs(q1$,1+2+4),rd_rec_data$[0,0],40),0],2)
    def fnget_table$(q0$)=rd_alias_id$

rem #endinclude std_functions.src

rem #include std_error.src

std_error: rem --- Standard error handler (11Oct2017)

    if tcb(19)>0
        rem --- Escape handler
        if and(chr(tcb(19)),$08$)=$08$
            release
        else
            setesc std_error
            return
        endif
    endif

    if err=0   
        rem --- Get tcb(12) and tcb(10) to send into bac_error
        lock_byte=tcb(10)
        lock_chan=tcb(12)  
    endif

    rd_err_text$="",err_num=err
    if tcb(2)=0 and tcb(5) then rd_err_text$=pgm(tcb(5),tcb(13),err=*next)
    if err_num=252 then
        E!=BBjAPI().getLastBBjException()
        rd_err_text$=rd_err_text$+$0A$+E!.getClass().getName()
        if E!.getMessage()<>null() then rd_err_text$=rd_err_text$+": "+E!.getMessage()
    endif
    call stbl("+DIR_SYP")+"bac_error.bbj",pgm(-2),str(tcb(5)),str(err_num),rd_err_text$,rd_err_act$,lock_byte,lock_chan
    if pos("ESCAPE"=rd_err_act$) seterr 0; setesc 0
    if pos("RETRY"=rd_err_act$) retry
    if pgm(-1)<>pgm(-2) status=999; exit 
    release

rem #endinclude std_error.src

rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:                                   str(err:"000"),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    msg_id$="UPDATE_COMPLETE"
    dim msg_tokens$[1]
    msg_opt$=""
    gosub disp_message

std_exit_no_update:

    call pgmdir$+"adc_progress.aon","D","","","","",0,0,0,meter_num,status
    run stbl("+DIR_SYP")+"bas_process_end.bbj",err=*next
    release
rem #endinclude std_end.src

    end
