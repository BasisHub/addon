rem --- Update Work Order Material/Subcontract Lines
rem --- Program poc_wa v8.0.0 19Dec2007 (poc_wa)
rem --- Created by c:\codeport_bbj\adx_codeport.bbj v1.1.5 (12/19/2007 03:25:46)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright (c) 1981-2007 AddonSoftware
rem --- All Rights Reserved



                seterr std_error
                setesc std_error
                enter sfe22_dev,sfe32_dev,firm_id$,po$,type$,y1$,oldwo$,newwo$,places,status

rem --- Retrieve the program path

                pgmdir$=stbl("+dir_pgm",err=*next)

rem --- Retrieve sysinfo data

                sysinfo_template$=stbl("+sysinfo_tpl",err=*next)
                dim sysinfo$:sysinfo_template$
                sysinfo$=stbl("+sysinfo",err=*next)
                milestone=num(stbl("+milestone",err=*next),err=*next)
                firm_id$=sysinfo.firm_id$

rem --- Open/Lock files

                files=4,begfile=1,endfile=files
                dim files$[files],options$[files],ids$[files],templates$[files],channels[files]
                files$[1]="aps_params",ids$[1]="APS_PARAMS"
                files$[2]="ivs_params",ids$[2]="IVS_PARAMS"
                files$[3]="sfe-22",ids$[3]="SFE_WOMATL"
                files$[4]="sfe-32",ids$[4]="SFE_WOSUBCNT"
                call pgmdir$+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],
:                                   ids$[all],templates$[all],channels[all],batch,status
                if status goto std_exit
                aps01a_dev=channels[1]
                ivs01a_dev=channels[2]
                sfe22_dev=channels[3]
                sfe32_dev=channels[4]

rem --- Dimension string templates

                dim aps01a$:templates$[1],ivs01a$:templates$[2],sfe22a$:templates$[3],
:               sfe32a$:templates$[4]

rem --- Retrieve parameter records

                aps01a_key$=firm_id$+"AP00"
                find record (aps01a_dev,key=aps01a_key$,err=std_missing_params) aps01a$
                ivs01a_key$=firm_id$+"IV00"
                find record (ivs01a_dev,key=ivs01a_key$,err=std_missing_params) ivs01a$

rem --- Initializations

                precision places
                if newwo$="" then let newwo$=fill(10)

rem --- Branch based on line code

                if y1$(21,1)<>"N" then 

rem --- Remove link to work order materials line

                        if oldwo$<>newwo$ then 
                                sfe22a.firm_id$=firm_id$
                                sfe22a.wo_location$=" "
                                sfe22a.wo_no$=oldwo$(1,7)
                                sfe22a.record_id_b$="B"
                                sfe22a.material_seq$=oldwo$(8,3)
                                find record (sfe22_dev,key=sfe22a.firm_id$+sfe22a.wo_location$+sfe22a.wo_no$+sfe22a.record_id_b$+sfe22a.material_seq$,dom=order_material) sfe22a$
                                   sfe22a.po_no$=""
                                   sfe22a.po_line_no$=""
                                   sfe22a.po_status$=""
                                write record (sfe22_dev,key=sfe22a.firm_id$+sfe22a.wo_location$+sfe22a.wo_no$+sfe22a.record_id_b$+sfe22a.material_seq$) sfe22a$
                        endif  

order_material: rem --- Add link to work order materials line


                    sfe22a.firm_id$=firm_id$
                    sfe22a.wo_location$=" "
                    sfe22a.wo_no$=oldwo$(1,7)
                    sfe22a.record_id_b$="B"
                    sfe22a.material_seq$=oldwo$(8,3)                    
                    find record (sfe22_dev,key=sfe22a.firm_id$+sfe22a.wo_location$+sfe22a.wo_no$+sfe22a.record_id_b$+sfe22a.material_seq$,dom=done) sfe22a$
                    sfe22a.po_no$=po$
                    sfe22a.po_line_no$=po$
                    sfe22a.po_status$=type$
                    write record (sfe22_dev,key=sfe22a.firm_id$+sfe22a.wo_location$+sfe22a.wo_no$+sfe22a.record_id_b$+sfe22a.material_seq$) sfe22a$
                    goto std_exit

                endif
sub_contract: rem --- Remove link to work order subcontract line

                if oldwo$<>newwo$ then 
                        sfe32a.firm_id$=firm_id$
                        sfe32a.wo_location$=" "
                        sfe32a.wo_no$=oldwo$(1,7)
                        sfe32a.record_id_c$="C"
                        sfe32a.subcont_seq$=oldwo$(8,3)
                        find record (sfe32_dev,key=sfe32a.firm_id$+sfe32a.wo_location$+sfe32a.wo_no$+sfe32a.record_id_c$+sfe32a.subcont_seq$,dom=sub_contract2) sfe32a$
                        sfe32a.po_no$=""
                        sfe32a.po_line_no$=""
                        sfe32a.po_status$=""
                        write record (sfe32_dev,key=sfe32a.firm_id$+sfe32a.wo_location$+sfe32a.wo_no$+sfe32a.record_id_c$+sfe32a.subcont_seq$) sfe32a$
                endif        

sub_contract2: rem --- Add line to work order subcontract line


                        sfe32a.firm_id$=firm_id$
                        sfe32a.wo_location$=" "
                        sfe32a.wo_no$=oldwo$(1,7)
                        sfe32a.record_id_c$="C"
                        sfe32a.subcont_seq$=oldwo$(8,3)
                find record (sfe32_dev,key=sfe32a.firm_id$+sfe32a.wo_location$+sfe32a.wo_no$+sfe32a.record_id_c$+sfe32a.subcont_seq$,dom=done) sfe32a$
                rem a1$(43,10)=po$
                sfe32a.PO_NO$=po$(1,7)
                sfe32a.PO_LINE_NO$=po$(8,3)
                sfd32a.PO_STATUS$=type$
                write record (sfe32_dev,key=sfe32a.firm_id$+sfe32a.wo_location$+sfe32a.wo_no$+sfe32a.record_id_c$+sfe32a.subcont_seq$) sfe32a$

done: rem --- All done

                goto std_exit

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    call stbl("+DIR_SYP")+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:                                str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src
rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:                                   str(err:"000"),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_exit.src

std_exit: rem --- Standard called program exit (01Mar2006)

    exit

rem #endinclude std_exit.src

    end
