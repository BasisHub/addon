rem --- Purchase Order Receipt Register (Stock Receipts Overlay)
rem --- Program por_recptreg v8.0.0 17Jul2007 (por_db)
rem --- Created by adx_codeport.bbx v1.1.5 (07/17/2007 12:47:07)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright (c) 1981-2007 AddonSoftware
rem --- All Rights Reserved

    seterr std_error
    setesc std_error

rem --- Retrieve the program path

    pgmdir$=stbl("+DIR_PGM",err=*next)

rem --- Retrieve sysinfo data

    sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=*next)
    milestone=num(stbl("+MILESTONE",err=*next),err=*next)
    firm_id$=sysinfo.firm_id$

rem --- Initializations

    precision num(ivs01a.precision$)
    dim x0$(32)
    headings=3
    headings$[2]="Stock Inventory Receipts"
    avail=width-70
    x=2
    m=max(m0,6)
    nonstock=0
    more=1

rem --- Report initializations and print positions

    gosub report_init
    o[0]=0
    o[12]=width-5
    o[11]=o[12]-12
    o[10]=o[11]-8
    o[9]=o[10]-m-1
    o[8]=o[9]-11
    o[7]=o[8]-m1
    o[6]=o[7]-m3
    o[5]=o[6]-m1
    o[4]=o[5]-m3
    o[3]=o[4]-m2
    o[2]=o[3]-3
    o[1]=o[2]-5

rem --- Background

    call pgmdir$+"adc_progress.aon","S","","","","",0,poe04a_dev,1,meter_num,ignore_status

rem --- Position files

    read (pow04_dev,key=firm_id$,dom=*next)

    while more; rem --- Get next sort record

        pow04a_key$=key(pow04_dev,end=*break)
        if pos(firm_id$=pow04a_key$)<>1 break
        read (pow04_dev)
        call pgmdir$+"adc_progress.aon","S","","","","",0,poe04a_dev,1,meter_num,ignore_status

rem --- Level breaks?

        if t0$<>pow04a.warehouse_id$ gosub warehouse_brk
        if t1$<>pow04a.recpt_date$ gosub recpt_date_brk
        if subhead$<>"" gosub subhead

rem --- Read receipt header and detail

        poe04a.firm_id$=pow04a.firm_id$+pow04a.vendor_id$
        poe14a.firm_id$=pow04a.firm_id$+pow04a.vendor_id$
        gosub read_recpt_header
        if status continue

rem --- Calculate extension

        precision 2
        po_extension=poe14a.unit_cost*poe14a.qty_received
        iv_extension=ivm02a.unit_cost*poe14a.qty_received*poe14a.conv_factor
        precision=num(ivs01a.precision$)

rem --- Print detail line

        if l+2>l9 gosub report_heading
        print (printer_dev) @(o[0]),poe14a.item_id$,
:                           @(o[1]),code$,
:                           @(o[2]),poe14a.unit_measure$,
:                           @(o[3]),poe14a.qty_received:m2$,
:                           @(o[4]),ivm02a.unit_cost*poe14a.conv_factor:m3$,
:                           @(o[5]),iv_extension:m1$,
:                           @(o[6]),poe14a.unit_cost:m3$,
:                           @(o[7]),po_extension:m1$,
:                           @(o[8]),poe14a.location$,
:                           @(o[9]),fnmask$(poe04a.vendor_id$,m0$),
:                           @(o[10]),poe04a.receiver_no$,
:                           @(o[11]),poe14a.po_no$,"-",poe14a.po_line_no$,
:                           @(o[12]),complete$

        print (printer_dev) @(o[0]+3),description$
        l=l+2

rem --- Accumulate totals

        receipt[0]=receipt[0]+iv_extension
        receipt[1]=receipt[1]+po_extension
        whse[0]=whse[0]+iv_extension
        whse[1]=whse[1]+po_extension
        report[0]=report[0]+iv_extension
        report[1]=report[1]+po_extension
        number=number+1

    wend;   rem --- Loop back for next sort record

rem --- Done with stock receipts

    done=1
    if number<>0

        gosub warehouse_brk
        totals$="Total For Register"
        totals[all]=report[all]
        gosub print_totals

    endif

rem --- Non-stock receipt initializations

    avail=width-91
    x=1
    gosub report_init
    nonstock=1
    headings$[2]="Non-Stock Inventory And Other Receipts"

rem --- Print positions

    o[10]=width-11
    o[9]=o[10]-6
    o[8]=o[9]-12
    o[7]=o[8]-9
    o[6]=o[7]-m-1
    o[5]=o[6]-11
    o[4]=o[5]-m1
    o[3]=o[4]-m3
    o[2]=o[3]-m2
    o[1]=o[2]-3

rem --- Position files

    call pgmdir$+"adc_progress.aon","S","","","","",0,0,1,meter_num,ignore_status
    read (pow05_dev,key=firm_id$,dom=*next)

    while more; rem --- Get next sort record

        pow05_key$=key(pow05_dev,end=*break)
        if pos(firm_id$=pow05_key$)<>1 break
        read (pow05_dev)
        call pgmdir$+"adc_progress.aon","S","","","","",0,0,1,meter_num,ignore_status

rem --- Level breaks?

        if t0$<>pow05a.warehouse_id$ gosub warehouse_brk
        if t1$<>pow05a.recpt_date$ gosub recpt_date_brk
        if subhead$<>"" gosub subhead

rem --- Read receipt header, detail and line code

        poe04a.firm_id$=pow05a.firm_id$+pow05a.vendor_id$
        poe14a.firm_id$=pow05a.firm_id$+pow05a.vendor_id$
        gosub read_recpt_header
        if status continue

rem --- Set remaining fields

        wo$=""
        if cvs(poe14a.wo_no$,2)<>""
            wo$=poe14a.wo_no$
            if cvs(poe14a.sequence_no$,2)<>"" wo$=wo$+"-"+poe14a.sequence_no$
        endif

rem --- Calculate extensions

        qty=poe14a.qty_received
        if pom02a.line_type$="O" qty=1
        precision 2
        po_extension=poe14a.unit_cost*qty
        precision num(ivs01a.precision$)

rem --- Print non-stock detail line

        if l+2>l9 gosub report_heading
        if pom02a.line_type$="N"

            print (printer_dev) @(o[0]),poe14a.item_id$,
:                               @(o[1]),poe14a.unit_measure$,
:                               @(o[2]),poe14a.qty_received:m2$,
:                               @(o[3]),poe14a.unit_cost:m3$,
:                               @(o[4]),po_extension:m1$,
:                               @(o[5]),poe14a.location$,
:                               @(o[6]),fnmask$(poe04a.vendor_id$,m0$),
:                               @(o[7]),poe04a.receiver_no$,
:                               @(o[8]),poe14a.po_no$,"-",poe14a.po_line_no$,
:                               @(o[9]),complete$,
:                               @(o[10]),wo$

        else

rem --- Print other charge detail line
            print (printer_dev) @(o[3]),poe14a.unit_cost:m3$,
:                               @(o[4]),po_extension:m1$,
:                               @(o[5]),poe14a.location$,
:                               @(o[6]),fnmask$(poe04a.vendor_id$,m0$),
:                               @(o[7]),poe04a.receiver_no$,
:                               @(o[8]),poe14a.po_no$,"-",poe14a.po_line_no$,
:                               @(o[9]),complete$

        endif

rem --- Print non-stock/other charge description

        print (printer_dev) @(o[0]+3),poe14a.order_memo$
        l=l+2

rem --- Accumulate totals

    receipt[1]=receipt[1]+po_extension
    number=number+1
    whse[1]=whse[1]+po_extension
    report[1]=report[1]+po_extension

    wend; rem --- Loop back for next sort record

done: rem --- All done

    done=1
    if number<>0

        gosub warehouse_brk
        totals$="Total For Register"
        totals[all]=report[all]
        gosub print_totals

    endif

rem --- Run next overlay

    run pgmdir$+"por_dc.bbx"

report_heading: rem --- Report Heading

    l=headings+3
    call pgmdir$+"adc_rpthead.aon",printer_dev,headings$[all],headings,page,width,when$,clock$,status
    if status exitto std_exit
    if !nonstock 

rem --- Heading for stock receipts
        print (printer_dev) @(o[1]),"Dist",
:                           @(o[3]+m2-9),"Quantity",
:                           @(o[4]+m3-5),cost$,
:                           @(o[5]+m1-10),cost$,
:                           @(o[6]+m3-5),"PO",
:                           @(o[7]+m1-10),"PO",
:                           @(o[8]),"Receiving",
:                           @(o[12]),"Rec'd"

        print (printer_dev) @(o[0]),"Item",
:                           @(o[1]),"Code",
:                           @(o[2]),"UM",
:                           @(o[3]+m2-9),"Received",
:                           @(o[4]+m3-5),"Cost",
:                           @(o[5]+m1-10),"Extension",
:                           @(o[6]+m3-5),"Cost",
:                           @(o[7]+m1-10),"Extension",
:                           @(o[8]),"Location",
:                           @(o[9]),"Vendor",
:                           @(o[10]),"Rec #",
:                           @(o[11]),"PO Number",
:                           @(o[12]),"Comp?"

    else

rem --- Heading for non-stock receipts
        print (printer_dev) @(o[2]+m2-9),"Quantity",
:                           @(o[3]+m3-5),"PO",
:                           @(o[4]+m1-10),"PO",
:                           @(o[5]),"Receiving",
:                           @(o[9]),"Rec'd"

        print (printer_dev) @(o[0]),"Item",
:                           @(o[1]),"UM",
:                           @(o[2]+m2-9),"Received",
:                           @(o[3]+m3-5),"Cost",
:                           @(o[4]+m1-10),"Extension",
:                           @(o[5]),"Location",
:                           @(o[6]),"Vendor",
:                           @(o[7]),"Rec #",
:                           @(o[8]),"PO Number",
:                           @(o[9]),"Comp?",
:                           @(o[10]),"Work Order"

    endif
    return

subhead: rem --- Subheading

    if l+4>l9 gosub report_heading
    print (printer_dev)""
    print (printer_dev)subhead$
    print (printer_dev)""
    l=l+3
    subhead$=""
    return

warehouse_brk: rem --- Warehouse break

    if t0$<>""

        gosub recpt_date_brk
        totals$="Total For Warehouse "+cvs(whse$,2)
        totals[all]=whse[all]
        gosub print_totals

    endif

    if !done

        dim whse[1]
        t0$=k$(3,2)
        ivm10c_key$=firm_id$+"C"+t0$+nf$
        find record (ivm10c_dev,key=ivm10c_key$,dom=*next) ivm10c$
        whse$=ivm10c.warehouse_id$+" "+ivm10c.short_name$
        if t1$="" gosub recpt_date_brk
        subhead$="Warehouse "+cvs(whse$,2)+" - Receipt Date "+fndate$(t1$)

    endif
    return

recpt_date_brk: rem --- Receipt date break

    if t1$<>""
    
        totals$="Total For "+fndate$(t1$)
        totals[all]=receipt[all]
        gosub print_totals

    endif

    if !done

        dim receipt[1]
        t1$=k$(5,6)
        subhead$="Warehouse "+cvs(whse$,2)+" - Receipt Date "+fndate$(t1$)

    endif
    return

read_recpt_header: rem --- Read receipt header and detail

    status=11
    p04_key$=poe04a.firm_id$+poe04a.vendor_id$+poe04a.receiver_no$+poe04a.po_no$
    p14_key$=poe14a.firm_id$+poe14a.vendor_id$+poe14a.receiver_no$+poe14a.po_no$+poe14a.po_line_no$
    find record (poe04a_dev,key=p04_key$,dom=goback) poe04a$
    find record (poe14a_dev,key=p14_key$,dom=goback) poe14a$
    if pom02a.firm_id$<>firm_id$ if pom02a.po_line_code$<>poe14a.po_line_code$

        pom02a_key$=firm_id$+poe14a.po_line_code$
        find record (pom02a_dev,key=pom02a_key$,dom=goback) pom02a$

    endif

rem --- Retrieve inventory item and warehouse

    ivm01a_key$=firm_id$+poe14a.item_id$
    ivm01a.item_desc$=""
    description$(1)=poe14a.order_memo$
    ivm02a_key$=firm_id$+poe14a.warehouse_id$
    ivm02a.firm_id$=""
    ivm02a.unit_cost=0
    code$=""
    if pom02a.line_type$="S"

        find record (ivm01a_dev,key=ivm01a_key$,dom=goback) ivm01a$
        find record (ivm02a_dev,key=ivm02a_key$,dom=goback) ivm02a$
        description$(1)=ivm01a.description$
        code$=ivm02a.ar_dist_code$

    endif

rem --- Format detail line fields

    x=poe14a.qty_ordered-poe14a.qty_prev_rec-poe14a.qty_received
    complete$="No"
    status=0
    if poe04a.rec_complete$="Y" complete$="Yes"
    if x<=0 complete$="Yes"

goback:
    return

report_init: rem --- Report Initializations

    dim receipt[1],whse[1],report[1],totals[1]
    let m1$=i6$,m2$=i7$,m3$=i8$,m1=len(m1$),m2=len(m2$),m3=len(m3$),done=0
    let number=0,maxm1=15,maxm2=12,maxm3=12,l=l9+1,subhead$="",t0$="",t1$=""
    
    m1$=ivs01a.amount_mask$
    m2$=ivs01a.unit_mask$
    m3$=ivs01a.cost_mask$

rem --- Print positions

    while more

        if m+(m1*x)+m2+(m3*x)<avail break
        let maxm1=maxm1-1,maxm2=maxm2-1,maxm3=maxm3-1
        call pgmdir$+"adc_sizemask.aon",m1$,m1,11,maxm1
        call pgmdir$+"adc_sizemask.aon",m2$,m2,9,maxm2
        call pgmdir$+"adc_sizemask.aon",m3$,m3,6,maxm3

    wend
    return

rem --- Print totals

print_totals:

    if l+1>l9 gosub report_heading
    if !nonstock
        print (printer_dev) @(o[5]-len(totals$)),totals$,
:                           @(o[5]),totals[0]:m1$,
:                           @(o[7]),totals[1]:m1$
    else
        print (printer_dev) @(o[4]-len(totals$)),totals$,
:                           @(o[4]),totals[1]:m1$
    endif

    let l=l+1
    return

rem #include std_functions.src
rem --- Standard AddonSoftware functions (01Mar2006)
rem --- Functions used to retrieve form values

    def fnstr_pos(q0$,q1$,q1)=int((pos(q0$=q1$,q1)+q1-1)/q1)
    def fnget_fld_data$(q0$,q1$)=cvs(rd_rec_data$[fnstr_pos(cvs(q0$,1+2+4)+"."+
:                                cvs(q1$,1+2+4),rd_rec_data$[0,0],40),0],2)
    def fnget_table$(q0$)=rd_alias_id$

rem --- Date/time handling functions

   def fndate$(q$) 
       
        if cvs(q$,2)="" return ""

        testdate$=""

        testdate$=date(jul(num(q$(1,4)),num(q$(5,2)),num(q$(7,2)),err=*next),err=*next)

        if testdate$<>"" 

            return date(jul(num(q$(1,4)),num(q$(5,2)),num(q$(7,2))))

        endif

        return testdate$

    fnend    


rem --- fnmask$: Alphanumeric Masking Function (formerly fnf$)

    def fnmask$(q1$,q2$)
        if q2$="" q2$=fill(len(q1$),"0")
        return str(-num(q1$,err=*next):q2$,err=*next)
        q=1
        q0=0
        while len(q2$(q))
              if pos(q2$(q,1)="-()") q0=q0+1 else q2$(q,1)="X"
              q=q+1
        wend
        if len(q1$)>len(q2$)-q0 q1$=q1$(1,len(q2$)-q0)
        return str(q1$:q2$)
    fnend

rem #endinclude std_functions.src

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_error_exit)
    call stbl("DIR_SYP")+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:                                str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src

rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:                                   str(err:"000"),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    call pgmdir$+"adc_progress.aon","D","","","","",0,poe04a_dev,0,meter_num,status
    run stbl("DIR+SYP")+"bas_process_end.bbj",err=*next
    release
rem #endinclude std_end.src

    end
