CLASS PUBLIC PayPalSilentPost

    field private BBjspWebRequest request!
    field private BBjspWebResponse response!
  
    method public void service(BBjspServletContext context!)

		rem --- parse response text
		rem --- wkx0$=response, wkx1$=key to look for, wkx2$=delim used to separate key/value pairs
		def fnparse$(wkx0$,wkx1$,wkx2$)

			wkx3$=""
			wk1=pos(wkx1$=wkx0$)
			if wk1
				wkx3$=wkx0$(wk1+len(wkx1$))
				wk2=pos(wkx2$=wkx3$)
				if wk2
					wkx3$=wkx3$(1,wk2-1)
				endif
			endif
			return wkx3$
		fnend
	
	    #request! = context!.getRequest()
        #response! = context!.getResponse()

		content!=#request!.getBody()
		token_id$=fnparse$(content!,"SECURETOKENID=","&")
		
		ns!=BBjAPI().getNamespace("aon","credit_receipt_payflowpro",1)
		wk$=ns!.getValue(token_id$,err=*next)
		if wk$="init"
			ns!.setValue(token_id$,content!)
		else
			ns!.setValue(token_id$,"Namespace value not as expected.")
		endif

		goto end_logging;rem --- rem this line to enable output to .txt for troubleshooting

		response_path!=pgm(-2)
		response_path$=response_path!.replace("\","/")
		response_path$=response_path$(1,pos("/"=response_path$,-1,1))+"responselog/"
		mkdir response_path$,err=*next
		rspFile$=response_path$+"PayPalSilentPostTest_"+str(int(tim*100000):"0000000")+".txt"
		erase rspFile$,err=*next
		string rspFile$
		rsp_chan=unt
		open(rsp_chan)rspFile$
		
		writerecord(rsp_chan)"In Silent Post servlet..."+$0D0A$
 		writerecord(rsp_chan)"Method is: "+#request!.getMethod()+$0D0A$
        
        if (#request!.getMethod()="POST") then 
            content!=#request!.getBody()
			writerecord(rsp_chan)content!+$0D0A$
		else
			vectParamNames! = #request!.getParameterNames()
			if vectParamNames!.size()
				writerecord(rsp_chan)"Returned parameters..."+$0D0A$
				for wk=0 to vectParamNames!.size()-1
					writerecord(rsp_chan)vectParamNames!.get(wk)+$0D0A$
				next wk
			else
				writerecord(rsp_chan)"No params sent..."
			endif
        endif 
		
		close(rsp_chan)

end_logging:

    METHODEND
    
CLASSEND