rem ivc - Return Warehouse Activity
rem Program ivc_whseact.aon v8.0.0 26Oct2006 (ivc_wb)
rem Created by adx_codeport.bbx v1.1.1 (10/26/2006 11:47:22)

rem  +-----------------------------------------+
rem  | AddonSoftware Version 8.0.0 - 01Oct2006 |
rem  |  Copyright BASIS International Ltd.  All Rights Reserved.
rem  |          All Rights Reserved            |
rem  +-----------------------------------------+

rem --- ACTION$    : Action to perform (input)
rem --- ""  = Return info for specific warehouse
rem --- "A" = Return info for all warehouses
rem --- "T" = Return total beginning balance instead of first
rem --- "L" = Return info for lot/serial number
rem --- CHANNELS[N]: Channel Numbers (input)
rem --- [2] = ivm-12 or ivm-17
rem --- [3] = ivm-02
rem --- ITEM$[n]   : Inventory Item Information
rem --- [0] = Firm ID
rem --- [1] = Warehouse ID (optional)
rem --- [2] = Inventory Item Number
rem --- [3] = Lot/Serial Number
rem --- PERIOD$[n] : Period Range (input)
rem --- [0] = Beginning Year/Period (YYYYMM)
rem --- [1] = Ending Year/Period (YYYYMM)
rem --- ACTIVITY[n]: Warehouse Activity (returned)
rem --- [0] to [12] = IVM-12/17 numerics
rem --- STATUS     : Status Code (returned)

    seterr std_error
    setesc std_error
    enter action$,channels[all],item$[all],period$[all],activity[all],status

rem --- Retrieve the program path

    pgmdir$=stbl("+DIR_PGM",err=*next)

rem --- Retrieve sysinfo data

    sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=*next)
    firm_id$=sysinfo.firm_id$

rem --- Retrieve miscellaneous templates

    ivm02_dev=channels[3]
    ivm12_dev=channels[2]

    files=2,begfile=1,endfile=files
    dim ids$[files],templates$[files]
    ids$[1]="IVM_ITEMWHSE"; rem ivm-02
    if pos(action$="L")=0 then 
		ids$[2]="IVM_ITEMACT"; rem ivm-12
    else
		ids$[2]="IVM_LSACT"; rem ivm-17
	endif

    call pgmdir$+"adc_template.aon",begfile,endfile,ids$[all],templates$[all],status
    if status goto std_exit

rem --- Dimension string templates

    dim ivm02a$:templates$[1],ivm12a$:templates$[2]

rem --- Initializations

    firm_id$   = item$[0]
    warehouse$ = item$[1]
    item$      = item$[2]
	begyear$   = period$[0](1,4)
	begper$    = period$[0](5,2)
	endyear$   = period$[1](1,4)
	endper$    = period$[1](5,2)
    status=0
	more=1

    if pos("L"=action$) then lotser$=item$[3]
	
    for x=0 to 12
        activity[x]=0
    next x

rem --- Single Warehouse

    if pos("A"=action$)=0 then
        gosub position_activity_file
        goto std_exit
    endif

rem --- Position warehouse file

    read (ivm02_dev,key=firm_id$+item$,knum="AO_ITEM_WH",dom=*next)

rem --- All Warehouses

    while more
        k$=key(ivm02_dev,knum="AO_ITEM_WH",end=*break)
        if pos(firm_id$+item$=k$)<>1 then break
        read record (ivm02_dev) ivm02a$
        warehouse$=ivm02a.warehouse_id$
        gosub position_activity_file
    wend

rem --- All done

    goto std_exit

position_activity_file: rem --- Position activity file to beginning period/year

    first=1

	if pos("L"=action$) then
		read (ivm12_dev, key=firm_id$+warehouse$+item$+lotser$+begyear$+begper$, dir=0, dom=*next) 
	else
		read (ivm12_dev, key=firm_id$+warehouse$+item$+begyear$+begper$, dir=0, dom=*next) 
	endif

rem --- Read activity record(s) and accumulate totals

    while more
		read record (ivm12_dev, end=*break) ivm12a$
		if ivm12a$.firm_id$ <> firm_id$ then break
		if ivm12a$.warehouse_id$ <> warehouse$ then break
		if ivm12a$.item_id$ <> item$ then break
		if ivm12a$.year$ > endyear$ or (ivm12a$.year$ = endyear$ and ivm12a.period$ > endper$) then break
		if pos("L"=action$) and ivm12a.lotser_no$ <> lotser$ then break
		
        dim names$:"name[100]:c(40*)"
        names$=fattr(ivm12a$,"")
        startx=1
		
        while names.name$[startx] <> "BEG_BALANCE"
            startx=startx+1
        wend
		
        for x=1 to 12
            name$=names.name$[x+startx]
            activity[x]=activity[x]+nfield(ivm12a$,name$)
        next x
		
        if first then activity[0]=activity[0]+ivm12a.beg_balance
        if pos("T"=action$)=0 then first=0
    wend
	
    return

rem #include std_error.src

std_error: rem --- Standard error handler (22Feb2013)

    if tcb(19)>0
        rem --- Escape handler
        if and(chr(tcb(19)),$08$)=$08$
            release
        else
            setesc std_error
            return
        endif
    endif

    rd_err_text$=""
    if tcb(2)=0 and tcb(5) then rd_err_text$=pgm(tcb(5),tcb(13),err=*next)
    call stbl("+DIR_SYP")+"bac_error.bbj",pgm(-2),str(tcb(5)),str(err),rd_err_text$,rd_err_act$
    if pos("ESCAPE"=rd_err_act$) seterr 0; setesc 0
    if pos("RETRY"=rd_err_act$) retry
    if pgm(-1)<>pgm(-2) status=999; exit 
    release

rem #endinclude std_error.src

rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:                                   str(err:"000"),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_exit.src

std_exit: rem --- Standard called program exit (01Mar2006)

    exit

rem #endinclude std_exit.src

    end
