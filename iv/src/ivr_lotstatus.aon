rem --- Lot/Serial Status Report (Input Overlay)
rem --- Program ivr_lotstatus.aon v8.0.0 09Jul2007 (ivr_ya)
rem --- Created by adx_codeport.bbx v1.1.5 (07/09/2007 11:52:09)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright BASIS International Ltd.  All Rights Reserved.
rem --- All Rights Reserved

    seterr std_error
    setesc std_error

rem --- Retrieve the program path

    pgmdir$=stbl("+DIR_PGM",err=*next)

rem --- Retrieve sysinfo data

    sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=*next)
    firm_id$=sysinfo.firm_id$

    milestone=50
    milestone=num(stbl("+MILESTONE",err=*next))

rem --- Open files

    files=9,begfile=1,endfile=files
    dim files$[files],options$[files],ids$[files],templates$[files],channels[files]
    files$[1]="ivs_params",ids$[1]="IVS_PARAMS"
    files$[2]="ivm-01",ids$[2]="IVM_ITEMMAST"
    files$[3]="ivm-02",ids$[3]="IVM_ITEMWHSE"
    files$[4]="ivm-07",ids$[4]="IVM_LSMASTER"
    files$[6]="ivc_whsecode",ids$[6]="IVC_WHSECODE"
    call pgmdir$+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],
:                                   ids$[all],templates$[all],channels[all],batch,status
    if status goto std_exit
    ivs01a_dev=channels[1]
    ivm01_dev=channels[2]
    ivm02_dev=channels[3]
    ivm07_dev=channels[4]
    ivm10c_dev=channels[6]
    
rem --- Dimension string templates

    dim ivs01a$:templates$[1],ivm01a$:templates$[2],ivm02a$:templates$[3],
:       ivm07a$:templates$[4],ivm10c$:templates$[6]  

rem --- Assign form input values to local variables

    sequence$=option!.getOptionData("pick_listbutton")
    open_status$=option!.getOptionData("op_cl_both")
    begwhse$=option!.getOptionData("warehouse_id_1")
    endwhse$=option!.getOptionData("warehouse_id_2")
    begprod$=option!.getOptionData("product_type_1")
    endprod$=option!.getOptionData("product_type_2")
    begitem$=option!.getOptionData("item_id_1")
    enditem$=option!.getOptionData("item_id_2")
    type$=option!.getOptionData("item_type")
    beglot$=option!.getOptionData("pick_text_1")
    endlot$=option!.getOptionData("pick_text_2")

rem --- Retrieve parameter records

    ivs01a_key$=firm_id$+"IV00"
    find record (ivs01a_dev,key=ivs01a_key$,err=std_missing_params) ivs01a$

rem --- Parameters

    dim p[5]
    
    if pos(ivs01a.lotser_flag$="LS")<>0 then
        p[0]=ivs01a.item_id_len
        p[1]=num(ivs01a.precision$)
        p[2]=ivs01a.ls_no_len
        p[3]=num(ivs01a.desc_len_01$)
        p[4]=num(ivs01a.desc_len_02$)
        p[5]=num(ivs01a.desc_len_03$)
    endif

rem --- Resize masks

	call stbl("+DIR_PGM")+"adc_getmask.aon","","IV","A","",m1$,0,m1
	call stbl("+DIR_PGM")+"adc_getmask.aon","","IV","U","",m2$,0,m2
	call stbl("+DIR_PGM")+"adc_getmask.aon","","IV","C","",m3$,0,m3

rem --- Retrieve key template

    call stbl("+DIR_SYP")+"bac_key_template.bbj","IVM_LSMASTER","PRIMARY",ivm07_key_tpl$,rd_table_chans$[all],status$
    dim ivm07a_key$:ivm07_key_tpl$

rem --- Run Overlay

    run pgmdir$+"ivr_lotstatus_o1.aon"

rem #include std_error.src

std_error: rem --- Standard error handler (22Feb2013)

    if tcb(19)>0
        rem --- Escape handler
        if and(chr(tcb(19)),$08$)=$08$
            release
        else
            setesc std_error
            return
        endif
    endif

    rd_err_text$=""
    if tcb(2)=0 and tcb(5) then rd_err_text$=pgm(tcb(5),tcb(13),err=*next)
    call stbl("+DIR_SYP")+"bac_error.bbj",pgm(-2),str(tcb(5)),str(err),rd_err_text$,rd_err_act$
    if pos("ESCAPE"=rd_err_act$) seterr 0; setesc 0
    if pos("RETRY"=rd_err_act$) retry
    if pgm(-1)<>pgm(-2) status=999; exit 
    release

rem #endinclude std_error.src

rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:                                   str(err:"000"),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    run stbl("+DIR_SYP")+"bas_process_end.bbj",err=*next
    release

rem #endinclude std_end.src

    end
