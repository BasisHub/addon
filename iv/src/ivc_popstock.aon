rem --- Program ivc_popstock v8.0.0 4Jan2008

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright BASIS International Ltd.  All Rights Reserved.
rem --- All Rights Reserved

rem --- Retrieve system information

    seterr std_error
    setesc std_error

    pgmdir$=stbl("+DIR_PGM",err=*next)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=*next)
    firm_id$=sysinfo.firm_id$

rem --- Get info from selection form

    item_id$=option!.getOptionData("ITEM_ID")
    abc_code$=option!.getOptionData("ABC_CODE")
    buyer_code$=option!.getOptionData("BUYER_CODE")
    vendor_id$=option!.getOptionData("VENDOR_ID")
    lead_time$=option!.getOptionData("LEAD_TIME")
    maximum_qty$=option!.getOptionData("MAXIMUM_QTY")
    order_point$=option!.getOptionData("ORDER_POINT")
    ord_pnt_code$=option!.getOptionData("ORD_PNT_CODE")
    eoq$=option!.getOptionData("EOQ")
    eoq_code$=option!.getOptionData("EOQ_CODE")
    safety_stock$=option!.getOptionData("SAFETY_STOCK")
    saf_stk_code$=option!.getOptionData("SAF_STK_CODE")

rem --- Open/Lock Files

    files=1,begfile=1,endfile=files
    dim files$[files],options$[files],ids$[files],templates$[files],channels[files]
    files$[1]="ivm-02",ids$[1]="IVM_ITEMWHSE"
    call pgmdir$+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],
:                                   ids$[all],templates$[all],channels[all],batch,status
    if status goto std_exit
    ivm02_dev=channels[1]
    dim ivm02a$:templates$[1]
    
rem --- Populate ivm-02

    read (ivm02_dev,key=firm_id$+item_id$,knum="AO_ITEM_WH",dom=*next)
    while 1
        extract record (ivm02_dev,end=*break) ivm02a$; rem Advisory Locking
        if firm_id$+item_id$<>ivm02a$.firm_id$+ivm02a$.item_id$ then read(ivm02_dev); break
        ivm02a.abc_code$=abc_code$
        ivm02a.buyer_code$=buyer_code$
        ivm02a.vendor_id$=vendor_id$
        ivm02a.lead_time$=lead_time$
        ivm02a.maximum_qty$=maximum_qty$
        ivm02a.order_point$=order_point$
        ivm02a.ord_pnt_code$=ord_pnt_code$
        ivm02a.eoq$=eoq$
        ivm02a.eoq_code$=eoq_code$
        ivm02a.safety_stock$=safety_stock$
        ivm02a.saf_stk_code$=saf_stk_code$
        ivm02a$=field(ivm02a$)
        write record (ivm02_dev)ivm02a$
    wend

    goto std_exit

rem #include std_error.src

std_error: rem --- Standard error handler (11Oct2017)

    if tcb(19)>0
        rem --- Escape handler
        if and(chr(tcb(19)),$08$)=$08$
            release
        else
            setesc std_error
            return
        endif
    endif

    if err=0   
        rem --- Get tcb(12) and tcb(10) to send into bac_error
        lock_byte=tcb(10)
        lock_chan=tcb(12)  
    endif

    rd_err_text$="",err_num=err
    if tcb(2)=0 and tcb(5) then rd_err_text$=pgm(tcb(5),tcb(13),err=*next)
    if err_num=252 then
        E!=BBjAPI().getLastBBjException()
        rd_err_text$=rd_err_text$+$0A$+E!.getClass().getName()
        if E!.getMessage()<>null() then rd_err_text$=rd_err_text$+": "+E!.getMessage()
    endif
    call stbl("+DIR_SYP")+"bac_error.bbj",pgm(-2),str(tcb(5)),str(err_num),rd_err_text$,rd_err_act$,lock_byte,lock_chan
    if pos("ESCAPE"=rd_err_act$) seterr 0; setesc 0
    if pos("RETRY"=rd_err_act$) retry
    if pgm(-1)<>pgm(-2) status=999; exit 
    release

rem #endinclude std_error.src

std_exit: rem --- Standard program end (01Mar2006)

    close (ivm02_dev,err=*next)
    exit

    end