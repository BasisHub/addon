rem --- Rebuild Inventory Committed Quantities
rem --- Program ivx_ca v8.0.0 09Jul2007 (ivx_ca)
rem --- Created by adx_codeport.bbx v1.1.5 (07/09/2007 11:55:18)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright BASIS International Ltd.  All Rights Reserved.
rem --- All Rights Reserved

    setesc std_error
    seterr std_error

rem --- Retrieve the program path

    pgmdir$=stbl("+DIR_PGM",err=*next)

rem --- Retrieve sysinfo data

    rem --- If BUI, initialize Barista processes
    if info(3,6)="5" then
        use ::ado_util.src::util
        Translate!=util.initBUIProcess()
        if Translate!=null() then goto std_exit
    endif

    sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=*next)
	milestone=50
    milestone=num(stbl("+MILESTONE",err=*next),err=*next)
    firm_id$=sysinfo.firm_id$
    
rem --- set rd_alias_id$, if needed, for DocOut Settings
    
    if rd_alias_id$=""
        rd_alias_id$=pgm(-2)
        rd_alias_id$=rd_alias_id$(max(pos("/"="/"+rd_alias_id$,-1),pos("\"="\"+rd_alias_id$,-1)))
        rd_alias_id$=rd_alias_id$(1,pos("."=rd_alias_id$+".")-1)
    endif

rem --- Get user approval to proceed

    msg_id$="AON_RUN_QUERY"
    dim x$:stbl("+SYSINFO_TPL")
    dim msg_tokens$[1]
    x$=stbl("+SYSINFO")                                                            
    msg_tokens$[1]=x.task_desc$
    gosub disp_message
    if msg_opt$<>"Y" then goto std_exit_no_update
    

rem --- Open/Lock files

    files=13,begfile=1,endfile=files
    dim files$[files],options$[files],ids$[files],templates$[files],channels[files]
    files$[2]="ivm-02",ids$[2]="IVM_ITEMWHSE",options$[2]="L"; rem Lock
    files$[3]="ivm-07",ids$[3]="IVM_LSMASTER",options$[3]="L"; rem Lock
    files$[4]="opt-01",ids$[4]="OPE_ORDHDR"
    files$[5]="opt-11",ids$[5]="OPE_ORDDET"
    files$[6]="opt-21",ids$[6]="OPE_ORDLSDET"
    files$[8]="opm-02",ids$[8]="OPC_LINECODE"
    files$[9]="ivs_params",ids$[9]="IVS_PARAMS"
    files$[10]="ars_params",ids$[10]="ARS_PARAMS"
    files$[11]="sfs_params",ids$[11]="SFS_PARAMS"
    
    call pgmdir$+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],
:                                   ids$[all],templates$[all],channels[all],batch,status
    if status goto std_exit_no_update
    ivm02_dev=channels[2]
    ivm07_dev=channels[3]
    ope01_dev=channels[4]
    ope11_dev=channels[5]
    ope21_dev=channels[6]
    opm02_dev=channels[8]
    ivs01_dev=channels[9]
    ars01_dev=channels[10]
    sfs01_dev=channels[11]
    

rem --- Dimension string templates

    dim ivm02a$:templates$[2],ivm07a$:templates$[3],ope01a$:templates$[4],
:       ope11a$:templates$[5],ope21a$:templates$[6],
:       opm02a$:templates$[8],
:       ivs01a$:templates$[9],ars01a$:templates$[10],sfs01a$:templates$[11]

rem --- Retrieve parameter records

    op_firm_id$="N"
    wo_firm_id$="N"
    iv_firm_id$="N"
    ls_firm_id$="N"

    ivs01a_key$=firm_id$+"IV00"
    find record (ivs01_dev,key=ivs01a_key$,err=std_missing_params) ivs01a$ 
    iv_firm_id$="Y"
    if pos(ivs01a.lotser_flag$="LS")>0 ls_firm_id$="Y" else ls_firm_id$="N"
    i0=num(ivs01a.item_id_len$)
    precision num(ivs01a.precision$)
    
    find (ars01_dev,key=firm_id$+"AR00",dom=*next); op_firm_id$="Y"
    find (sfs01_dev,key=firm_id$+"SF00",dom=*next); wo_firm_id$="Y"
    
rem --- Parameters
   
    dim info$[20]
    call pgmdir$+"adc_application.aon","IV",info$[all]
    if info$[3]<>"Y" goto std_exit_no_update
    dim info$[20]
    call pgmdir$+"adc_application.aon","OP",info$[all]
    op$=info$[3]
    dim info$[20]
    call pgmdir$+"adc_application.aon","SF",info$[all]
    wo$=info$[3]

rem --- Open Shop Floor tables if SF is installed

	if wo$="Y"
		files=3,begfile=1,endfile=files
		dim files$[files],options$[files],ids$[files],templates$[files],channels[files]
		files$[1]="sfe-01",ids$[1]="SFE_WOMASTR"
		files$[2]="sfe-23",ids$[2]="SFE_WOMATDTL"
		files$[3]="sfe-25",ids$[3]="SFE_WOMATISD"
		call pgmdir$+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],
:       	                            ids$[all],templates$[all],channels[all],batch,status
		if status goto std_exit_no_update

		sfe01_dev=channels[1]
		sfe23_dev=channels[2]
		sfe25_dev=channels[3]

		dim sfe01a$:templates$[1]
		dim sfe23a$:templates$[2]
		dim sfe25a$:templates$[3]
	endif

rem --- Initialize Data

    more=1
    width=47
    blanks$=fill(width)
    dim entry$[4],file_id$[4]
    entry$[1]="ive-01",file_id$[1]="IVE_TRANSHDR"
    entry$[2]="ive-02",file_id$[2]="IVE_TRANSFER"
    if wo$="Y" entry$[3]="sfe-14",file_id$[3]="SFE_WOLSISSU"

rem --- Verify no IV transactions/transfers & no L/S Materials Issues

    gosub entryfiles
    if index<>0 goto std_exit_no_update

rem --- Background

    call pgmdir$+"adc_progress.aon","N","IVM_ITEMWHSE","","","",0,0,1,meter_num,status

rem --- Clear ivm-02 Committed

    read (ivm02_dev,key=firm_id$,dom=*next)
    while more
        read record (ivm02_dev,end=*break)ivm02a$
        if ivm02a.firm_id$<>firm_id$ then break
        ivm02a.qty_commit=0
        ivm02a$=field(ivm02a$)
        write record (ivm02_dev) ivm02a$
		total_recs=total_recs+1
        if mod(total_recs,milestone)=0 call pgmdir$+"adc_progress.aon","S","","","","",0,0,1,meter_num,status
    wend

	call pgmdir$+"adc_progress.aon","D","","","","",0,0,1,meter_num,status
	
rem --- Clear ivm-07 Committed

    if ivm07_dev<>0 then
        call pgmdir$+"adc_progress.aon","N","IVM_LSMASTER","","","",0,0,1,meter_num,status
		total_recs=0
        read (ivm07_dev,key=firm_id$,dom=*next)
        while more
            read record (ivm07_dev,end=*break)ivm07a$
            if ivm07a.firm_id$<>firm_id$ then break
            ivm07a.qty_commit=0
            ivm07a$=field(ivm07a$)
            write record (ivm07_dev) ivm07a$
			total_recs=total_recs+1
            if mod(total_recs,milestone)=0 call stbl("+DIR_PGM")+"adc_progress.aon","S","","","","",0,0,1,meter_num,status
        wend
		call pgmdir$+"adc_progress.aon","D","","","","",0,0,1,meter_num,status
    endif
    
rem --- Rebuild From ope-11 Committed

    if op$="Y" 
        call stbl("+DIR_PGM")+"adc_progress.aon","N","OPE_ORDDET","","","",0,0,1,meter_num,status
		total_recs=0

        read (ope11_dev,key=firm_id$,dom=*next)

        rem --- ope-11 Main Read
        while more
            read record (ope11_dev,end=*break)ope11a$
            if ope11a.firm_id$<>firm_id$ then break
            if pos(ope11a.trans_status$="ER")=0 then continue
			total_recs=total_recs+1
			if mod(total_recs,milestone)=0 call stbl("+DIR_PGM")+"adc_progress.aon","S","","","","",0,0,1,meter_num,status
            find record (ope01_dev,key=ope11a.firm_id$+ope11a.ar_type$+ope11a.customer_id$+ope11a.order_no$+ope11a.ar_inv_no$,dom=*continue) ope01a$; rem "Check header records for quotes
            if pos(ope01a.trans_status$="ER")=0 then continue
            if ope01a.invoice_type$="P" then quote$="Y" else quote$="N"
            find record (opm02_dev,key=firm_id$+ope11a.line_code$,dom=*continue) opm02a$
            if pos(opm02a.line_type$="MNO")<>0 then continue
            if opm02a.dropship$<>"Y" 
                if quote$="N" and ope11a.commit_flag$="Y" 
                    call pgmdir$+"adc_progress.aon","S","","","","",0,0,1,meter_num,status
                    read record (ivm02_dev,key=firm_id$+ope11a.warehouse_id$+ope11a.item_id$,dom=*continue) ivm02a$
                    ivm02a.qty_commit=ivm02a.qty_commit+ope11a.qty_ordered
                    ivm02a$=field(ivm02a$)
                    write record (ivm02_dev)ivm02a$
                endif
            endif                            
        wend
		call pgmdir$+"adc_progress.aon","D","","","","",0,0,1,meter_num,status
    endif
    
rem --- Rebuild From ope-21 Committed

    if op$="Y" 
        call stbl("+DIR_PGM")+"adc_progress.aon","N","OPE_ORDLSDET","","","",0,0,1,meter_num,status
		total_recs=0
        dim t[2]
        dim ope11a$:fattr(ope11a$)
        read (ope21_dev,key=firm_id$,dom=*next)

        rem --- ope-21 Main Read
        while more
            read record (ope21_dev,end=*break)ope21a$
            if ope21a.firm_id$<>firm_id$ then break
            if pos(ope21a.trans_status$="ER")=0 then continue
			total_recs=total_recs+1
			if mod(total_recs,milestone)=0 call stbl("+DIR_PGM")+"adc_progress.aon","S","","","","",0,0,1,meter_num,status
            rem --- make sure this ord lsdet rec has corres. ord det rec... if not, remove
            if pos(ope21a.firm_id$+ope21a.ar_type$+ope21a.customer_id$+ope21a.order_no$+ope21a.ar_inv_no$+
:               ope21a.orddet_seq_ref$=ope11a.firm_id$+ope11a.ar_type$+ope11a.customer_id$+ope11a.order_no$+ope11a.ar_inv_no$+
:               ope11a.internal_seq_no$)<>1 
                    found=0
                    find record (ope11_dev,key=ope21a.firm_id$+ope21a.ar_type$+ope21a.customer_id$+ope21a.order_no$+ope21a.ar_inv_no$+ope21a.orddet_seq_ref$,dom=*next) ope11a$;found=1
                    if !found 
                        remove (ope21_dev,key=ope21a.firm_id$+ope21a.ar_type$+ope21a.customer_id$+ope21a.order_no$+ope21a.ar_inv_no$+ope21a.orddet_seq_ref$+ope21a.sequence_no$,dom=*continue)    
                    endif
            endif    
            found=0    
            read record (ivm07_dev,key=firm_id$+ope11a.warehouse_id$+ope11a.item_id$+ope21a.lotser_no$,dom=*next) ivm07a$;found=1
            if !found
                remove (ope21_dev,key=ope21a.firm_id$+ope21a.ar_type$+ope21a.customer_id$+ope21a.order_no$+ope21a.ar_inv_no$+ope21a.orddet_seq_ref$+ope21a.sequence_no$,dom=*continue)    
            else
                ivm07a.qty_commit=ivm07a.qty_commit+ope21a.qty_ordered
                ivm07a$=field(ivm07a$)
                write record (ivm07_dev) ivm07a$
            endif
        wend
		call pgmdir$+"adc_progress.aon","D","","","","",0,0,1,meter_num,status
    endif
    
rem --- Rebuild From Shop Floor Committed

    if wo$="Y" then
        call pgmdir$+"adc_progress.aon","N","SFE_WOMATISD","","","",0,0,1,meter_num,status
		total_recs=0

        rem ---  Skip sfe-14 (sfe_wolsissu) since rebuild doesn't run if there are any l/s material issues (re gosub entryfiles)

        rem --- sfe-25 (sfe_womatisd) Main Read
        read (sfe25_dev,key=firm_id$,dom=*next)
        while 1
            read record (sfe25_dev,end=*break)sfe25a$
            if sfe25a$.firm_id$<>firm_id$ then break
			total_recs=total_recs+1
            if mod(total_recs,milestone)=0 call pgmdir$+"adc_progress.aon","S","","","","",0,0,1,meter_num,status
            found=0
            read record (sfe01_dev,key=sfe25a.firm_id$+sfe25a.wo_location$+sfe25a.wo_no$,dom=*next) sfe01a$;found=1
            if !found then
                remove (sfe25_dev,key=sfe25a.firm_id$+sfe25a.wo_location$+sfe25a.wo_no$+sfe25a.internal_seq_no$,dom=*next)
                continue
            endif
            if sfe01a.wo_status$="C" then continue
            rem --- Only delete additional committments made after WO was released
            if cvs(sfe25a.womatdtl_seq_ref$,2)="" then
                rem --- Not part of released WO, so uncommit all
                read record (ivm02_dev,key=sfe25a.firm_id$+sfe25a.warehouse_id$+sfe25a.item_id$,dom=*continue) ivm02a$
                ivm02a.qty_commit=ivm02a.qty_commit+max(0,sfe25a.qty_ordered-sfe25a.tot_qty_iss)
                ivm02a$=field(ivm02a$)
                write record (ivm02_dev) ivm02a$                    
            else
                rem --- Only uncommit portion of issue's qty_issued that is greater than released WO's qty_ordered
                found=0
                sfe23_key$=sfe25a.firm_id$+sfe25a.wo_location$+sfe25a.wo_no$+sfe25a.womatdtl_seq_ref$
                readrecord(sfe23_dev,key=sfe23_key$,dom=*next)sfe23a$; found=1
                if found then
                    if max(0,sfe25a.qty_ordered-sfe25a.tot_qty_iss)>max(0,sfe23a.qty_ordered-sfe23a.tot_qty_iss) then
                        read record (ivm02_dev,key=sfe23a.firm_id$+sfe23a.warehouse_id$+sfe23a.item_id$,dom=*continue) ivm02a$
                        ivm02a.qty_commit=ivm02a.qty_commit+max(0,sfe25a.qty_ordered-sfe25a.tot_qty_iss)-max(0,sfe23a.qty_ordered-sfe23a.tot_qty_iss)
                        ivm02a$=field(ivm02a$)
                        write record (ivm02_dev) ivm02a$                    
                    endif
                endif
            endif
        wend
		call pgmdir$+"adc_progress.aon","D","","","","",0,0,1,meter_num,status

        call pgmdir$+"adc_progress.aon","N","SFE_WOMATDTL","","","",0,0,1,meter_num,status
		total_recs=0
		
        rem --- sfe-23 (sfe_womatdtl) Main Read
        read (sfe23_dev,key=firm_id$,dom=*next)
        while more
            read record (sfe23_dev,end=*break)sfe23a$
            if sfe23a$.firm_id$<>firm_id$ then break
			total_recs=total_recs+1
            if mod(total_recs,milestone)=0 call pgmdir$+"adc_progress.aon","S","","","","",0,0,1,meter_num,status
            found=0
            read record (sfe01_dev,key=sfe23a.firm_id$+sfe23a.wo_location$+sfe23a.wo_no$,dom=*next) sfe01a$;found=1
            if !found
                remove (sfe23_dev,key=sfe23a.firm_id$+sfe23a.wo_location$+sfe23a.wo_no$+sfe23a.internal_seq_no$,dom=*continue)
            else
                if sfe01a.wo_status$<>"C" then
                    read record (ivm02_dev,key=sfe23a.firm_id$+sfe23a.warehouse_id$+sfe23a.item_id$,dom=*continue) ivm02a$
                    ivm02a.qty_commit=ivm02a.qty_commit+max(0,sfe23a.qty_ordered-sfe23a.tot_qty_iss)
                    ivm02a$=field(ivm02a$)
                    write record (ivm02_dev) ivm02a$                    
                endif
            endif
        wend
		call pgmdir$+"adc_progress.aon","D","","","","",0,0,1,meter_num,status
    endif

done: rem --- Done

    goto std_exit

entryfiles: rem --- Make sure appropriate entry files are empty

    index=0
    number=4
    dim msg_tokens$[1]
    for x=1 to 3
        filename$=entry$[x]
        batch=0
        if filename$<>"" then
            files=1,begfile=1,endfile=files
            dim files$[files],options$[files],ids$[files],templates$[files],channels[files]
            files$[1]=filename$,ids$[1]=file_id$[x]
            call pgmdir$+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],
:               ids$[all],templates$[all],channels[all],batch,status
            if status then goto std_exit_no_update
            x$=fin(channels[1])
            keys_used=dec(x$(77,4))        
            if keys_used gosub Entry_File
            close (channels[1])
        endif
    next x
    if index<>0 then
        msg_id$="IV_REBUILD_COM"
        gosub disp_message
    endif
    return

Entry_File: rem --- Entry file contains records

    switch x
        case 1;rem transaction
            msg_tokens$[1]=msg_tokens$[1]+Translate!.getTranslation("AON_INVENTORY_TRANSACTION_REGISTER_AND_UPDATE_MUST_BE_RUN.")+$0A$
            index=index+1
        break
        case 2; rem transfer
            msg_tokens$[1]=msg_tokens$[1]+Translate!.getTranslation("AON_INVENTORY_TRANSFER_REGISTER_AND_UPDATE_MUST_BE_RUN.")+$0A$
            index=index+1
        break
        case 3; rem materials
            find (sfs01_dev,key=firm_id$+"SF00",dom=*break); rem "Verify WO installedfor this Firm
            find record (ivs01_dev,key=firm_id$+"IV00",dom=*break) ivs01a$; rem "Verify IVinstalled for this Firm
            if pos(ivs01a.lotser_flag$="LS")<>0 then
                msg_tokens$[1]=msg_tokens$[1]+Translate!.getTranslation("AON_MATERIALS_ISSUES_REGISTER_AND_UPDATE_MUST_BE_RUN.")+$0A$
                index=index+1
            endif
        break
        case default
        break
    swend   
    return


disp_message:rem --- Display Message Dialog

    call stbl("+DIR_SYP")+"bac_message.bbj",msg_id$,msg_tokens$[all],msg_opt$,table_chans$[all]

    return

rem #include std_error.src

std_error: rem --- Standard error handler (11Oct2017)

    if tcb(19)>0
        rem --- Escape handler
        if and(chr(tcb(19)),$08$)=$08$
            release
        else
            setesc std_error
            return
        endif
    endif

    if err=0   
        rem --- Get tcb(12) and tcb(10) to send into bac_error
        lock_byte=tcb(10)
        lock_chan=tcb(12)  
    endif

    rd_err_text$="",err_num=err
    if tcb(2)=0 and tcb(5) then rd_err_text$=pgm(tcb(5),tcb(13),err=*next)
    if err_num=252 then
        E!=BBjAPI().getLastBBjException()
        rd_err_text$=rd_err_text$+$0A$+E!.getClass().getName()
        if E!.getMessage()<>null() then rd_err_text$=rd_err_text$+": "+E!.getMessage()
    endif
    call stbl("+DIR_SYP")+"bac_error.bbj",pgm(-2),str(tcb(5)),str(err_num),rd_err_text$,rd_err_act$,lock_byte,lock_chan
    if pos("ESCAPE"=rd_err_act$) seterr 0; setesc 0
    if pos("RETRY"=rd_err_act$) retry
    if pgm(-1)<>pgm(-2) status=999; exit 
    release

rem #endinclude std_error.src

rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:                                   str(err:"000"),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    msg_id$="UPDATE_COMPLETE"
    dim msg_tokens$[1]
    msg_opt$=""
    gosub disp_message

std_exit_no_update:

    call pgmdir$+"adc_progress.aon","D","","","","",0,0,0,meter_num,status
    run stbl("+DIR_SYP")+"bas_process_end.bbj",err=*next
    release

rem #endinclude std_end.src

    end
