rem iv_item_lot_lk_inq.aon --- Item lookup by Lot/Serial inquiry program called from query

    if stbl("+USE_SETERR") = "YES" seterr error_proc

    enter
:       rd_gui_dev,
:       rdInqWin!,
:       rd_inq_event$,
:       rd_alias_id$,
:       rd_sel_keys$,
:       rd_table_chans$[all],
:       rd_status$

rem    rd_gui_dev - GUI device channel
rem    rdInqWin! - Calling inquiry form object
rem    rd_inq_event$ - Inquiry event triggering call (MEN-xx code, or 'SELECT' for selected items)
rem    rd_alias_id$ - Primary inquiry table
rem    rd_sel_keys$ - Selected inquiry keys
rem    rd_table_chans$[] - Opened table/channels array (Required)
rem    rd_status$ - returned status (i.e., UPDATE, REFRESH, QUERY)

rem --- Route inquiry event action

    rdInqEvent!=rd_inq_event$
    switch (1)
        case rdInqEvent!.equals("SELECT")
            x=msgbox("Incoming option was SELECT")
        break
        case rdInqEvent!.equals("OPT-TST1")
            x=msgbox("Incoming option was TEST 1")
        break
        case rdInqEvent!.equals("OPT-TST2")
            x=msgbox("Incoming option was TEST 2")
        break
        case rdInqEvent!.equals("OPT-QRY1")
            rd_status$="QUERYIV_ITEM_LK"
        break
        case rdInqEvent!.equals("OPT-QRY2")
            rd_status$="QUERYIV_ITEM_SYN_LK"
        break
        case rdInqEvent!.equals("OPT-QRY3")
            rd_status$="QUERYIV_ITEM_VEND_LK"
        break
        case default
        break
    swend

    goto exit_prog

disp_message:rem --- Display Message Dialog

    call stbl("+DIR_SYP")+"bac_message.bbj",
:       rd_msg_id$,
:       rd_msg_tokens$[all],
:       rd_msg_opt$,
:       rd_table_chans$[all]

    return

error_proc:rem --- Error Processing Routine

    rd_err_text$ = ""
    if tcb(2) = 0 and tcb(5) then rd_err_text$ = pgm(tcb(5), tcb(13), err=*next)

    call stbl("+DIR_SYP")+"bac_error.bbj", pgm(-2), str(tcb(5)), str(err), rd_err_text$, rd_err_act$

    if pos("EXIT" = rd_err_act$) <> 0 goto exit_prog
    if pos("ESCAPE" = rd_err_act$) <> 0 seterr 0; setesc 0
    if pos("RETRY" = rd_err_act$) <> 0 retry

exit_prog:rem --- Exit Program

    exit