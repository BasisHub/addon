rem --- Inventory Synonyms Listing (Input Overlay)
rem --- Program ivr_itemsyn.aon v8.0.0 09Jul2007 (ivr_sa)
rem --- Created by adx_codeport.bbx v1.1.5 (07/09/2007 11:49:36)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright (c) 1981-2007 AddonSoftware
rem --- All Rights Reserved

    seterr std_error
    setesc std_error

rem --- Retrieve the program path

    pgmdir$=stbl("+DIR_PGM",err=*next)
    syspgmdir$=stbl("+DIR_SYP",err=*next)

rem --- Retrieve sysinfo data

    sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=*next)
    milestone=num(stbl("+MILESTONE",err=*next),err=*next)
    firm_id$=sysinfo.firm_id$

rem --- Open/Lock files

    files=5,begfile=1,endfile=files
    dim files$[files],options$[files],ids$[files],templates$[files],channels[files]
    files$[1]="ivs_params",ids$[1]="IVS_PARAMS"
    files$[2]="ivm-01",ids$[2]="IVM_ITEMMAST"
    files$[3]="ivc_prodcode",ids$[3]="IVC_PRODCODE"
    files$[4]="ivm-14",ids$[4]="IVM_ITEMSYN"
    files$[5]="ivm-15",ids$[5]="IVC_TYPECODE"   
    call pgmdir$+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],
:                                   ids$[all],templates$[all],channels[all],batch,status
    if status goto std_exit
    ivs01_dev=channels[1]
    ivm01_dev=channels[2]
    ivm10a_dev=channels[3]
    ivm14_dev=channels[4]
    ivm15_dev=channels[5]

rem --- Dimension string templates

    dim ivm01a$:templates$[2],ivm14a$:templates$[4],ivm15a$:templates$[5]
    dim ivm10a$:templates$[3],ivs01a$:templates$[1]

rem --- Assign form input values to local variables

    sequence$=option!.getOptionData("report_seq")
    begsyn$=option!.getOptionData("item_synonym_1")
    endsyn$=option!.getOptionData("item_synonym_2")
    begprod$=option!.getOptionData("product_type_1")
    endprod$=option!.getOptionData("product_type_2")
    begitem$=option!.getOptionData("item_id_1")
    enditem$=option!.getOptionData("item_id_2")
    type$=option!.getOptionData("item_type")

rem --- Retrieve parameter records

    ivs01a_key$=firm_id$+"IV00"
    find record (ivs01_dev,key=ivs01a_key$,err=std_missing_params) ivs01a$

rem --- Parameters

    dim p[5]
    p[0]=num(ivs01a.item_id_len$)
    p[1]=num(ivs01a.precision$)
    p[3]=num(ivs01a.desc_len_01$)
    p[4]=num(ivs01a.desc_len_02$)
    p[5]=num(ivs01a.desc_len_03$)

rem --- Initializations

    dim a0$(22),a1$(60),a2$(64),a3$(40),a4$(21),a[12],x0$(32),y0$(5),y1$(20)

rem --- Run overlay
    run pgmdir$+"ivr_itemsyn_o1.aon"

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_error_exit)
    call syspgmdir$+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:                                str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src

rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call syspgmdir$+"bac_noparams.bbj",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:                                   str(err:"000"),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    run syspgmdir$+"bas_process_end.bbj",err=*next
    release

rem #endinclude std_end.src

    end
