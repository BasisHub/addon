rem --- Rebuild Inventory Beginning Balances
rem --- Program ivx_rebuild_summ_bal v8.0.0 23Jun2010 (ivx_ga)
rem --- Created by adx_codeport.bbj v1.1.5 (06/23/2010 11:05:28)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright (c) 1981-2007 AddonSoftware
rem --- All Rights Reserved

rem -------------- Errors, Warnings and Conversion Information ---------------------

rem --- The following error(s) were encountered during the conversion:

rem --- v7.x administrator reference ["sys-01"] (Line 0093)
rem --- v7.x sys-01 reference [sys01_dev=ch] (Line 0100)
rem --- v7.x sys-01 reference [sys01_dev,ke] (Line 0105)
rem --- v7.x sys-01 reference [sys01_dev,ke] (Line 0108)
rem --- v7.x administrator reference ["syc_wc.bbx"] (Line 0123)
rem --- BBx reference ["syc_wc.bbx"] (Line 0123)

rem --- The following reset verbs were removed from this program:

rem --- BEGIN statement removed [begin]

rem --- The following IOLIST's were removed from this program:

rem --- ivm02a: iolist *,*,*,onhand
rem --- ivm07a: iolist *,*,onhand
rem --- ivm12a: iolist a0$,a1$,a2$,a[all]
rem --- ivm17a: iolist a0$,a1$,a2$,a[all]

rem --- The following channel references have been identified:

rem --- ivs01a: (Generated by CodePort)

rem --------------------------------------------------------------------------------
rem --- sys01a: Channel reference (Line 0107)

    seterr std_error
    setesc std_error

rem --- Retrieve the program path

    pgmdir$=stbl("+dir_pgm",err=*next)

rem --- Retrieve sysinfo data

    sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=*next)
    milestone=num(stbl("+MILESTONE",err=*next),err=*next)
    firm_id$=sysinfo.firm_id$

rem --- Open/Lock files

    files=5,begfile=1,endfile=files
    dim files$[files],options$[files],ids$[files],templates$[files],channels[files]
    files$[1]="ivm-02",ids$[1]="IVM_ITEMWHSE"
    files$[2]="ivm-07",ids$[2]="IVM_LSMASTER"
    files$[3]="ivm-12",ids$[3]="IVM_ITEMACT"
    files$[4]="ivm-17",ids$[4]="IVM_LSACT"
    files$[5]="ivs_params",ids$[5]="IVS_PARAMS"
    call pgmdir$+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],
:                                   ids$[all],templates$[all],channels[all],batch,status
    if status goto std_exit
    ivm02_dev=channels[1]
    ivm07_dev=channels[2]
    ivm12_dev=channels[3]
    ivm17_dev=channels[4]
    ivs01a_dev=channels[5]

rem --- Dimension string templates

    dim ivm02a$:templates$[1],ivm07a$:templates$[2],ivm12a$:templates$[3],
:       ivm17a$:templates$[4],ivs01a$:templates$[5]

rem --- Assign form input values to local variables

    value_01$=Option!.getOptionData("form_value_01")

rem --- Retrieve parameter records

    ivs01a_key$=firm_id$+"IV00"
    find record (ivs01a_dev,key=ivs01a_key$,err=std_missing_params) ivs01a$

rem --- Open/Lock Files

    files=5
    dim files$[files],options$[files],channels[files]
    files$[1]="ivm-02"
    files$[2]="ivm-07"
    files$[3]="ivm-12"
    files$[4]="ivm-17"
    files$[5]="sys-01"
    call pgmdir$+"adc_fileopen.aon",1,1,files,files$[all],options$[all],channels[all],batch,status
    if status goto std_exit
    ivm02_dev=channels[1]
    ivm07_dev=channels[2]
    ivm12_dev=channels[3]
    ivm17_dev=channels[4]
    sys01_dev=channels[5]

rem --- Parameters

    dim p[2]
    find record (sys01_dev,key="T"+fid(0),dom=std_missing_params) sys01t$
    firm_id$=firm_id$
    n2$="IV"
    find record (sys01_dev,key=firm_id$+n2$+"00",dom=std_missing_params) ivs01a$
    p[0]=num(i2$(1,2))
    p[1]=num(i2$(5,1))
    p[2]=num(i2$(7,2))
    ivperiod$=i4$(1,2)
    ivyear$=i4$(3,2)

rem --- Initializations

    precision p[1]
    dim a[12]

rem --- Background

    print 'sb',@(33,3),"Phase:",'sf',
    call pgmdir$+"syc_wc.bbx",1,0,80,0,0,4,0

l800: rem --- Options

    number=5; dim message$[number]
    message$[0]="This utility resets the ivm-12 and ivm-17 beginning balances"
    message$[1]="for the current period. It uses the current on-hand quantities"
    message$[2]="from ivm-02 and IVM-07, and current and future activity from"
    message$[3]="ivm-12 and ivm-17 to calculate the beginning balance."
    message$[number]="      Rebuild Inventory Beginning Balances (YES/NO)?"
    call pgmdir$+"adc_stdmessage.aon",3,message$[all],number,-1,-1,v$,v3
    on v3 goto l880,l800,l800,l800,std_exit,l880,std_exit
l880:
    if v$="NO" goto std_exit
    if v$<>"YES" goto l800

rem --- Position ivm-02

    x$="Setting Items' Warehouse Beginning Balance"
    x=3+p[0]
    gosub l6000
    read (ivm02_dev,key=firm_id$,dom=*next)

l1000: rem --- Get On-Hand Quantity From ivm-02

    ivm02k$=key(ivm02_dev,end=l1900)
    if pos(firm_id$=ivm02k$)<>1 goto l1900
    call pgmdir$+"adc_progress.aon","S","","","",ivm02k$(3,2)+" "+ivm02k$(5,p[0]),0,0,1,meter_num,status
    extract record (ivm02_dev,key=ivm02k$) ivm02a$

rem --- Get Current Activity From ivm-12

    read record (ivm12_dev,key=ivm02k$+ivyear$+ivperiod$,dom=l1400) ivm12a$
    onhand=onhand-a[1]-a[2]+a[3]+a[4]-a[5]-a[6]+a[7]-a[8]

l1400: rem --- Get Future Activity From ivm-12

    ivm12k$=key(ivm12_dev,end=l1600)
    if pos(ivm02k$=ivm12k$)<>1 goto l1600
    read record (ivm12_dev) ivm12a$
    onhand=onhand-a[1]-a[2]+a[3]+a[4]-a[5]-a[6]+a[7]-a[8]
    goto l1400

l1600: rem --- Set Beginning Balance For ivm-12

    dim a1$(0),a2$(0),a[12]
    a0$=ivm02k$+ivyear$+ivperiod$
    read record (ivm12_dev,key=a0$,dom=*next) ivm12a$
    a[0]=onhand
    write record (ivm12_dev,key=a0$) ivm12a$

rem --- Get Next ivm-02 Record

    read (ivm02_dev,key=ivm02k$); rem "Advance file pointer
    goto l1000

l1900: rem --- Position ivm-07

    x$="Setting Lot/Serial's Beginning Balance"
    x=4+p[0]+p[2]
    gosub l6000
    read (ivm07_dev,key=firm_id$,dom=*next)

l2000: rem --- Get On-Hand Quantity From ivm-07

    ivm07k$=key(ivm07_dev,end=done)
    if pos(firm_id$=ivm07k$)<>1 goto done
    call pgmdir$+"adc_progress.aon","S","","","",ivm07k$(3,2)+" "+ivm07k$(5,p[0])+" "+ivm07k$(25,p[2]),0,0,1,meter_num,status
    extract record (ivm07_dev,key=ivm07k$) ivm07a$

rem --- Get Current Activity From ivm-17

    read record (ivm17_dev,key=ivm07k$+ivyear$+ivperiod$,dom=l2400) ivm17a$
    onhand=onhand-a[1]-a[2]+a[3]+a[4]-a[5]-a[6]+a[7]-a[8]

l2400: rem --- Get Future Activity From ivm-17

    ivm17k$=key(ivm17_dev,end=l2600)
    if pos(ivm07k$=ivm17k$)<>1 goto l2600
    read record (ivm17_dev) ivm17a$
    onhand=onhand-a[1]-a[2]+a[3]+a[4]-a[5]-a[6]+a[7]-a[8]
    goto l2400

l2600: rem --- Set Beginning Balance For ivm-17

    dim a1$(0),a2$(0),a[12]
    a0$=ivm07k$+ivyear$+ivperiod$
    read record (ivm17_dev,key=a0$,dom=*next) ivm17a$
    a[0]=onhand
    write record (ivm17_dev,key=a0$) ivm17a$

rem --- Get Next ivm-07 Record

    read (ivm07_dev,key=ivm07k$); rem "Advance file pointer
    goto l2000

done: rem --- All done

    goto std_exit

l6000: rem --- Update screen

    print @(40,3),x$,'cl',@(0,5),'ce',
    call pgmdir$+"adc_progress.aon","N","","","Updating","",x,0,1,meter_num,status
    return

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    call stbl("+DIR_SYP")+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5)),
:                                str(err),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src

rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5)),
:                                   str(err),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    run stbl("+DIR_SYP")+"bas_process_end.bbj",err=*next
    release

rem #endinclude std_end.src

    end
