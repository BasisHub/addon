rem --- Rebuild Inventory Beginning Balances
rem --- Program ivx_rebuild_summ_bal v8.0.0 23Jun2010 (ivx_ga)
rem --- Created by adx_codeport.bbj v1.1.5 (06/23/2010 11:05:28)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright (c) 1981-2007 AddonSoftware
rem --- All Rights Reserved

    seterr std_error
    setesc std_error

rem --- Retrieve the program path

    pgmdir$=stbl("+dir_pgm",err=*next)

rem --- Retrieve sysinfo data

    sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=*next)
    milestone=50
    milestone=num(stbl("+MILESTONE",err=*next),err=*next)
    firm_id$=sysinfo.firm_id$
	
rem --- Get user approval to proceed

    msg_id$="AON_RUN_QUERY"
    dim x$:stbl("+SYSINFO_TPL")
    dim msg_tokens$[1]
    x$=stbl("+SYSINFO")                                                            
    msg_tokens$[1]=x.task_desc$
rem    gosub disp_message
rem    if msg_opt$<>"Y" then goto std_exit_no_update

dim info$[20]
    call pgmdir$+"adc_application.aon","IV",info$[all]
    if info$[3]<>"Y" goto std_exit_no_update
	
rem --- Open/Lock files

    files=5,begfile=1,endfile=files
    dim files$[files],options$[files],ids$[files],templates$[files],channels[files]
    files$[1]="ivm-02",ids$[1]="IVM_ITEMWHSE"
    files$[2]="ivm-07",ids$[2]="IVM_LSMASTER"
    files$[3]="ivm-12",ids$[3]="IVM_ITEMACT"
    files$[4]="ivm-17",ids$[4]="IVM_LSACT"
    files$[5]="ivs_params",ids$[5]="IVS_PARAMS"

    call pgmdir$+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],
:                                   ids$[all],templates$[all],channels[all],batch,status
    if status goto std_exit
    ivm02_dev=channels[1]
    ivm07_dev=channels[2]
    ivm12_dev=channels[3]
    ivm17_dev=channels[4]
    ivs01a_dev=channels[5]

rem --- Dimension string templates

    dim ivm02a$:templates$[1],ivm07a$:templates$[2],ivm12a$:templates$[3],
:       ivm17a$:templates$[4],ivs01a$:templates$[5]
    ivm12a_tpl$=templates$[3],ivm17a_tpl$=templates$[4]
	
rem --- Retrieve parameter records

    ivs01a_key$=firm_id$+"IV00"
    find record (ivs01a_dev,key=ivs01a_key$,err=std_missing_params) ivs01a$
    ivperiod$=ivs01a.current_per$
    ivyear$=ivs01a.current_year$
    if pos(ivs01a.lotser_flag$="LS")>0 ls_firm_id$="Y" else ls_firm_id$="N"

rem --- Initializations

    precision num(ivs01a.precision$)
	more=1
	
rem --- Options

    number=1; dim message$[number]
    rem message$[0]="This utility resets the ivm-12 and ivm-17 beginning balances"
    rem message$[1]="for the current period. It uses the current on-hand quantities"
    rem message$[2]="from ivm-02 and IVM-07, and current and future activity from"
    rem message$[3]="ivm-12 and ivm-17 to calculate the beginning balance."
    message$[0]="Rebuild "+ivperiod$+"/"+ivyear$+" IV Warehouse Summary Beginning Balances (Yes/No)"

    call pgmdir$+"adc_yesno.aon",0,message$[0],0,v$,v3
    if v$<>"YES" goto std_exit_no_update

rem --- Background

    call pgmdir$+"adc_progress.aon","N","IVM_ITEMWHSE","","","",0,0,1,meter_num,status

rem --- Position ivm-02

    read (ivm02_dev,key=firm_id$,dom=*next)

rem --- Get On-Hand Quantity From ivm-02
    while more
        read record (ivm02_dev,end=*break)ivm02a$
        if ivm02a.firm_id$<>firm_id$ then break

		total_recs=total_recs+1
		if mod(total_recs,milestone)=0 then call stbl("+DIR_PGM")+"adc_progress.aon","S","","","","",0,0,milestone,meter_num,status

		rem --- Get Current Activity From ivm-12

		dim ivm12a$:ivm12a_tpl$
		ivm12a_key$=ivm02a.firm_id$+ivm02a.warehouse_id$+ivm02a.item_id$+ivyear$+ivperiod$
		onhand=ivm02a.qty_on_hand

		read record (ivm12_dev,key=ivm12a_key$,dom=*next) ivm12a$

		onhand=onhand-ivm12a.qty_received-ivm12a.qty_built+ivm12a.qty_sold+ivm12a.qty_issued-ivm12a.qty_adjust-ivm12a.qty_xfer_in+ivm12a.qty_xfer_out-ivm12a.qty_returned

		rem --- Get Future Activity From ivm-12
		
		while more

			read record (ivm12_dev,end=*break)ivm12a$
			if pos(ivm02a.firm_id$+ivm02a.warehouse_id$+ivm02a.item_id$=ivm12a$)<>1 then break
			onhand=onhand-ivm12a.qty_received-ivm12a.qty_built+ivm12a.qty_sold+ivm12a.qty_issued-ivm12a.qty_adjust-ivm12a.qty_xfer_in+ivm12a.qty_xfer_out-ivm12a.qty_returned
		wend

		rem --- Set Beginning Balance For ivm-12

		dim ivm12a$:ivm12a_tpl$
		ivm12a.firm_id$=ivm02a.firm_id$
		ivm12a.warehouse_id$=ivm02a.warehouse_id$
		ivm12a.item_id$=ivm02a.item_id$
		ivm12a.year$=ivyear$
		ivm12a.period$=ivperiod$
	
		read record (ivm12_dev,key=ivm12a_key$,dom=*next) ivm12a$
		ivm12a.beg_balance=onhand
		write record (ivm12_dev,key=ivm12a_key$) ivm12a$

    wend

rem --- Position ivm-07

	if ls_firm_id$<>"Y" then goto std_exit
    call pgmdir$+"adc_progress.aon","D","","","","",0,0,0,meter_num,status
    call pgmdir$+"adc_progress.aon","N","IVM_LSMASTER","","","",0,0,1,meter_num,status
	total_recs=0
	
    read (ivm07_dev,key=firm_id$,dom=*next)

rem --- Get On-Hand Quantity From ivm-07

    while more
        read record (ivm07_dev,end=*break)ivm07a$
        if ivm07a.firm_id$<>firm_id$ then break

		total_recs=total_recs+1
		if mod(total_recs,milestone)=0 then call stbl("+DIR_PGM")+"adc_progress.aon","S","","","","",0,0,milestone,meter_num,status

		rem --- Get Current Activity From ivm-17

		dim ivm17a$:ivm17a_tpl$
		ivm17a_key$=ivm07a.firm_id$+ivm07a.warehouse_id$+ivm07a.item_id$+ivm07a.lotser_no$+ivyear$+ivperiod$
		onhand=ivm07a.qty_on_hand
	
		read record (ivm17_dev,key=ivm17a_key$,dom=*next) ivm17a$

		onhand=onhand-ivm17a.qty_received-ivm17a.qty_built+ivm17a.qty_sold+ivm17a.qty_issued-ivm17a.qty_adjust-ivm17a.qty_xfer_in+ivm17a.qty_xfer_out-ivm17a.qty_returned

		rem --- Get Future Activity From ivm-17
		
		while more

			read record (ivm17_dev,end=*break)ivm17a$
			if pos(ivm07a.firm_id$+ivm07a.warehouse_id$+ivm07a.item_id$+ivm07a.lotser_no$=ivm17a$)<>1 then break
			onhand=onhand-ivm17a.qty_received-ivm17a.qty_built+ivm17a.qty_sold+ivm17a.qty_issued-ivm17a.qty_adjust-ivm17a.qty_xfer_in+ivm17a.qty_xfer_out-ivm17a.qty_returned
		wend

		rem --- Set Beginning Balance For ivm-17

		dim ivm17a$:ivm17a_tpl$
		ivm17a.firm_id$=ivm07a.firm_id$
		ivm17a.warehouse_id$=ivm07a.warehouse_id$
		ivm17a.item_id$=ivm07a.item_id$
		ivm17a.lotser_no$=ivm07a.lotser_no$
		ivm17a.year$=ivyear$
		ivm17a.period$=ivperiod$
	
		read record (ivm17_dev,key=ivm17a_key$,dom=*next) ivm17a$
		ivm17a.beg_balance=onhand
		write record (ivm17_dev,key=ivm17a_key$) ivm17a$

    wend

done: rem --- All done

    goto std_exit

disp_message:rem --- Display Message Dialog

    call stbl("+DIR_SYP")+"bac_message.bbj",msg_id$,msg_tokens$[all],msg_opt$,table_chans$[all]

    return

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    call stbl("+DIR_SYP")+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5)),
:                                str(err),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src

rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5)),
:                                   str(err),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    msg_id$="UPDATE_COMPLETE"
    dim msg_tokens$[1]
    msg_opt$=""
    gosub disp_message

std_exit_no_update:

    call pgmdir$+"adc_progress.aon","D","","","","",0,0,0,meter_num,status
    run stbl("+DIR_SYP")+"bas_process_end.bbj",err=*next
    release

rem #endinclude std_end.src

    end
