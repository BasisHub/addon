rem ivc - Inventory Warning Messages
rem Program ivc_warnings v8.0.0 30Apr2006 (ivc_sb)
rem Created by adx_progconv.bbx v1.0.2 (04/30/2006 02:16:53)

rem  +-----------------------------------------+
rem  | AddonSoftware Version 8.0.0 - 01Oct2006 |
rem  |  Copyright (c) 1981-2006 AddonSoftware  |
rem  |          All Rights Reserved            |
rem  +-----------------------------------------+

rem --- ACTION$: Warning to display (Input)
rem ---          A=Accounts Payable Required
rem ---          L=Lot/Serial Required
rem ---          S=Standard Costing Required
rem ---          F=LIFO/FIFO Required
rem ---          P=Physical Inventory File In Use
rem ---          R=Accounts Receivable Required
rem --- STATUS : 0=No Error (Returned)

    seterr std_error
    setesc std_error
    enter action$,status

rem --- Get Translator Object

    use ::bbtranslator.bbj::BBTranslator
    declare BBTranslator Translate!
    Translate! = BBTranslator.getInstance( stbl("+PROPS_NAME"), stbl("+USER_LOCALE"), null(), stbl("+PROPS_PATH") )
    
rem --- Retrieve the program path

    pgmdir$=stbl("+DIR_PGM",err=*next)

rem --- Initializations

    dim message$[1]
    status=0

rem --- Branch based on ACTION$

    on pos(action$="LSFPAR") goto done,lot_serial,standard_costing,lifo_fifo,
:                                 physical_inventory,accounts_payable,accounts_receivable

lot_serial: rem --- Lot/Serial Required

    message$[0]=Translate!.getTranslation("AON_INVENTORY_PARAMETERS_INDICATE_THAT_LOTTED/SERIALIZED_INVENTORY_IS_")+
:               Translate!.getTranslation("AON_NOT_BEING_USED._THIS_TASK_MAY_NOT_BE_USED_UNLESS_LOTTED/SERIALIZED_")+
:               Translate!.getTranslation("AON_INVENTORY_IS_IN_USE.")
    goto error_message

standard_costing: rem --- Standard Costing Required

    message$[0]=Translate!.getTranslation("AON_THE_INVENTORY_COSTING_METHOD_IN_THE_INVENTORY_PARAMETERS_")+
:               Translate!.getTranslation("AON_MUST_BE_SET_TO_STANDARD_COSTING_IN_ORDER_TO_USE_THIS_TASK.")
    goto error_message

lifo_fifo: rem --- LIFO/FIFO Required

    message$[0]=Translate!.getTranslation("AON_INVENTORY_PARAMETERS_INDICATE_THAT_LIFO_OR_FIFO_INVENTORY_IS_")+
:               Translate!.getTranslation("AON_NOT_BEING_USED._THIS_TASK_MAY_NOT_BE_USED_UNLESS_LIFO_OR_FIFO_")+
:               Translate!.getTranslation("AON_INVENTORY_IS_IN_USE.")
    goto error_message

physical_inventory: rem --- Physical Inventory File In Use

    message$[0]=Translate!.getTranslation("AON_THE_PHYSICAL_INVENTORY_FILE_IS_CURRENTLY_IN_USE_BY_ANOTHER_")+
:               Translate!.getTranslation("AON_USER._THIS_TASK_MAY_NOT_BE_USED_WHILE_THAT_FILE_IS_IN_USE.")
    goto error_message

accounts_payable: rem --- AP Is Not Installed

    x$=Translate!.getTranslation("AON_ACCOUNTS_PAYABLE")
    goto l1550

accounts_receivable: rem --- AR Is Not Installed

    x$=Translate!.getTranslation("AON_ACCOUNTS_RECEIVABLE")

l1550: rem --- Missing required application

    message$[0]=x$+Translate!.getTranslation("AON__IS_REQUIRED_TO_RUN_THIS_TASK.")

error_message: rem --- Display message

    call pgmdir$+"adc_stdmessage.aon",3,message$[all],0,y,x,v$,v3

done: rem --- All Done

    status=0
    goto std_exit

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_error_exit)
    call pgmdir$+"adc_error.aon",err=std_error_exit,pgm(-2),str(tcb(5):"00000"),
:                                str(err:"000"),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src

rem #include std_exit.src

std_exit: rem --- Standard called program exit (01Mar2006)

    exit

rem #endinclude std_exit.src

    end
