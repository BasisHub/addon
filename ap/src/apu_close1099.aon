rem --- Close Form 1099 Year
rem --- Program apu_close1099 v8.0.0 17Dec2006 (apu_ea)
rem --- Created by adx_codeport.bbx v1.1.5 (12/17/2006 12:24:51)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright BASIS International Ltd.  All Rights Reserved.
rem --- All Rights Reserved

    setesc std_error
    seterr std_error

rem --- Retrieve the program path

    pgmdir$=stbl("+DIR_PGM",err=*next)

rem --- Retrieve sysinfo data

    sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=*next)
    milestone=num(stbl("+MILESTONE",err=*next),err=*next)
    firm_id$=sysinfo.firm_id$

rem --- Open/Lock files

    files=2,begfile=1,endfile=files
    dim files$[files],options$[files],ids$[files],templates$[files],channels[files]
    files$[1]="aps_params",ids$[1]="APS_PARAMS"
    files$[2]="apm-02",ids$[2]="APM_VENDHIST"
    call pgmdir$+"adc_fileopen.aon",action,begfile,endfile,files$[all],options$[all],
:                                   ids$[all],templates$[all],channels[all],batch,status
    if status goto std_exit_no_update
    aps01_dev=channels[1]
    apm02_dev=channels[2]

rem --- Dimension string templates

    dim aps01a$:templates$[1],apm02a$:templates$[2]

rem --- Retrieve parameter records

    aps01a_key$=firm_id$+"AP00"
    find record (aps01_dev,key=aps01a_key$,err=std_missing_params) aps01a$

rem --- Initializations

    morevendors=1
    msg_id$="AP_1099_CLS"
    dim msg_tokens$[1]
    msg_tokens$[1]=aps01a.cur_1099_yr$
    
rem --- Get user confirmation to continue

    gosub disp_message
    if msg_opt$="N" goto std_exit_no_update

rem --- Start progress meter and position vendor detail file

    call pgmdir$+"adc_progress.aon","NC","","","","",0,apm02_dev,1,meter_num,status
    read (apm02_dev,key=firm_id$,dom=*next)

rem --- Read next Vendor Detail (apm-02) record

    while morevendors
          k$=key(apm02_dev,end=*break)
          if pos(firm_id$=k$)<>1 break
          extract record (apm02_dev) apm02a$;rem Advisory Locking
          call pgmdir$+"adc_progress.aon","S","","","","",0,0,1,meter_num,status

          rem --- Roll 1099 buckets

          apm02a.pri_cal_pmt=apm02a.cur_cal_pmts
          apm02a.cur_cal_pmts=apm02a.nxt_cyr_pmts
          apm02a.nxt_cyr_pmts=0
          apm02a$=field(apm02a$)
          write record (apm02_dev) apm02a$

          rem --- Loop back for next vendor detail record

    wend

rem --- Increment the 1099 year

    extract record (aps01_dev,key=aps01a_key$,err=std_missing_params) aps01a$;rem Advisory Locking
    year=num(aps01a.cur_1099_yr$)+1
    aps01a.cur_1099_yr$=str(year:"0000")
    aps01a$=field(aps01a$)
    write record (aps01_dev) aps01a$
    goto std_exit

disp_message: rem --- Display Message Dialog

    call stbl("+DIR_SYP")+"bac_message.bbj",msg_id$,msg_tokens$[all],msg_opt$,table_chans$[all]
    return

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_SYP",err=std_error_exit)
    call pgmdir$+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5)),
:                                str(err),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src

rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5)),
:                                   str(err),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    msg_id$="UPDATE_COMPLETE"
    dim msg_tokens$[1]
    msg_opt$=""
    gosub disp_message

std_exit_no_update:

    call pgmdir$+"adc_progress.aon","D","","","","",0,0,0,meter_num,status
    run stbl("+DIR_SYP")+"bas_process_end.bbj",err=*next
    release

rem #endinclude std_end.src

    end
