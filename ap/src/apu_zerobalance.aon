rem --- Check & Zero Balance Invoice Purge Register
rem --- Program apu_zerobalance v8.0.0 05Feb2007 (apu_ga)
rem --- Created by adx_codeport.bbx v1.1.3 (02/05/2007 04:01:05)

rem --- AddonSoftware Version 8.0.0 - 01Jan2007
rem --- Copyright (c) 1981-2007 AddonSoftware
rem --- All Rights Reserved

rem --- Currently just an incomplete stub

    seterr std_error
    setesc std_error

rem --- Close printer and destroy current progress meter (if one exists)

    close (printer_dev,err=*next)
    call pgmdir$+"adc_progress.aon","D","","","","",0,0,0,0,status

rem --- Initializations

    msg_id$="AP_INV_PUR"
    dim msg_tokens$[1]
    msg_tokens$[1]=fndate$(purgedate$)

rem --- Get user approval to update

    gosub disp_message
    if msg_opt$="N" goto std_exit_no_update

rem --- Start progress meter and position header file

    call pgmdir$+"adc_progress.aon","NC","","","","",0,apt01_dev,1,meter_num,status
    read (apt01_dev,key=firm_id$,dom=*next)

rem --- Delete invoices and related records

    while moreheaders
          k$=key(apt01_dev,end=*break)
          if pos(firm_id$=k$)<>1 break
          read record (apt01_dev,key=k$) apt01a$
          call pgmdir$+"adc_progress.aon","S","","","","",0,0,1,meter_num,status

          rem --- Okay to purge this invoice?

          apt01a_key$=k$
          invoice$=apt01a.firm_id$+apt01a.ap_type$+apt01a.ap_inv_no$
          read (apw06_dev,key=invoice$,dom=*next)
          k$=key(apw06_dev,end=*continue)
          if pos(invoice$=k$)<>1 continue

          rem --- Remove the Invoice Header record and position the 
          rem --- Invoice Detail (apt-11) file

          remove (apt01_dev,key=apt01a_key$)
          invoice$=apt01a.firm_id$+apt01a.ap_type$+apt01a.vendor_id$+
:                  apt01a.ap_inv_no$
          read (apt11_dev,key=invoice$,dom=*next)

          rem --- Remove Invoice Detail (apt-11) records for this invoice

          while moredetail
                k$=key(apt11_dev,end=*break)
                if pos(invoice$=k$)<>1 break
                remove (apt11_dev,key=k$)
          wend

          rem --- Position the Invoice Distribution (apt-02) file

          invoice$=apt01a.firm_id$+apt01a.ap_type$+apt01a.vendor_id$+"I"+
:                  apt01a.ap_inv_no$
          read (apt02_dev,key=invoice$,dom=*next)

          rem --- Remove Invoice Distribution (apt-02) records

          while moredetail
                k$=key(apt02_dev,end=*break)
                if pos(invoice$=k$)<>1 break
                remove (apt02_dev,key=k$)
          wend

          rem --- Loop back for next invoice header

    wend

rem --- All done

    goto std_exit

rem --- Functions

rem --- Date/time handling functions

    def fndate$(q$)
        q1$=""
        q1$=date(jul(num(q$(1,4)),num(q$(5,2)),num(q$(7,2)),err=*next),err=*next)
        if q1$="" q1$=q$
        return q1$
    fnend

disp_message: rem --- Display Message Dialog

    call stbl("+DIR_SYP")+"bac_message.bbj",msg_id$,msg_tokens$[all],msg_opt$,table_chans$[all]
    return

rem #include std_error.src

std_error: rem --- Standard error handler (01Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    call stbl("+DIR_SYP")+"bac_error.bbj",err=std_error_exit,pgm(-2),str(tcb(5)),
:                                str(err),rd_err_text$,rd_err_act$
    if pos("EXIT"=rd_err_act$) goto std_error_exit
    if pos("ESCAPE"=rd_err_act$) seterr 0;setesc 0
    if pos("RETRY"=rd_err_act$) retry
std_error_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_error_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_error_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_error_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_error_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_error.src

rem #include std_missing_params.src

std_missing_params: rem --- Standard missing parameter handler (15Apr2006)

    rd_err_text$=""
    if tcb(5)<>0 and pgm(-1)=pgm(-2) rd_err_text$=pgm(tcb(5))
    pgmdir$=stbl("+DIR_PGM",err=std_missing_params_exit)
    call pgmdir$+"adc_noparams.aon",err=std_missing_params_exit,pgm(-2),str(tcb(5):"00000"),
:                                   str(err:"000"),rd_err_text$,rd_err_act$
std_missing_params_exit:
    master_user$=cvs(stbl("+MASTER_USER",err=std_missing_params_release),2)
    sysinfo_template$=stbl("+SYSINFO_TPL",err=std_missing_params_release)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=std_missing_params_release)
    if cvs(sysinfo.user_id$,2)=master_user$ escape
std_missing_params_release:
    status=999
    if pgm(-1)<>pgm(-2) exit
    release

rem #endinclude std_missing_params.src

rem #include std_end.src

std_exit: rem --- Standard program end (01Mar2006)

    msg_id$="UPDATE_COMPLETE"
    dim msg_tokens$[1]
    msg_opt$=""
    gosub disp_message

std_exit_no_update:

    call pgmdir$+"adc_progress.aon","D","","","","",0,0,0,0,status
    run stbl("+DIR_SYP")+"bas_process_end.bbj",err=*next
    release

rem #endinclude std_end.src

    end
