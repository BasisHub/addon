[Program]
Creation Date=2007-05-30
Creation Time=6:44:18
Event Set=LEGACY
Generator Program=gb_func
Last Build Date=2012-08-14
Last Build Time=16:17:15
Precision=99
Program Name=arr_digitalDashboard
Remarks=Yes
Resource File=arr_digitalDashboard.arc
Show Forms=All

[Init]
declare BBjSysGui sysgui!
declare BBjTopLevelWindow window!
declare BBjListButton year!
declare BBjFont font!

declare BBjRecordSet rs!
declare BBjRecordData data!

declare BBjRecordSet params!
declare BBjRecordData periods!

declare BBjGroupBox chartGroupBox!
declare BBjProgressBar progressBar!
declare BBjGroupBox progressGroupBox!

declare BBjRecordSet labelRs!
declare BBjRecordData labelData!

REM - Get the window
    sysgui! = BBjAPI().getSysGui()
    window! = cast(BBjTopLevelWindow, sysgui!.getWindow(0))
    
REM - Create the charts
    chartLeft = 180
    chartTop = 110

    newWidth = window!.getWidth()
    newHeight = window!.getHeight()

    chartWidthOffset = 200
    chartHeightOffset = 130
    
    groupBoxWidthOffset = 180
    groupBoxHeightOffset = 90

    chartWidth = newWidth - chartWidthOffset
    chartHeight = newHeight - chartHeightOffset

    groupBoxWidth = newWidth - groupBoxWidthOffset
    groupBoxHeight = newHeight - groupBoxHeightOffset

    progressBar! = window!.addProgressBar(701, 290, 85, 75, 20, 0, 3)
    progressBar!.setVisible(0)

    lineChart1! = window!.addLineChart(505, 15, 530, 135, 90, "", "", 1, 0)
    lineChart1!.setTitle("YTD Sales")
    lineChart1Big! = window!.addLineChart(605, chartLeft, chartTop, chartWidth, chartHeight, "", "", 1, 1)
    lineChart1Big!.setTitle("Fiscal Year to Date Sales")

    barChart2! = window!.addBarChart(504, 15, 425, 135, 90, "", "", 97, 90, 0, 1, 0); barChart2!.setTitle("Customer Type")
    barChart2Big! = window!.addBarChart(604, chartLeft, chartTop, chartWidth, chartHeight, "", "", 97, 90, 1, 1, 0); barChart2Big!.setTitle("Period Sales per Customer Type")

    pieChart2! = window!.addPieChart(503, 15, 320, 135, 90, 0, 1)
    pieChart2!.setTitle("Customer Type")
    pieChart2Big! = window!.addPieChart(603, chartLeft, chartTop, chartWidth, chartHeight, 1, 1)
    pieChart2Big!.setTitle("Period Sales per Customer Type")

    barChart1! = window!.addBarChart(502, 15, 215, 135, 90, "", "", 7, 50, 0, 1, 0); barChart1!.setTitle("Salesperson")
    barChart1Big! = window!.addBarChart(602, chartLeft, chartTop, chartWidth, chartHeight, "", "", 7, 50, 1, 1, 0); barChart1Big!.setTitle("Period Sales per Salesperson")

    pieChart1! = window!.addPieChart(501, 15, 110, 135, 90, 0, 1); pieChart1!.setTitle("Salesperson")
    pieChart1Big! = window!.addPieChart(601, chartLeft, chartTop, chartWidth, chartHeight, 1, 1); pieChart1Big!.setTitle("Period Sales per Salesperson")
    visibleControlID = 601

    chartGroupBox! = cast(BBjGroupBox, window!.getControl("chartGroupBox"))
    progressBarGroupBox!= cast(BBjGroupBox, window!.getControl("progressGroupBox"))
    chartGroupBox!.setSize(groupBoxWidth, groupBoxHeight)
    progressBarGroupBox!.setSize(groupBoxWidth, groupBoxHeight)

REM - get firm id and firm name
    sysinfo_template$=stbl("+SYSINFO_TPL",err=*next)
    dim sysinfo$:sysinfo_template$
    sysinfo$=stbl("+SYSINFO",err=*next)
    firm_id$=sysinfo.firm_id$
    firm_name$=sysinfo.firm_name$
    title$ = window!.getTitle()
    title$ = title$ + " - " + firm_name$
    window!.setTitle(title$)

REM - get current accounting period and year
    sql$ = "SELECT CURRENT_PER, CURRENT_YEAR "
    sql$ = sql$ + "FROM ARS_PARAMS "
    sql$ = sql$ + "WHERE FIRM_ID = '" + firm_id$ + "'"
        
    sql_chan=sqlunt
    sqlopen(sql_chan)stbl("+DBNAME")
    sqlprep(sql_chan)sql$
    dim read_tpl$:sqltmpl(sql_chan)
    sqlexec(sql_chan)

    rs! = BBJAPI().createMemoryRecordSet("TOTAL_PERS:C(2),CURRENT_PER:C(2),CURRENT_YEAR:C(4),CAL_START_DATE:C(4),"+
:   "PER_ENDING_01:C(4),PER_ENDING_02:C(4),PER_ENDING_03:C(4),PER_ENDING_04:C(4),PER_ENDING_05:C(4),PER_ENDING_06:C(4),"+
:   "PER_ENDING_07:C(4),PER_ENDING_08:C(4),PER_ENDING_09:C(4),PER_ENDING_10:C(4),PER_ENDING_11:C(4),PER_ENDING_12:C(4),PER_ENDING_13:C(4)")
    
    read_tpl$ = sqlfetch(sql_chan,err=*break)
    periods! = rs!.getEmptyRecordData()    
    periods!.setFieldValue("CURRENT_PER",read_tpl.current_per$)
    periods!.setFieldValue("CURRENT_YEAR",pad(read_tpl.current_year$,4))

    gosub get_fiscal_calendar

REM - Get the Group box
    groupBox! = window!.getControl(101)

REM - set the year selections
    sql$="SELECT YEAR "
    sql$=sql$+"FROM GLS_CALENDAR "
    sql$=sql$+"WHERE FIRM_ID = '" + firm_id$ + "' "
    sql$=sql$+"ORDER BY YEAR"
        
    sql_chan=sqlunt
    sqlopen(sql_chan)stbl("+DBNAME")
    sqlprep(sql_chan)sql$
    dim read_tpl$:sqltmpl(sql_chan)
    sqlexec(sql_chan)
    
    i=0
    index=0
    yearList$=""
    while 1
        read_tpl$=sqlfetch(sql_chan,err=*break) 
        yearList$=yearList$+pad(read_tpl.year$,4)+$0A$
        if num(read_tpl.year$)=currentYear then index=i
        i=i+1
    wend
    sqlclose(sql_chan)

    year! = cast(BBjListButton, window!.getControl("year"))
    year!.insertItems(0, yearList$)
    year!.selectIndex(index)

REM - set fonts on labels
    font! = sysgui!.makeFont("Tahoma", 8, sysgui!.PLAIN)
    for per=1 to 12
        window!.getControl("12per"+str(per:"00")).setFont(font!)
    next per
    for per=1 to 13
        window!.getControl("13per"+str(per:"00")).setFont(font!)
    next per

REM - set font on the year list button
    window!.getControl(116).setFont(font!)

REM - set fonts on the group boxes
    font! = sysgui!.makeFont("Tahoma", 10, sysgui!.BOLD)
    window!.getControl(100).setFont(font!)
    window!.getControl(101).setFont(font!)
    window!.getControl(109).setFont(font!)
    window!.getControl(117).setFont(font!)

window!.setVisible(1)

gosub UPDATE_GRAPHS

REM - Function to return which control was clicked on given the (x,y) coordinates of the mouse click
DEF FNHITTEST(ptx,pty)
    for i = 501 to 505
        control! = window!.getControl(i)
        x=control!.getX(),y=control!.getY(),w=control!.getWidth(),h=control!.getHeight()
        if ptx>=x and pty>=y and ptx<x+w and pty<y+h then
            return i
        endif
    next i
    return 0
FNEND


[Event Win=101 ID=0 Code=S <WIN_RESIZE> (W101_C0_WIN_RESIZE)]
rem ' Window resized

newWidth = window!.getWidth()
newHeight = window!.getHeight()

chartWidth = newWidth - chartWidthOffset
chartHeight = newHeight - chartHeightOffset
groupBoxWidth = newWidth - groupBoxWidthOffset
groupBoxHeight = newHeight - groupBoxHeightOffset

lineChart1Big!.setSize(chartWidth, chartHeight)
barChart2Big!.setSize(chartWidth, chartHeight)
pieChart2Big!.setSize(chartWidth, chartHeight)
barChart1Big!.setSize(chartWidth, chartHeight)
pieChart1Big!.setSize(chartWidth, chartHeight)

chartGroupBox!.setSize(groupBoxWidth, groupBoxHeight)
progressBarGroupBox!.setSize(groupBoxWidth, groupBoxHeight)

[Event Win=101 ID=0 Code=X <WIN_CLOSE> (W101_C0_WIN_CLOSE)]
rem ' Window Closed
rem ' gb__event! = cast(BBjCloseEvent,bbjapi().getSysGui().getLastEvent())
rem ' gb__window! = gb__event!.getControl()

release

[Event Win=101 ID=0 Code=d <MOUSE_DOWN> (W101_C0_MOUSE_DOWN)]
rem ' Mouse button down

rem declare BBjControl gb__control!
gb__event! = cast(BBjMouseDownEvent,bbjapi().getSysGui().getLastEvent())
gb__control! = gb__event!.getControl()

rem ' Mouse button: gb__event!.getButton()
rem ' Mouse location: gb__event!.getX(), gb__event!.getY()
rem ' Shift pressed: gb__event!.isShiftDown()
rem ' Ctrl pressed: gb__event!.isControlDown()
rem ' Alt pressed: gb__event!.isAltDown()

    event!=bbjapi().getSysGui().getLastEvent()
    ptx=event!.getX(),pty=event!.getY()

    controlID = FNHITTEST(ptx,pty)

if controlID > 500 and controlID < 600 then
    visibleControlID = controlID + 100
    control! = window!.getControl(controlID+100)
    control!.setVisible(1)
    for i = 601 to 605
        if i <> controlID + 100 then
            control! = window!.getControl(i)
            control!.setVisible(0)
        endif
    next i 
endif

[Event Win=101 ID=102 Code=p <SCROLL_MOVE> (W101_C102_SCROLL_MOVE)]
rem ' Scroll bar moved

gb__event! = cast(BBjControlScrollEvent,bbjapi().getSysGui().getLastEvent())
rem ' gb__control! = gb__event!.getControl()
rem ' Scroll location: gb__event!.getPosition()

if (gb__event!.isAdjusting() = 0) then 
    if slider!.getValue() <> num(periods!.getFieldValue("CURRENT_PER")) then 
        periods!.setFieldValue("CURRENT_PER",str(slider!.getValue():"00"))
        gosub UPDATE_GRAPHS
    endif
endif

[Event Win=101 ID=116 Code=N2:19 <LIST_SELECT> (W101_C116_LIST_SELECT)]
rem ' Notify Event - List Control - List Selection (2)
rem ' gb__event! = cast(BBjListSelectEvent,bbjapi().getSysGui().getLastEvent())
rem ' gb__control! = gb__event!.getControl()

index = year!.getSelectedIndex()
sYear$ = year!.getItemAt(index)
if sYear$ <> periods!.getFieldValue("CURRENT_YEAR") then
    periods!.setFieldValue("CURRENT_YEAR",sYear$)
	gosub get_fiscal_calendar
    gosub UPDATE_GRAPHS
endif

[Event Win=101 ID=118 Code=p <SCROLL_MOVE> (W101_C118_SCROLL_MOVE)]
rem ' Scroll bar moved

gb__event! = cast(BBjControlScrollEvent,bbjapi().getSysGui().getLastEvent())
rem ' gb__event! = cast(BBjControlScrollEvent,bbjapi().getSysGui().getLastEvent())
rem ' gb__control! = gb__event!.getControl()
rem ' Scroll location: gb__event!.getPosition()

if (gb__event!.isAdjusting() = 0) then 
    if slider!.getValue() <> num(periods!.getFieldValue("CURRENT_PER")) then 
        periods!.setFieldValue("CURRENT_PER",str(slider!.getValue():"00"))
        gosub UPDATE_GRAPHS
    endif
endif


[Function (UPDATE_GRAPHS)]
rem ' -----------------------------------------------------------------
rem ' UPDATE_GRAPHS
rem ' -----------------------------------------------------------------

UPDATE_GRAPHS:

REM - set wait cursor
    window!.setCursor(3)

    chartGroupBox!.setVisible(0)
    progressBarGroupBox!.setVisible(1)
    progressBar!.setValue(0)
    progressBar!.setVisible(1)

REM - Get the desired month to query upon
    
    gosub set_up_period

REM - clear graphs
    barChart1!.clearData()
    barChart1Big!.clearData()

    pieChart1!.clearData()
    pieChart1Big!.clearData()

    barChart2!.clearData()
    barChart2Big!.clearData()

    pieChart2!.clearData()
    pieChart2Big!.clearData()

    lineChart1!.clearData()
    lineChart1Big!.clearData()

REM - Period sales per SalesRep
    declare java.util.ArrayList SalesRepsA!

    SalesRepsA! = new java.util.ArrayList()

    rem ' load the salepserson list for the given period
    sql$ = "SELECT T1.SLSPSN_CODE, T2.CODE_DESC AS SLSPSN_NAME, ROUND(SUM(T1.TOTAL_SALES),0) AS TOTAL "
    sql$ = sql$ + "FROM OPT_INVHDR T1 "
    sql$ = sql$ + "INNER JOIN ARC_SALECODE T2 ON T1.FIRM_ID = T2.FIRM_ID AND T2.RECORD_ID_F = 'F' AND T1.SLSPSN_CODE = T2.SLSPSN_CODE "
    sql$ = sql$ + "WHERE T1.FIRM_ID = '" + firm_id$ + "' AND (T1.INVOICE_DATE BETWEEN '" + periodBeginDate$ + "' AND '" + periodEndDate$ + "') "
    sql$ = sql$ + "GROUP BY T1.SLSPSN_CODE, T2.CODE_DESC "
    sql$ = sql$ + "ORDER BY TOTAL DESC"
        
    sql_chan=sqlunt
    sqlopen(sql_chan)stbl("+DBNAME")
    sqlprep(sql_chan)sql$
    dim read_tpl$:sqltmpl(sql_chan)
    sqlexec(sql_chan)

    rs! = BBJAPI().createMemoryRecordSet("SLSPSN_CODE:C(3),SLSPSN_NAME:C(20),TOTAL:N(1*)")

    while 1
        read_tpl$ = sqlfetch(sql_chan,err=*break)
        data! = rs!.getEmptyRecordData()    
        data!.setFieldValue("SLSPSN_CODE",read_tpl$.slspsn_code$)
        data!.setFieldValue("SLSPSN_NAME",read_tpl$.slspsn_name$)
        data!.setFieldValue("TOTAL",str(read_tpl$.total))
        rs!.insert(data!)
    wend
    sqlclose(sql_chan)

    progressBar!.setValue(1)

    seriesCount = rs!.getRecordCount()
    if seriesCount > 0 then
        rem ' re add the bar charts with the seriesCount
        barChart1!.destroy()
        barChart1Big!.destroy()

        barChart1! = window!.addBarChart(502, 15, 215, 135, 90, "", "", seriesCount, 50, 0, 1, 0); barChart1!.setTitle("Salesperson")
        barChart1Big! = window!.addBarChart(602, chartLeft, chartTop, chartWidth, chartHeight, "", "", seriesCount, 50, 1, 1, 0, $0010$); barChart1Big!.setTitle("Period Sales per Salesperson")

        rem ' manage the visiblity of the charts
        control! = window!.getControl(visibleControlID)
        control!.setVisible(1)

        counter = 0

        rs!.first()
        while 1
             data! = rs!.getCurrentRecordData()

             if num(data!.getFieldValue("TOTAL")) <> 0 then 

                 SalesRepsA!.add(counter, data!.getFieldValue("SLSPSN_NAME"))

                 barChart1!.setSeriesName(counter, str(counter))
                 barChart1Big!.setSeriesName(counter, cvs(data!.getFieldValue("SLSPSN_NAME"),3) + " - " + str(num(data!.getFieldValue("TOTAL")):"$###,##0.00-"))

                 counter = counter + 1

                 pieChart1!.setSliceValue(str(counter), num(data!.getFieldValue("TOTAL")))
                 pieChart1Big!.setSliceValue(cvs(data!.getFieldValue("SLSPSN_NAME"),3) + " - " + str(num(data!.getFieldValue("TOTAL")):"$###,##0.00-"), num(data!.getFieldValue("TOTAL")))

                 barChart1!.setCategoryName(counter, "")
                 barChart1!.setBarValue(SalesRepsA!.indexOf(data!.getFieldValue("SLSPSN_NAME")),counter,num(data!.getFieldValue("TOTAL")))

                 barChart1Big!.setCategoryName(counter, "")
                 barChart1Big!.setBarValue(SalesRepsA!.indexOf(data!.getFieldValue("SLSPSN_NAME")),counter,num(data!.getFieldValue("TOTAL")))

             fi

             rs!.next(err=*break)
        wend

    fi

    rs!.close()

REM - Period sales per Customer type
    declare java.util.ArrayList CustomersA!

    CustomersA! = new java.util.ArrayList()

    rem ' load the customer type list for the given period
    sql$ = "SELECT t2.CUSTOMER_TYPE, t3.CODE_DESC AS CUST_TYPE_DESC, round(sum(t1.TOTAL_SALES),0) as TOTAL "
    sql$ = sql$ + "FROM OPT_INVHDR t1 "
    sql$ = sql$ + "INNER JOIN ARM_CUSTDET t2 ON t1.FIRM_ID = t2.FIRM_ID and t1.CUSTOMER_ID = t2.CUSTOMER_ID "
    sql$ = sql$ + "INNER JOIN ARC_CUSTTYPE t3 on t2.FIRM_ID = t3.FIRM_ID and t3.RECORD_ID_L = 'L' and t2.CUSTOMER_TYPE = t3.CUSTOMER_TYPE "
    sql$ = sql$ + "WHERE t1.FIRM_ID = '" + firm_id$ + "' and (t1.INVOICE_DATE BETWEEN '" + periodBeginDate$ + "' AND '" + periodEndDate$ + "') "
    sql$ = sql$ + "GROUP BY t2.CUSTOMER_TYPE, t3.CODE_DESC ORDER BY TOTAL DESC"
        
    sql_chan=sqlunt
    sqlopen(sql_chan)stbl("+DBNAME")
    sqlprep(sql_chan)sql$
    dim read_tpl$:sqltmpl(sql_chan)
    sqlexec(sql_chan)

    rs! = BBJAPI().createMemoryRecordSet("CUSTOMER_TYPE:C(3),CUST_TYPE_DESC:C(20),TOTAL:N(1*)")

    while 1
        read_tpl$ = sqlfetch(sql_chan,err=*break)
        data! = rs!.getEmptyRecordData()    
        data!.setFieldValue("CUSTOMER_TYPE",read_tpl$.customer_type$)
        data!.setFieldValue("CUST_TYPE_DESC",read_tpl$.cust_type_desc$)
        data!.setFieldValue("TOTAL",str(read_tpl$.total))
        rs!.insert(data!)
    wend
    sqlclose(sql_chan)
    
    counter = 0

    progressBar!.setValue(2)

    seriesCount = rs!.getRecordCount()
    if seriesCount > 0 then
        rem ' re add the bar charts with the seriesCount
        barChart2!.destroy()
        barChart2Big!.destroy()

        barChart2! = window!.addBarChart(504, 15, 425, 135, 90, "", "", seriesCount, 90, 0, 1, 0); barChart2!.setTitle("Customer Type")
        barChart2Big! = window!.addBarChart(604, chartLeft, chartTop, chartWidth, chartHeight, "", "", seriesCount, 90, 1, 1, 0, $0010$); barChart2Big!.setTitle("Period Sales per Customer Type")

        rem ' manage the visiblity of the charts
        control! = window!.getControl(visibleControlID)
        control!.setVisible(1)

        rs!.first()
        while 1
             rem ' t$ = sqlfetch(chan,err=*BREAK)
             data! = rs!.getCurrentRecordData()         

             if num(data!.getFieldValue("TOTAL")) <> 0 then 

                 CustomersA!.add(counter, data!.getFieldValue("CUST_TYPE_DESC"))

                 barChart2!.setSeriesName(counter, str(counter))
                 barChart2Big!.setSeriesName(counter, data!.getFieldValue("CUST_TYPE_DESC"))

                 counter = counter + 1

                 pieChart2!.setSliceValue(str(counter), num(data!.getFieldValue("TOTAL")))
                 pieChart2Big!.setSliceValue(data!.getFieldValue("CUST_TYPE_DESC"), num(data!.getFieldValue("TOTAL")))

                 barChart2!.setCategoryName(counter, "")
                 barChart2!.setBarValue(CustomersA!.indexOf(data!.getFieldValue("CUST_TYPE_DESC")), counter, num(data!.getFieldValue("TOTAL")))

                 barChart2Big!.setCategoryName(counter, "")
                 barChart2Big!.setBarValue(CustomersA!.indexOf(data!.getFieldValue("CUST_TYPE_DESC")), counter, num(data!.getFieldValue("TOTAL")))
             fi

             rs!.next(err=*break)

        wend
    
    fi

    rs!.close()

REM - Sales Fiscal Year To Date

    ytdTotal=0
    sql_chan=sqlunt
    sqlopen(sql_chan)stbl("+DBNAME")
    
    progressBar!.setValue(3)

    for per=1 to totalPeriods
        rem --- Get beginning and ending date for the accounting period
        call stbl("+DIR_PGM")+"adc_perioddates.aon",per,year,perBegin$,perEnd$,table_chans$[all],status

        sql$ = "SELECT SUM(TOTAL_SALES) AS TOTAL "
        sql$ = sql$ + "FROM OPT_INVHDR "
        sql$ = sql$ + "WHERE FIRM_ID = '" + firm_id$ + "' and AR_TYPE = '  ' and (INVOICE_DATE BETWEEN '" + perBegin$ + "' AND '" + perEnd$ + "') "
        
        sqlprep(sql_chan)sql$
        dim read_tpl$:sqltmpl(sql_chan)
        sqlexec(sql_chan)

        read_tpl$ = sqlfetch(sql_chan,err=*continue)
        ytdTotal=ytdTotal+read_tpl$.total

        lineChart1!.setXYValue(0,per,ytdTotal)
        lineChart1Big!.setXYValue(0,per,ytdTotal)
    next per
    sqlclose(sql_chan)
    lineChart1Big!.setSeriesName(0,"Fiscal YTD Sales " + str(ytdTotal:"$###,###,##0.00-"))
    lineChart1!.setXYValue(0,0,0)
    lineChart1Big!.setXYValue(0,0,0)

    progressBar!.setVisible(0)
    progressBarGroupBox!.setVisible(0)    
    chartGroupBox!.setVisible(1)
    
REM - set normal cursor
    window!.setCursor(0)

return

[Function (set_up_period)]
rem ' -----------------------------------------------------------------
rem ' set_up_period
rem ' -----------------------------------------------------------------

set_up_period:

    period = num(periods!.getFieldValue("CURRENT_PER"))
    totalPeriods = num(periods!.getFieldValue("TOTAL_PERS"))
    while period>totalPeriods
        period=period-1
        periods!.setFieldValue("CURRENT_PER",str(period:"00"))
    wend
    year = num(periods!.getFieldValue("CURRENT_YEAR"))
    yearStartDate$ = periods!.getFieldValue("CURRENT_YEAR") + periods!.getFieldValue("CAL_START_DATE")    

    rem --- Get beginning and ending date for the accounting period
    call stbl("+DIR_PGM")+"adc_perioddates.aon",period,year,periodBeginDate$,periodEndDate$,table_chans$[all],status

return

rem ' -----------------------------------------------------------------
rem ' get_fiscal_calendar
rem ' -----------------------------------------------------------------

get_fiscal_calendar:

    REM - get the accounting periods
    sql$ = "SELECT TOTAL_PERS, CAL_START_DATE, "
    sql$ = sql$ + "PER_ENDING_01, PER_ENDING_02, PER_ENDING_03, PER_ENDING_04, PER_ENDING_05, PER_ENDING_06, "
    sql$ = sql$ + "PER_ENDING_07, PER_ENDING_08, PER_ENDING_09, PER_ENDING_10, PER_ENDING_11, PER_ENDING_12, PER_ENDING_13 "
    sql$ = sql$ + "FROM GLS_CALENDAR "
    sql$ = sql$ + "WHERE FIRM_ID = '" + firm_id$ + "' AND YEAR = '" + periods!.getFieldValue("CURRENT_YEAR") + "'"
        
    sql_chan=sqlunt
    sqlopen(sql_chan)stbl("+DBNAME")
    sqlprep(sql_chan)sql$
    dim read_tpl$:sqltmpl(sql_chan)
    sqlexec(sql_chan)

    read_tpl$ = sqlfetch(sql_chan,err=*break)
    periods!.setFieldValue("TOTAL_PERS",read_tpl.total_pers$)
    periods!.setFieldValue("CAL_START_DATE",read_tpl.cal_start_date$)
    for per=1 to 13
        per$=str(per:"00")
        periods!.setFieldValue("PER_ENDING_"+per$,pad(field(read_tpl$,"PER_ENDING_"+per$),4))
    next per
    sqlclose(sql_chan)

    period = num(periods!.getFieldValue("CURRENT_PER"))
    totalPeriods = num(periods!.getFieldValue("TOTAL_PERS"))
    currentYear = num(periods!.getFieldValue("CURRENT_YEAR"))

    REM - Get the Month indicator
    if totalPeriods = 13 then
        window!.getControl("12perSlider").setVisible(0)
        for per=1 to 12
            window!.getControl("12per"+str(per:"00")).setVisible(0)
        next per

        slider! = window!.getControl("13perSlider")
        slider!.setVisible(1)
        for per=1 to 13
            window!.getControl("13per"+str(per:"00")).setVisible(1)
        next per
    else
        slider! = window!.getControl("12perSlider")
        slider!.setVisible(1)
        for per=1 to 12
            window!.getControl("12per"+str(per:"00")).setVisible(1)
        next per

        window!.getControl("13perSlider").setVisible(0)
        for per=1 to 13
            window!.getControl("13per"+str(per:"00")).setVisible(0)
        next per
    fi
    slider!.setValue(period)

    totPer$=str(totalPeriods:"00")
    for x = 1 to totalPeriods
        per$=str(x:"00")
        label$ = periods!.getFieldValue("PER_ENDING_"+per$)
        label$ = label$(1,2) + "/" + label$(3,2)
        window!.getControl(totPer$+"per"+per$).setText(label$)
    next x
    
return
